{
	"id": "d0496efb158919196ed3ae74bacad5d6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AutomatedMarketMaker.sol": {
				"content": "\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n/// @title Automated Market Maker with Liquidity Token\r\ncontract AutomatedMarketMaker is ERC20 {\r\n\r\n      IERC20 public tokenA;\r\n    IERC20 public tokenB;\r\n\r\n    // track the number of token in the reserve\r\n    // These two numbers track how much of each token is currently locked inside the AMM contract.\r\n    // Why do we need this?\r\n\r\n// Because the **entire AMM logic — swaps, prices, LP shares — depends on knowing how much of each token is in the pool.**\r\n    uint256 public reserveA;\r\n    uint256 public reserveB;\r\n\r\n    address public owner;\r\n\r\n\r\n// These are events, and while they don’t affect how the contract works under the hood, they play a huge role in how apps and users interact with it.\r\n    \r\nevent LiquidityAdded(address indexed provider, uint256 amountA, uint256 amountB, uint256 liquidity);\r\nevent LiquidityRemoved(address indexed provider, uint256 amountA, uint256 amountB, uint256 liquidity);\r\nevent TokensSwapped(address indexed trader, address tokenIn, uint256 amountIn, address tokenOut, uint256 amountOut);\r\n\r\n\r\n      constructor(address _tokenA, address _tokenB, string memory _name, string memory _symbol) ERC20(_name, _symbol) {\r\n  tokenA = IERC20(_tokenA);\r\n  tokenB = IERC20(_tokenB);\r\n  owner = msg.sender;\r\n}\r\n\r\n\r\n \r\n// Returns the smaller of two unsigned integers\r\nfunction min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Use a ternary operator: if a < b, return a; else return b\r\n    return a < b ? a : b;\r\n}\r\n\r\n\r\n// Returns the integer square root of a number using the Babylonian method\r\nfunction sqrt(uint256 y) internal pure returns (uint256 z) {\r\n    // If y > 3, use the Babylonian method to approximate the square root\r\n    if (y > 3) {\r\n        // Start with an initial guess: z = y\r\n        z = y;\r\n\r\n        // Another guess: x = (y / 2) + 1\r\n        uint256 x = y / 2 + 1;\r\n\r\n        // Repeat approximation until x >= z\r\n        // The loop stops when the estimate stops improving\r\n        while (x < z) {\r\n            z = x;\r\n            // Average of x and y / x — classic Babylonian step\r\n            x = (y / x + x) / 2;\r\n        }\r\n    } \r\n    // Handle small values of y (1 to 3): return 1\r\n    else if (y != 0) {\r\n        z = 1;\r\n    }\r\n    // If y == 0, z stays as default 0 (implicitly returned)\r\n}\r\n\r\n\r\n// Main function to allow users to add liquidity to a tokenA/tokenB pool\r\nfunction addLiquidity(uint256 amountA, uint256 amountB) external {\r\n    // Ensure that both input amounts are greater than 0\r\n    require(amountA > 0 && amountB > 0, \"Amounts must be > 0\");\r\n\r\n    // Transfer tokens from the user to the contract (liquidity pool)\r\n    tokenA.transferFrom(msg.sender, address(this), amountA);\r\n    tokenB.transferFrom(msg.sender, address(this), amountB);\r\n\r\n    // Declare a variable to hold the amount of LP tokens to be minted\r\n    uint256 liquidity;\r\n\r\n    // If this is the first liquidity being added, total supply is 0\r\n    if (totalSupply() == 0) {\r\n        // Use geometric mean for initial LP token supply\r\n        liquidity = sqrt(amountA * amountB);\r\n    } else {\r\n        // For subsequent adds, calculate LP tokens based on current reserve ratio\r\n        liquidity = min(\r\n            amountA * totalSupply() / reserveA,  // LP tokens based on tokenA contribution\r\n            amountB * totalSupply() / reserveB   // LP tokens based on tokenB contribution\r\n        );\r\n    }\r\n\r\n    // Mint LP tokens to the user as proof of their share in the pool\r\n    _mint(msg.sender, liquidity);\r\n\r\n    // Update internal reserves to match the actual token amounts now in the contract\r\n    reserveA += amountA;\r\n    reserveB += amountB;\r\n\r\n    // Emit an event to log the liquidity addition\r\n    emit LiquidityAdded(msg.sender, amountA, amountB, liquidity);\r\n}\r\n\r\n\r\n\r\nfunction removeLiquidity(uint256 liquidityToRemove) external returns (uint256 amountAOut, uint256 amountBOut) {\r\n    // Ensure the user is removing more than zero liquidity\r\n    require(liquidityToRemove > 0, \"Liquidity to remove must be > 0\");\r\n\r\n    // Check the user has enough LP tokens to remove the specified liquidity\r\n    require(balanceOf(msg.sender) >= liquidityToRemove, \"Insufficient liquidity tokens\");\r\n\r\n    // Get the total supply of LP tokens in existence\r\n    uint256 totalLiquidity = totalSupply();\r\n    require(totalLiquidity > 0, \"No liquidity in the pool\");\r\n\r\n    // Calculate how much tokenA and tokenB the user should receive based on their share\r\n    amountAOut = (liquidityToRemove * reserveA )/ totalLiquidity;\r\n    amountBOut = (liquidityToRemove * reserveB) / totalLiquidity;\r\n\r\n    // Ensure the calculated output is non-zero (i.e., reserves aren't too low)\r\n    require(amountAOut > 0 && amountBOut > 0, \"Insufficient reserves for requested liquidity\");\r\n\r\n    // Update the internal reserves to reflect the withdrawal\r\n    reserveA -= amountAOut;\r\n    reserveB -= amountBOut;\r\n\r\n    // Burn the LP tokens from the user, reducing their pool ownership\r\n    _burn(msg.sender, liquidityToRemove);\r\n\r\n    // Transfer the underlying tokens back to the user\r\n    tokenA.transfer(msg.sender, amountAOut);\r\n    tokenB.transfer(msg.sender, amountBOut);\r\n\r\n    // Emit an event to log the removal of liquidity\r\n    emit LiquidityRemoved(msg.sender, amountAOut, amountBOut, liquidityToRemove);\r\n\r\n    // Return the amounts of tokens withdrawn\r\n    return (amountAOut, amountBOut);\r\n}\r\n\r\n\r\n\r\nfunction swapAforB(uint256 amountAIn, uint256 minBOut) external {\r\n    // Make sure input amount is non-zero\r\n    require(amountAIn > 0, \"Amount must be > 0\");\r\n\r\n    // Check if reserves are available to make a swap\r\n    require(reserveA > 0 && reserveB > 0, \"Insufficient reserves\");\r\n\r\n    // Apply a 0.3% fee (commonly used in DEXs like Uniswap)\r\n    uint256 amountAInWithFee = amountAIn * 997 / 1000;\r\n\r\n    // Constant product formula: x * y = k => calculate output\r\n    uint256 amountBOut = reserveB * amountAInWithFee / (reserveA + amountAInWithFee);\r\n\r\n    // Ensure output meets user's minimum expected amount (slippage protection)\r\n    require(amountBOut >= minBOut, \"Slippage too high\");\r\n\r\n    // Transfer tokenA from user to contract\r\n    tokenA.transferFrom(msg.sender, address(this), amountAIn);\r\n\r\n    // Transfer tokenB to the user\r\n    tokenB.transfer(msg.sender, amountBOut);\r\n\r\n    // Update reserves: add effective tokenA amount (after fee), reduce tokenB\r\n    reserveA += amountAInWithFee;\r\n    reserveB -= amountBOut;\r\n\r\n    // Emit event to log the swap\r\n    emit TokensSwapped(msg.sender, address(tokenA), amountAIn, address(tokenB), amountBOut);\r\n}\r\n\r\n\r\n\r\n \r\nfunction swapBforA(uint256 amountBIn, uint256 minAOut) external {\r\n    // Check for valid input\r\n    require(amountBIn > 0, \"Amount must be > 0\");\r\n\r\n    // Ensure reserves exist\r\n    require(reserveA > 0 && reserveB > 0, \"Insufficient reserves\");\r\n\r\n    // Apply 0.3% fee to input\r\n    uint256 amountBInWithFee = amountBIn * 997 / 1000;\r\n\r\n    // Calculate output amount using constant product formula\r\n    uint256 amountAOut = reserveA * amountBInWithFee / (reserveB + amountBInWithFee);\r\n\r\n    // Ensure slippage isn't too high\r\n    require(amountAOut >= minAOut, \"Slippage too high\");\r\n\r\n    // Take tokenB from sender\r\n    tokenB.transferFrom(msg.sender, address(this), amountBIn);\r\n\r\n    // Send tokenA to sender\r\n    tokenA.transfer(msg.sender, amountAOut);\r\n\r\n    // Update reserves accordingly\r\n    reserveB += amountBInWithFee;\r\n    reserveA -= amountAOut;\r\n\r\n    // Emit swap event\r\n    emit TokensSwapped(msg.sender, address(tokenB), amountBIn, address(tokenA), amountAOut);\r\n}\r\n\r\n\r\n\r\nfunction getReserves() external view returns (uint256, uint256) {\r\n    // Allow external users to view the current reserves of tokenA and tokenB\r\n    return (reserveA, reserveB);\r\n}\r\n         \r\n\r\n}\r\n  "
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/AutomatedMarketMaker.sol": {
				"AutomatedMarketMaker": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenB",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trader",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "TokensSwapped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "liquidityToRemove",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountAOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountAIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minBOut",
									"type": "uint256"
								}
							],
							"name": "swapAforB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountBIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minAOut",
									"type": "uint256"
								}
							],
							"name": "swapBforA",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"title": "Automated Market Maker with Liquidity Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AutomatedMarketMaker.sol\":180:7880  contract AutomatedMarketMaker is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/AutomatedMarketMaker.sol\":1176:1373  constructor(address _tokenA, address _tokenB, string memory _name, string memory _symbol) ERC20(_name, _symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/AutomatedMarketMaker.sol\":1272:1277  _name */\n  dup2\n    /* \"contracts/AutomatedMarketMaker.sol\":1279:1286  _symbol */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/AutomatedMarketMaker.sol\":1309:1316  _tokenA */\n  dup4\n    /* \"contracts/AutomatedMarketMaker.sol\":1293:1299  tokenA */\n  0x05\n  0x00\n    /* \"contracts/AutomatedMarketMaker.sol\":1293:1317  tokenA = IERC20(_tokenA) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AutomatedMarketMaker.sol\":1338:1345  _tokenB */\n  dup3\n    /* \"contracts/AutomatedMarketMaker.sol\":1322:1328  tokenB */\n  0x06\n  0x00\n    /* \"contracts/AutomatedMarketMaker.sol\":1322:1346  tokenB = IERC20(_tokenB) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AutomatedMarketMaker.sol\":1359:1369  msg.sender */\n  caller\n    /* \"contracts/AutomatedMarketMaker.sol\":1351:1356  owner */\n  0x09\n  0x00\n    /* \"contracts/AutomatedMarketMaker.sol\":1351:1369  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AutomatedMarketMaker.sol\":1176:1373  constructor(address _tokenA, address _tokenB, string memory _name, string memory _symbol) ERC20(_name, _symbol) {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/AutomatedMarketMaker.sol\":180:7880  contract AutomatedMarketMaker is ERC20 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_17:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_16\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_18:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_17\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_19:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  dup1\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1085   */\ntag_20:\n    /* \"#utility.yul\":1077:1078   */\n  0x00\n    /* \"#utility.yul\":1074:1075   */\n  dup1\n    /* \"#utility.yul\":1067:1079   */\n  revert\n    /* \"#utility.yul\":1091:1193   */\ntag_21:\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1183:1185   */\n  0x1f\n    /* \"#utility.yul\":1179:1186   */\n  not\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1167:1172   */\n  dup4\n    /* \"#utility.yul\":1163:1177   */\n  add\n    /* \"#utility.yul\":1159:1187   */\n  and\n    /* \"#utility.yul\":1149:1187   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1199:1379   */\ntag_22:\n    /* \"#utility.yul\":1247:1324   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1237:1325   */\n  mstore\n    /* \"#utility.yul\":1344:1348   */\n  0x41\n    /* \"#utility.yul\":1341:1342   */\n  0x04\n    /* \"#utility.yul\":1334:1349   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1385:1666   */\ntag_23:\n    /* \"#utility.yul\":1468:1495   */\n  tag_65\n    /* \"#utility.yul\":1490:1494   */\n  dup3\n    /* \"#utility.yul\":1468:1495   */\n  tag_21\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1460:1466   */\n  dup2\n    /* \"#utility.yul\":1456:1496   */\n  add\n    /* \"#utility.yul\":1598:1604   */\n  dup2\n    /* \"#utility.yul\":1586:1596   */\n  dup2\n    /* \"#utility.yul\":1583:1605   */\n  lt\n    /* \"#utility.yul\":1562:1580   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1550:1560   */\n  dup3\n    /* \"#utility.yul\":1547:1581   */\n  gt\n    /* \"#utility.yul\":1544:1606   */\n  or\n    /* \"#utility.yul\":1541:1629   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1609:1627   */\n  tag_67\n  tag_22\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1541:1629   */\ntag_66:\n    /* \"#utility.yul\":1649:1659   */\n  dup1\n    /* \"#utility.yul\":1645:1647   */\n  0x40\n    /* \"#utility.yul\":1638:1660   */\n  mstore\n    /* \"#utility.yul\":1428:1666   */\n  pop\n    /* \"#utility.yul\":1385:1666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:1801   */\ntag_24:\n    /* \"#utility.yul\":1706:1712   */\n  0x00\n    /* \"#utility.yul\":1733:1753   */\n  tag_69\n  tag_12\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1723:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_70\n    /* \"#utility.yul\":1790:1794   */\n  dup3\n    /* \"#utility.yul\":1782:1788   */\n  dup3\n    /* \"#utility.yul\":1762:1795   */\n  tag_23\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1672:1801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:2115   */\ntag_25:\n    /* \"#utility.yul\":1869:1873   */\n  0x00\n    /* \"#utility.yul\":1959:1977   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1951:1957   */\n  dup3\n    /* \"#utility.yul\":1948:1978   */\n  gt\n    /* \"#utility.yul\":1945:2001   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1981:1999   */\n  tag_73\n  tag_22\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1945:2001   */\ntag_72:\n    /* \"#utility.yul\":2019:2048   */\n  tag_74\n    /* \"#utility.yul\":2041:2047   */\n  dup3\n    /* \"#utility.yul\":2019:2048   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2011:2048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2097:2101   */\n  dup2\n    /* \"#utility.yul\":2093:2108   */\n  add\n    /* \"#utility.yul\":2085:2108   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:2115   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2121:2260   */\ntag_26:\n    /* \"#utility.yul\":2210:2216   */\n  dup3\n    /* \"#utility.yul\":2205:2208   */\n  dup2\n    /* \"#utility.yul\":2200:2203   */\n  dup4\n    /* \"#utility.yul\":2194:2217   */\n  mcopy\n    /* \"#utility.yul\":2251:2252   */\n  0x00\n    /* \"#utility.yul\":2242:2248   */\n  dup4\n    /* \"#utility.yul\":2237:2240   */\n  dup4\n    /* \"#utility.yul\":2233:2249   */\n  add\n    /* \"#utility.yul\":2226:2253   */\n  mstore\n    /* \"#utility.yul\":2121:2260   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2266:2700   */\ntag_27:\n    /* \"#utility.yul\":2355:2360   */\n  0x00\n    /* \"#utility.yul\":2380:2446   */\n  tag_77\n    /* \"#utility.yul\":2396:2445   */\n  tag_78\n    /* \"#utility.yul\":2438:2444   */\n  dup5\n    /* \"#utility.yul\":2396:2445   */\n  tag_25\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2380:2446   */\n  tag_24\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2371:2446   */\n  swap1\n  pop\n    /* \"#utility.yul\":2469:2475   */\n  dup3\n    /* \"#utility.yul\":2462:2467   */\n  dup2\n    /* \"#utility.yul\":2455:2476   */\n  mstore\n    /* \"#utility.yul\":2507:2511   */\n  0x20\n    /* \"#utility.yul\":2500:2505   */\n  dup2\n    /* \"#utility.yul\":2496:2512   */\n  add\n    /* \"#utility.yul\":2545:2548   */\n  dup5\n    /* \"#utility.yul\":2536:2542   */\n  dup5\n    /* \"#utility.yul\":2531:2534   */\n  dup5\n    /* \"#utility.yul\":2527:2543   */\n  add\n    /* \"#utility.yul\":2524:2549   */\n  gt\n    /* \"#utility.yul\":2521:2633   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2552:2631   */\n  tag_80\n  tag_20\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2521:2633   */\ntag_79:\n    /* \"#utility.yul\":2642:2694   */\n  tag_81\n    /* \"#utility.yul\":2687:2693   */\n  dup5\n    /* \"#utility.yul\":2682:2685   */\n  dup3\n    /* \"#utility.yul\":2677:2680   */\n  dup6\n    /* \"#utility.yul\":2642:2694   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2361:2700   */\n  pop\n    /* \"#utility.yul\":2266:2700   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2720:3075   */\ntag_28:\n    /* \"#utility.yul\":2787:2792   */\n  0x00\n    /* \"#utility.yul\":2836:2839   */\n  dup3\n    /* \"#utility.yul\":2829:2833   */\n  0x1f\n    /* \"#utility.yul\":2821:2827   */\n  dup4\n    /* \"#utility.yul\":2817:2834   */\n  add\n    /* \"#utility.yul\":2813:2840   */\n  slt\n    /* \"#utility.yul\":2803:2925   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2844:2923   */\n  tag_84\n  tag_19\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2803:2925   */\ntag_83:\n    /* \"#utility.yul\":2954:2960   */\n  dup2\n    /* \"#utility.yul\":2948:2961   */\n  mload\n    /* \"#utility.yul\":2979:3069   */\n  tag_85\n    /* \"#utility.yul\":3065:3068   */\n  dup5\n    /* \"#utility.yul\":3057:3063   */\n  dup3\n    /* \"#utility.yul\":3050:3054   */\n  0x20\n    /* \"#utility.yul\":3042:3048   */\n  dup7\n    /* \"#utility.yul\":3038:3055   */\n  add\n    /* \"#utility.yul\":2979:3069   */\n  tag_27\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2970:3069   */\n  swap2\n  pop\n    /* \"#utility.yul\":2793:3075   */\n  pop\n    /* \"#utility.yul\":2720:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:4247   */\ntag_3:\n    /* \"#utility.yul\":3198:3204   */\n  0x00\n    /* \"#utility.yul\":3206:3212   */\n  dup1\n    /* \"#utility.yul\":3214:3220   */\n  0x00\n    /* \"#utility.yul\":3222:3228   */\n  dup1\n    /* \"#utility.yul\":3271:3274   */\n  0x80\n    /* \"#utility.yul\":3259:3268   */\n  dup6\n    /* \"#utility.yul\":3250:3257   */\n  dup8\n    /* \"#utility.yul\":3246:3269   */\n  sub\n    /* \"#utility.yul\":3242:3275   */\n  slt\n    /* \"#utility.yul\":3239:3359   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3278:3357   */\n  tag_88\n  tag_13\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3239:3359   */\ntag_87:\n    /* \"#utility.yul\":3398:3399   */\n  0x00\n    /* \"#utility.yul\":3423:3487   */\n  tag_89\n    /* \"#utility.yul\":3479:3486   */\n  dup8\n    /* \"#utility.yul\":3470:3476   */\n  dup3\n    /* \"#utility.yul\":3459:3468   */\n  dup9\n    /* \"#utility.yul\":3455:3477   */\n  add\n    /* \"#utility.yul\":3423:3487   */\n  tag_18\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3413:3487   */\n  swap5\n  pop\n    /* \"#utility.yul\":3369:3497   */\n  pop\n    /* \"#utility.yul\":3536:3538   */\n  0x20\n    /* \"#utility.yul\":3562:3626   */\n  tag_90\n    /* \"#utility.yul\":3618:3625   */\n  dup8\n    /* \"#utility.yul\":3609:3615   */\n  dup3\n    /* \"#utility.yul\":3598:3607   */\n  dup9\n    /* \"#utility.yul\":3594:3616   */\n  add\n    /* \"#utility.yul\":3562:3626   */\n  tag_18\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3552:3626   */\n  swap4\n  pop\n    /* \"#utility.yul\":3507:3636   */\n  pop\n    /* \"#utility.yul\":3696:3698   */\n  0x40\n    /* \"#utility.yul\":3685:3694   */\n  dup6\n    /* \"#utility.yul\":3681:3699   */\n  add\n    /* \"#utility.yul\":3675:3700   */\n  mload\n    /* \"#utility.yul\":3727:3745   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3719:3725   */\n  dup2\n    /* \"#utility.yul\":3716:3746   */\n  gt\n    /* \"#utility.yul\":3713:3830   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3749:3828   */\n  tag_92\n  tag_14\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3713:3830   */\ntag_91:\n    /* \"#utility.yul\":3854:3928   */\n  tag_93\n    /* \"#utility.yul\":3920:3927   */\n  dup8\n    /* \"#utility.yul\":3911:3917   */\n  dup3\n    /* \"#utility.yul\":3900:3909   */\n  dup9\n    /* \"#utility.yul\":3896:3918   */\n  add\n    /* \"#utility.yul\":3854:3928   */\n  tag_28\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3844:3928   */\n  swap3\n  pop\n    /* \"#utility.yul\":3646:3938   */\n  pop\n    /* \"#utility.yul\":3998:4000   */\n  0x60\n    /* \"#utility.yul\":3987:3996   */\n  dup6\n    /* \"#utility.yul\":3983:4001   */\n  add\n    /* \"#utility.yul\":3977:4002   */\n  mload\n    /* \"#utility.yul\":4029:4047   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4021:4027   */\n  dup2\n    /* \"#utility.yul\":4018:4048   */\n  gt\n    /* \"#utility.yul\":4015:4132   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":4051:4130   */\n  tag_95\n  tag_14\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4015:4132   */\ntag_94:\n    /* \"#utility.yul\":4156:4230   */\n  tag_96\n    /* \"#utility.yul\":4222:4229   */\n  dup8\n    /* \"#utility.yul\":4213:4219   */\n  dup3\n    /* \"#utility.yul\":4202:4211   */\n  dup9\n    /* \"#utility.yul\":4198:4220   */\n  add\n    /* \"#utility.yul\":4156:4230   */\n  tag_28\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4146:4230   */\n  swap2\n  pop\n    /* \"#utility.yul\":3948:4240   */\n  pop\n    /* \"#utility.yul\":3081:4247   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4253:4352   */\ntag_29:\n    /* \"#utility.yul\":4305:4311   */\n  0x00\n    /* \"#utility.yul\":4339:4344   */\n  dup2\n    /* \"#utility.yul\":4333:4345   */\n  mload\n    /* \"#utility.yul\":4323:4345   */\n  swap1\n  pop\n    /* \"#utility.yul\":4253:4352   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4358:4538   */\ntag_30:\n    /* \"#utility.yul\":4406:4483   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4403:4404   */\n  0x00\n    /* \"#utility.yul\":4396:4484   */\n  mstore\n    /* \"#utility.yul\":4503:4507   */\n  0x22\n    /* \"#utility.yul\":4500:4501   */\n  0x04\n    /* \"#utility.yul\":4493:4508   */\n  mstore\n    /* \"#utility.yul\":4527:4531   */\n  0x24\n    /* \"#utility.yul\":4524:4525   */\n  0x00\n    /* \"#utility.yul\":4517:4532   */\n  revert\n    /* \"#utility.yul\":4544:4864   */\ntag_31:\n    /* \"#utility.yul\":4588:4594   */\n  0x00\n    /* \"#utility.yul\":4625:4626   */\n  0x02\n    /* \"#utility.yul\":4619:4623   */\n  dup3\n    /* \"#utility.yul\":4615:4627   */\n  div\n    /* \"#utility.yul\":4605:4627   */\n  swap1\n  pop\n    /* \"#utility.yul\":4672:4673   */\n  0x01\n    /* \"#utility.yul\":4666:4670   */\n  dup3\n    /* \"#utility.yul\":4662:4674   */\n  and\n    /* \"#utility.yul\":4693:4711   */\n  dup1\n    /* \"#utility.yul\":4683:4764   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4749:4753   */\n  0x7f\n    /* \"#utility.yul\":4741:4747   */\n  dup3\n    /* \"#utility.yul\":4737:4754   */\n  and\n    /* \"#utility.yul\":4727:4754   */\n  swap2\n  pop\n    /* \"#utility.yul\":4683:4764   */\ntag_100:\n    /* \"#utility.yul\":4811:4813   */\n  0x20\n    /* \"#utility.yul\":4803:4809   */\n  dup3\n    /* \"#utility.yul\":4800:4814   */\n  lt\n    /* \"#utility.yul\":4780:4798   */\n  dup2\n    /* \"#utility.yul\":4777:4815   */\n  sub\n    /* \"#utility.yul\":4774:4858   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4830:4848   */\n  tag_102\n  tag_30\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4774:4858   */\ntag_101:\n    /* \"#utility.yul\":4595:4864   */\n  pop\n    /* \"#utility.yul\":4544:4864   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4870:5011   */\ntag_32:\n    /* \"#utility.yul\":4919:4923   */\n  0x00\n    /* \"#utility.yul\":4942:4945   */\n  dup2\n    /* \"#utility.yul\":4934:4945   */\n  swap1\n  pop\n    /* \"#utility.yul\":4965:4968   */\n  dup2\n    /* \"#utility.yul\":4962:4963   */\n  0x00\n    /* \"#utility.yul\":4955:4969   */\n  mstore\n    /* \"#utility.yul\":4999:5003   */\n  0x20\n    /* \"#utility.yul\":4996:4997   */\n  0x00\n    /* \"#utility.yul\":4986:5004   */\n  keccak256\n    /* \"#utility.yul\":4978:5004   */\n  swap1\n  pop\n    /* \"#utility.yul\":4870:5011   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5017:5110   */\ntag_33:\n    /* \"#utility.yul\":5054:5060   */\n  0x00\n    /* \"#utility.yul\":5101:5103   */\n  0x20\n    /* \"#utility.yul\":5096:5098   */\n  0x1f\n    /* \"#utility.yul\":5089:5094   */\n  dup4\n    /* \"#utility.yul\":5085:5099   */\n  add\n    /* \"#utility.yul\":5081:5104   */\n  div\n    /* \"#utility.yul\":5071:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5017:5110   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5116:5223   */\ntag_34:\n    /* \"#utility.yul\":5160:5168   */\n  0x00\n    /* \"#utility.yul\":5210:5215   */\n  dup3\n    /* \"#utility.yul\":5204:5208   */\n  dup3\n    /* \"#utility.yul\":5200:5216   */\n  shl\n    /* \"#utility.yul\":5179:5216   */\n  swap1\n  pop\n    /* \"#utility.yul\":5116:5223   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5229:5622   */\ntag_35:\n    /* \"#utility.yul\":5298:5304   */\n  0x00\n    /* \"#utility.yul\":5348:5349   */\n  0x08\n    /* \"#utility.yul\":5336:5346   */\n  dup4\n    /* \"#utility.yul\":5332:5350   */\n  mul\n    /* \"#utility.yul\":5371:5468   */\n  tag_107\n    /* \"#utility.yul\":5401:5467   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5390:5399   */\n  dup3\n    /* \"#utility.yul\":5371:5468   */\n  tag_34\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5489:5528   */\n  tag_108\n    /* \"#utility.yul\":5519:5527   */\n  dup7\n    /* \"#utility.yul\":5508:5517   */\n  dup4\n    /* \"#utility.yul\":5489:5528   */\n  tag_34\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5477:5528   */\n  swap6\n  pop\n    /* \"#utility.yul\":5561:5565   */\n  dup1\n    /* \"#utility.yul\":5557:5566   */\n  not\n    /* \"#utility.yul\":5550:5555   */\n  dup5\n    /* \"#utility.yul\":5546:5567   */\n  and\n    /* \"#utility.yul\":5537:5567   */\n  swap4\n  pop\n    /* \"#utility.yul\":5610:5614   */\n  dup1\n    /* \"#utility.yul\":5600:5608   */\n  dup7\n    /* \"#utility.yul\":5596:5615   */\n  and\n    /* \"#utility.yul\":5589:5594   */\n  dup5\n    /* \"#utility.yul\":5586:5616   */\n  or\n    /* \"#utility.yul\":5576:5616   */\n  swap3\n  pop\n    /* \"#utility.yul\":5305:5622   */\n  pop\n  pop\n    /* \"#utility.yul\":5229:5622   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5628:5705   */\ntag_36:\n    /* \"#utility.yul\":5665:5672   */\n  0x00\n    /* \"#utility.yul\":5694:5699   */\n  dup2\n    /* \"#utility.yul\":5683:5699   */\n  swap1\n  pop\n    /* \"#utility.yul\":5628:5705   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5711:5771   */\ntag_37:\n    /* \"#utility.yul\":5739:5742   */\n  0x00\n    /* \"#utility.yul\":5760:5765   */\n  dup2\n    /* \"#utility.yul\":5753:5765   */\n  swap1\n  pop\n    /* \"#utility.yul\":5711:5771   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5777:5919   */\ntag_38:\n    /* \"#utility.yul\":5827:5836   */\n  0x00\n    /* \"#utility.yul\":5860:5913   */\n  tag_112\n    /* \"#utility.yul\":5878:5912   */\n  tag_113\n    /* \"#utility.yul\":5887:5911   */\n  tag_114\n    /* \"#utility.yul\":5905:5910   */\n  dup5\n    /* \"#utility.yul\":5887:5911   */\n  tag_36\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5878:5912   */\n  tag_37\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5860:5913   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5847:5913   */\n  swap1\n  pop\n    /* \"#utility.yul\":5777:5919   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5925:6000   */\ntag_39:\n    /* \"#utility.yul\":5968:5971   */\n  0x00\n    /* \"#utility.yul\":5989:5994   */\n  dup2\n    /* \"#utility.yul\":5982:5994   */\n  swap1\n  pop\n    /* \"#utility.yul\":5925:6000   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6006:6275   */\ntag_40:\n    /* \"#utility.yul\":6116:6155   */\n  tag_117\n    /* \"#utility.yul\":6147:6154   */\n  dup4\n    /* \"#utility.yul\":6116:6155   */\n  tag_38\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":6177:6268   */\n  tag_118\n    /* \"#utility.yul\":6226:6267   */\n  tag_119\n    /* \"#utility.yul\":6250:6266   */\n  dup3\n    /* \"#utility.yul\":6226:6267   */\n  tag_39\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6218:6224   */\n  dup5\n    /* \"#utility.yul\":6211:6215   */\n  dup5\n    /* \"#utility.yul\":6205:6216   */\n  sload\n    /* \"#utility.yul\":6177:6268   */\n  tag_35\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6171:6175   */\n  dup3\n    /* \"#utility.yul\":6164:6269   */\n  sstore\n    /* \"#utility.yul\":6082:6275   */\n  pop\n    /* \"#utility.yul\":6006:6275   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6281:6354   */\ntag_41:\n    /* \"#utility.yul\":6326:6329   */\n  0x00\n    /* \"#utility.yul\":6281:6354   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6360:6549   */\ntag_42:\n    /* \"#utility.yul\":6437:6469   */\n  tag_122\n  tag_41\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6478:6543   */\n  tag_123\n    /* \"#utility.yul\":6536:6542   */\n  dup2\n    /* \"#utility.yul\":6528:6534   */\n  dup5\n    /* \"#utility.yul\":6522:6526   */\n  dup5\n    /* \"#utility.yul\":6478:6543   */\n  tag_40\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6413:6549   */\n  pop\n    /* \"#utility.yul\":6360:6549   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6555:6741   */\ntag_43:\n    /* \"#utility.yul\":6615:6735   */\ntag_125:\n    /* \"#utility.yul\":6632:6635   */\n  dup2\n    /* \"#utility.yul\":6625:6630   */\n  dup2\n    /* \"#utility.yul\":6622:6636   */\n  lt\n    /* \"#utility.yul\":6615:6735   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":6686:6725   */\n  tag_128\n    /* \"#utility.yul\":6723:6724   */\n  0x00\n    /* \"#utility.yul\":6716:6721   */\n  dup3\n    /* \"#utility.yul\":6686:6725   */\n  tag_42\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6659:6660   */\n  0x01\n    /* \"#utility.yul\":6652:6657   */\n  dup2\n    /* \"#utility.yul\":6648:6661   */\n  add\n    /* \"#utility.yul\":6639:6661   */\n  swap1\n  pop\n    /* \"#utility.yul\":6615:6735   */\n  jump(tag_125)\ntag_127:\n    /* \"#utility.yul\":6555:6741   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6747:7290   */\ntag_44:\n    /* \"#utility.yul\":6848:6850   */\n  0x1f\n    /* \"#utility.yul\":6843:6846   */\n  dup3\n    /* \"#utility.yul\":6840:6851   */\n  gt\n    /* \"#utility.yul\":6837:7283   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":6882:6920   */\n  tag_131\n    /* \"#utility.yul\":6914:6919   */\n  dup2\n    /* \"#utility.yul\":6882:6920   */\n  tag_32\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6966:6995   */\n  tag_132\n    /* \"#utility.yul\":6984:6994   */\n  dup5\n    /* \"#utility.yul\":6966:6995   */\n  tag_33\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6956:6964   */\n  dup2\n    /* \"#utility.yul\":6952:6996   */\n  add\n    /* \"#utility.yul\":7149:7151   */\n  0x20\n    /* \"#utility.yul\":7137:7147   */\n  dup6\n    /* \"#utility.yul\":7134:7152   */\n  lt\n    /* \"#utility.yul\":7131:7180   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":7170:7178   */\n  dup2\n    /* \"#utility.yul\":7155:7178   */\n  swap1\n  pop\n    /* \"#utility.yul\":7131:7180   */\ntag_133:\n    /* \"#utility.yul\":7193:7273   */\n  tag_134\n    /* \"#utility.yul\":7249:7271   */\n  tag_135\n    /* \"#utility.yul\":7267:7270   */\n  dup6\n    /* \"#utility.yul\":7249:7271   */\n  tag_33\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7239:7247   */\n  dup4\n    /* \"#utility.yul\":7235:7272   */\n  add\n    /* \"#utility.yul\":7222:7233   */\n  dup3\n    /* \"#utility.yul\":7193:7273   */\n  tag_43\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6852:7283   */\n  pop\n  pop\n    /* \"#utility.yul\":6837:7283   */\ntag_130:\n    /* \"#utility.yul\":6747:7290   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7296:7413   */\ntag_45:\n    /* \"#utility.yul\":7350:7358   */\n  0x00\n    /* \"#utility.yul\":7400:7405   */\n  dup3\n    /* \"#utility.yul\":7394:7398   */\n  dup3\n    /* \"#utility.yul\":7390:7406   */\n  shr\n    /* \"#utility.yul\":7369:7406   */\n  swap1\n  pop\n    /* \"#utility.yul\":7296:7413   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7419:7588   */\ntag_46:\n    /* \"#utility.yul\":7463:7469   */\n  0x00\n    /* \"#utility.yul\":7496:7547   */\n  tag_138\n    /* \"#utility.yul\":7544:7545   */\n  0x00\n    /* \"#utility.yul\":7540:7546   */\n  not\n    /* \"#utility.yul\":7532:7537   */\n  dup5\n    /* \"#utility.yul\":7529:7530   */\n  0x08\n    /* \"#utility.yul\":7525:7538   */\n  mul\n    /* \"#utility.yul\":7496:7547   */\n  tag_45\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7492:7548   */\n  not\n    /* \"#utility.yul\":7577:7581   */\n  dup1\n    /* \"#utility.yul\":7571:7575   */\n  dup4\n    /* \"#utility.yul\":7567:7582   */\n  and\n    /* \"#utility.yul\":7557:7582   */\n  swap2\n  pop\n    /* \"#utility.yul\":7470:7588   */\n  pop\n    /* \"#utility.yul\":7419:7588   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7593:7888   */\ntag_47:\n    /* \"#utility.yul\":7669:7673   */\n  0x00\n    /* \"#utility.yul\":7815:7844   */\n  tag_140\n    /* \"#utility.yul\":7840:7843   */\n  dup4\n    /* \"#utility.yul\":7834:7838   */\n  dup4\n    /* \"#utility.yul\":7815:7844   */\n  tag_46\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7807:7844   */\n  swap2\n  pop\n    /* \"#utility.yul\":7877:7880   */\n  dup3\n    /* \"#utility.yul\":7874:7875   */\n  0x02\n    /* \"#utility.yul\":7870:7881   */\n  mul\n    /* \"#utility.yul\":7864:7868   */\n  dup3\n    /* \"#utility.yul\":7861:7882   */\n  or\n    /* \"#utility.yul\":7853:7882   */\n  swap1\n  pop\n    /* \"#utility.yul\":7593:7888   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7893:9288   */\ntag_8:\n    /* \"#utility.yul\":8010:8047   */\n  tag_142\n    /* \"#utility.yul\":8043:8046   */\n  dup3\n    /* \"#utility.yul\":8010:8047   */\n  tag_29\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":8112:8130   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8104:8110   */\n  dup2\n    /* \"#utility.yul\":8101:8131   */\n  gt\n    /* \"#utility.yul\":8098:8154   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":8134:8152   */\n  tag_144\n  tag_22\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":8098:8154   */\ntag_143:\n    /* \"#utility.yul\":8178:8216   */\n  tag_145\n    /* \"#utility.yul\":8210:8214   */\n  dup3\n    /* \"#utility.yul\":8204:8215   */\n  sload\n    /* \"#utility.yul\":8178:8216   */\n  tag_31\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8263:8330   */\n  tag_146\n    /* \"#utility.yul\":8323:8329   */\n  dup3\n    /* \"#utility.yul\":8315:8321   */\n  dup3\n    /* \"#utility.yul\":8309:8313   */\n  dup6\n    /* \"#utility.yul\":8263:8330   */\n  tag_44\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":8357:8358   */\n  0x00\n    /* \"#utility.yul\":8381:8385   */\n  0x20\n    /* \"#utility.yul\":8368:8385   */\n  swap1\n  pop\n    /* \"#utility.yul\":8413:8415   */\n  0x1f\n    /* \"#utility.yul\":8405:8411   */\n  dup4\n    /* \"#utility.yul\":8402:8416   */\n  gt\n    /* \"#utility.yul\":8430:8431   */\n  0x01\n    /* \"#utility.yul\":8425:9043   */\n  dup2\n  eq\n  tag_148\n  jumpi\n    /* \"#utility.yul\":9087:9088   */\n  0x00\n    /* \"#utility.yul\":9104:9110   */\n  dup5\n    /* \"#utility.yul\":9101:9178   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":9153:9162   */\n  dup3\n    /* \"#utility.yul\":9148:9151   */\n  dup8\n    /* \"#utility.yul\":9144:9163   */\n  add\n    /* \"#utility.yul\":9138:9164   */\n  mload\n    /* \"#utility.yul\":9129:9164   */\n  swap1\n  pop\n    /* \"#utility.yul\":9101:9178   */\ntag_149:\n    /* \"#utility.yul\":9204:9271   */\n  tag_150\n    /* \"#utility.yul\":9264:9270   */\n  dup6\n    /* \"#utility.yul\":9257:9262   */\n  dup3\n    /* \"#utility.yul\":9204:9271   */\n  tag_47\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":9198:9202   */\n  dup7\n    /* \"#utility.yul\":9191:9272   */\n  sstore\n    /* \"#utility.yul\":9060:9282   */\n  pop\n    /* \"#utility.yul\":8395:9282   */\n  jump(tag_147)\n    /* \"#utility.yul\":8425:9043   */\ntag_148:\n    /* \"#utility.yul\":8477:8481   */\n  0x1f\n    /* \"#utility.yul\":8473:8482   */\n  not\n    /* \"#utility.yul\":8465:8471   */\n  dup5\n    /* \"#utility.yul\":8461:8483   */\n  and\n    /* \"#utility.yul\":8511:8548   */\n  tag_151\n    /* \"#utility.yul\":8543:8547   */\n  dup7\n    /* \"#utility.yul\":8511:8548   */\n  tag_32\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":8570:8571   */\n  0x00\n    /* \"#utility.yul\":8584:8792   */\ntag_152:\n    /* \"#utility.yul\":8598:8605   */\n  dup3\n    /* \"#utility.yul\":8595:8596   */\n  dup2\n    /* \"#utility.yul\":8592:8606   */\n  lt\n    /* \"#utility.yul\":8584:8792   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":8677:8686   */\n  dup5\n    /* \"#utility.yul\":8672:8675   */\n  dup10\n    /* \"#utility.yul\":8668:8687   */\n  add\n    /* \"#utility.yul\":8662:8688   */\n  mload\n    /* \"#utility.yul\":8654:8660   */\n  dup3\n    /* \"#utility.yul\":8647:8689   */\n  sstore\n    /* \"#utility.yul\":8728:8729   */\n  0x01\n    /* \"#utility.yul\":8720:8726   */\n  dup3\n    /* \"#utility.yul\":8716:8730   */\n  add\n    /* \"#utility.yul\":8706:8730   */\n  swap2\n  pop\n    /* \"#utility.yul\":8775:8777   */\n  0x20\n    /* \"#utility.yul\":8764:8773   */\n  dup6\n    /* \"#utility.yul\":8760:8778   */\n  add\n    /* \"#utility.yul\":8747:8778   */\n  swap5\n  pop\n    /* \"#utility.yul\":8621:8625   */\n  0x20\n    /* \"#utility.yul\":8618:8619   */\n  dup2\n    /* \"#utility.yul\":8614:8626   */\n  add\n    /* \"#utility.yul\":8609:8626   */\n  swap1\n  pop\n    /* \"#utility.yul\":8584:8792   */\n  jump(tag_152)\ntag_154:\n    /* \"#utility.yul\":8820:8826   */\n  dup7\n    /* \"#utility.yul\":8811:8818   */\n  dup4\n    /* \"#utility.yul\":8808:8827   */\n  lt\n    /* \"#utility.yul\":8805:8984   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":8878:8887   */\n  dup5\n    /* \"#utility.yul\":8873:8876   */\n  dup10\n    /* \"#utility.yul\":8869:8888   */\n  add\n    /* \"#utility.yul\":8863:8889   */\n  mload\n    /* \"#utility.yul\":8921:8969   */\n  tag_156\n    /* \"#utility.yul\":8963:8967   */\n  0x1f\n    /* \"#utility.yul\":8955:8961   */\n  dup10\n    /* \"#utility.yul\":8951:8968   */\n  and\n    /* \"#utility.yul\":8940:8949   */\n  dup3\n    /* \"#utility.yul\":8921:8969   */\n  tag_46\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":8913:8919   */\n  dup4\n    /* \"#utility.yul\":8906:8970   */\n  sstore\n    /* \"#utility.yul\":8828:8984   */\n  pop\n    /* \"#utility.yul\":8805:8984   */\ntag_155:\n    /* \"#utility.yul\":9030:9031   */\n  0x01\n    /* \"#utility.yul\":9026:9027   */\n  0x02\n    /* \"#utility.yul\":9018:9024   */\n  dup9\n    /* \"#utility.yul\":9014:9028   */\n  mul\n    /* \"#utility.yul\":9010:9032   */\n  add\n    /* \"#utility.yul\":9004:9008   */\n  dup9\n    /* \"#utility.yul\":8997:9033   */\n  sstore\n    /* \"#utility.yul\":8432:9043   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8395:9282   */\ntag_147:\n  pop\n    /* \"#utility.yul\":7985:9288   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7893:9288   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/AutomatedMarketMaker.sol\":180:7880  contract AutomatedMarketMaker is ERC20 {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/AutomatedMarketMaker.sol\":180:7880  contract AutomatedMarketMaker is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5f64b55b\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x9cd441da\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc915cc24\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdc5fa6c5\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x5f64b55b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x140e6247\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x140e6247\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x19e36f3b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0902f1ac\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0fc63d10\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AutomatedMarketMaker.sol\":7683:7864  function getReserves() external view returns (uint256, uint256) {... */\n    tag_4:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AutomatedMarketMaker.sol\":230:250  IERC20 public tokenA */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AutomatedMarketMaker.sol\":5500:6675  function swapAforB(uint256 amountAIn, uint256 minBOut) external {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AutomatedMarketMaker.sol\":624:647  uint256 public reserveB */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AutomatedMarketMaker.sol\":257:277  IERC20 public tokenB */\n    tag_12:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AutomatedMarketMaker.sol\":656:676  address public owner */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AutomatedMarketMaker.sol\":3888:5492  function removeLiquidity(uint256 liquidityToRemove) external returns (uint256 amountAOut, uint256 amountBOut) {... */\n    tag_16:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_82\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AutomatedMarketMaker.sol\":2488:3880  function addLiquidity(uint256 amountA, uint256 amountB) external {... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AutomatedMarketMaker.sol\":6686:7675  function swapBforA(uint256 amountBIn, uint256 minAOut) external {... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/AutomatedMarketMaker.sol\":594:617  uint256 public reserveA */\n    tag_20:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_21:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_103\n      jump\t// in\n    tag_104:\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_106\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_105)\n    tag_106:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_107:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_107\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":7683:7864  function getReserves() external view returns (uint256, uint256) {... */\n    tag_30:\n        /* \"contracts/AutomatedMarketMaker.sol\":7729:7736  uint256 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":7738:7745  uint256 */\n      dup1\n        /* \"contracts/AutomatedMarketMaker.sol\":7841:7849  reserveA */\n      sload(0x07)\n        /* \"contracts/AutomatedMarketMaker.sol\":7851:7859  reserveB */\n      sload(0x08)\n        /* \"contracts/AutomatedMarketMaker.sol\":7833:7860  return (reserveA, reserveB) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":7683:7864  function getReserves() external view returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":230:250  IERC20 public tokenA */\n    tag_40:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":5500:6675  function swapAforB(uint256 amountAIn, uint256 minBOut) external {... */\n    tag_46:\n        /* \"contracts/AutomatedMarketMaker.sol\":5634:5635  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":5622:5631  amountAIn */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":5622:5635  amountAIn > 0 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":5614:5658  require(amountAIn > 0, \"Amount must be > 0\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/AutomatedMarketMaker.sol\":5741:5742  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":5730:5738  reserveA */\n      sload(0x07)\n        /* \"contracts/AutomatedMarketMaker.sol\":5730:5742  reserveA > 0 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":5730:5758  reserveA > 0 && reserveB > 0 */\n      dup1\n      iszero\n      tag_118\n      jumpi\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":5757:5758  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":5746:5754  reserveB */\n      sload(0x08)\n        /* \"contracts/AutomatedMarketMaker.sol\":5746:5758  reserveB > 0 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":5730:5758  reserveA > 0 && reserveB > 0 */\n    tag_118:\n        /* \"contracts/AutomatedMarketMaker.sol\":5722:5784  require(reserveA > 0 && reserveB > 0, \"Insufficient reserves\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"contracts/AutomatedMarketMaker.sol\":5855:5879  uint256 amountAInWithFee */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":5900:5904  1000 */\n      0x03e8\n        /* \"contracts/AutomatedMarketMaker.sol\":5894:5897  997 */\n      0x03e5\n        /* \"contracts/AutomatedMarketMaker.sol\":5882:5891  amountAIn */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":5882:5897  amountAIn * 997 */\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"contracts/AutomatedMarketMaker.sol\":5882:5904  amountAIn * 997 / 1000 */\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"contracts/AutomatedMarketMaker.sol\":5855:5904  uint256 amountAInWithFee = amountAIn * 997 / 1000 */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":5977:5995  uint256 amountBOut */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":6040:6056  amountAInWithFee */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":6029:6037  reserveA */\n      sload(0x07)\n        /* \"contracts/AutomatedMarketMaker.sol\":6029:6056  reserveA + amountAInWithFee */\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"contracts/AutomatedMarketMaker.sol\":6009:6025  amountAInWithFee */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":5998:6006  reserveB */\n      sload(0x08)\n        /* \"contracts/AutomatedMarketMaker.sol\":5998:6025  reserveB * amountAInWithFee */\n      tag_128\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_128:\n        /* \"contracts/AutomatedMarketMaker.sol\":5998:6057  reserveB * amountAInWithFee / (reserveA + amountAInWithFee) */\n      tag_129\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_129:\n        /* \"contracts/AutomatedMarketMaker.sol\":5977:6057  uint256 amountBOut = reserveB * amountAInWithFee / (reserveA + amountAInWithFee) */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":6169:6176  minBOut */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":6155:6165  amountBOut */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":6155:6176  amountBOut >= minBOut */\n      lt\n      iszero\n        /* \"contracts/AutomatedMarketMaker.sol\":6147:6198  require(amountBOut >= minBOut, \"Slippage too high\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"contracts/AutomatedMarketMaker.sol\":6253:6259  tokenA */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AutomatedMarketMaker.sol\":6253:6272  tokenA.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/AutomatedMarketMaker.sol\":6273:6283  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":6293:6297  this */\n      address\n        /* \"contracts/AutomatedMarketMaker.sol\":6300:6309  amountAIn */\n      dup8\n        /* \"contracts/AutomatedMarketMaker.sol\":6253:6310  tokenA.transferFrom(msg.sender, address(this), amountAIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":6355:6361  tokenB */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AutomatedMarketMaker.sol\":6355:6370  tokenB.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/AutomatedMarketMaker.sol\":6371:6381  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":6383:6393  amountBOut */\n      dup4\n        /* \"contracts/AutomatedMarketMaker.sol\":6355:6394  tokenB.transfer(msg.sender, amountBOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_143:\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":6495:6511  amountAInWithFee */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":6483:6491  reserveA */\n      0x07\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":6483:6511  reserveA += amountAInWithFee */\n      dup3\n      dup3\n      sload\n      tag_144\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_144:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":6530:6540  amountBOut */\n      dup1\n        /* \"contracts/AutomatedMarketMaker.sol\":6518:6526  reserveB */\n      0x08\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":6518:6540  reserveB -= amountBOut */\n      dup3\n      dup3\n      sload\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":6603:6613  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":6589:6671  TokensSwapped(msg.sender, address(tokenA), amountAIn, address(tokenB), amountBOut) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x631fb37dba9bbcb8b2f3be2d669e365ae9f1bd850cc57dfe8b7ccd7d979a2bba\n        /* \"contracts/AutomatedMarketMaker.sol\":6623:6629  tokenA */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AutomatedMarketMaker.sol\":6632:6641  amountAIn */\n      dup7\n        /* \"contracts/AutomatedMarketMaker.sol\":6651:6657  tokenB */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AutomatedMarketMaker.sol\":6660:6670  amountBOut */\n      dup6\n        /* \"contracts/AutomatedMarketMaker.sol\":6589:6671  TokensSwapped(msg.sender, address(tokenA), amountAIn, address(tokenB), amountBOut) */\n      mload(0x40)\n      tag_147\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/AutomatedMarketMaker.sol\":5564:6675  {... */\n      pop\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":5500:6675  function swapAforB(uint256 amountAIn, uint256 minBOut) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":624:647  uint256 public reserveB */\n    tag_52:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":257:277  IERC20 public tokenB */\n    tag_64:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":656:676  address public owner */\n    tag_72:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_103\n      jump\t// in\n    tag_159:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_103\n      jump\t// in\n    tag_160:\n      dup1\n      iszero\n      tag_161\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_162\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_161)\n    tag_162:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_163:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_163\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":3888:5492  function removeLiquidity(uint256 liquidityToRemove) external returns (uint256 amountAOut, uint256 amountBOut) {... */\n    tag_81:\n        /* \"contracts/AutomatedMarketMaker.sol\":3958:3976  uint256 amountAOut */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":3978:3996  uint256 amountBOut */\n      dup1\n        /* \"contracts/AutomatedMarketMaker.sol\":4094:4095  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":4074:4091  liquidityToRemove */\n      dup4\n        /* \"contracts/AutomatedMarketMaker.sol\":4074:4095  liquidityToRemove > 0 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":4066:4131  require(liquidityToRemove > 0, \"Liquidity to remove must be > 0\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"contracts/AutomatedMarketMaker.sol\":4251:4268  liquidityToRemove */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":4226:4247  balanceOf(msg.sender) */\n      tag_168\n        /* \"contracts/AutomatedMarketMaker.sol\":4236:4246  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":4226:4235  balanceOf */\n      tag_69\n        /* \"contracts/AutomatedMarketMaker.sol\":4226:4247  balanceOf(msg.sender) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/AutomatedMarketMaker.sol\":4226:4268  balanceOf(msg.sender) >= liquidityToRemove */\n      lt\n      iszero\n        /* \"contracts/AutomatedMarketMaker.sol\":4218:4302  require(balanceOf(msg.sender) >= liquidityToRemove, \"Insufficient liquidity tokens\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"contracts/AutomatedMarketMaker.sol\":4366:4388  uint256 totalLiquidity */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":4391:4404  totalSupply() */\n      tag_172\n        /* \"contracts/AutomatedMarketMaker.sol\":4391:4402  totalSupply */\n      tag_48\n        /* \"contracts/AutomatedMarketMaker.sol\":4391:4404  totalSupply() */\n      jump\t// in\n    tag_172:\n        /* \"contracts/AutomatedMarketMaker.sol\":4366:4404  uint256 totalLiquidity = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":4436:4437  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":4419:4433  totalLiquidity */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":4419:4437  totalLiquidity > 0 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":4411:4466  require(totalLiquidity > 0, \"No liquidity in the pool\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"contracts/AutomatedMarketMaker.sol\":4611:4625  totalLiquidity */\n      dup1\n        /* \"contracts/AutomatedMarketMaker.sol\":4599:4607  reserveA */\n      sload(0x07)\n        /* \"contracts/AutomatedMarketMaker.sol\":4579:4596  liquidityToRemove */\n      dup6\n        /* \"contracts/AutomatedMarketMaker.sol\":4579:4607  liquidityToRemove * reserveA */\n      tag_176\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_176:\n        /* \"contracts/AutomatedMarketMaker.sol\":4578:4625  (liquidityToRemove * reserveA )/ totalLiquidity */\n      tag_177\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_177:\n        /* \"contracts/AutomatedMarketMaker.sol\":4565:4625  amountAOut = (liquidityToRemove * reserveA )/ totalLiquidity */\n      swap3\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":4678:4692  totalLiquidity */\n      dup1\n        /* \"contracts/AutomatedMarketMaker.sol\":4666:4674  reserveB */\n      sload(0x08)\n        /* \"contracts/AutomatedMarketMaker.sol\":4646:4663  liquidityToRemove */\n      dup6\n        /* \"contracts/AutomatedMarketMaker.sol\":4646:4674  liquidityToRemove * reserveB */\n      tag_178\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_178:\n        /* \"contracts/AutomatedMarketMaker.sol\":4645:4692  (liquidityToRemove * reserveB) / totalLiquidity */\n      tag_179\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_179:\n        /* \"contracts/AutomatedMarketMaker.sol\":4632:4692  amountBOut = (liquidityToRemove * reserveB) / totalLiquidity */\n      swap2\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":4803:4804  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":4790:4800  amountAOut */\n      dup4\n        /* \"contracts/AutomatedMarketMaker.sol\":4790:4804  amountAOut > 0 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":4790:4822  amountAOut > 0 && amountBOut > 0 */\n      dup1\n      iszero\n      tag_180\n      jumpi\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":4821:4822  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":4808:4818  amountBOut */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":4808:4822  amountBOut > 0 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":4790:4822  amountAOut > 0 && amountBOut > 0 */\n    tag_180:\n        /* \"contracts/AutomatedMarketMaker.sol\":4782:4872  require(amountAOut > 0 && amountBOut > 0, \"Insufficient reserves for requested liquidity\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/AutomatedMarketMaker.sol\":4956:4966  amountAOut */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":4944:4952  reserveA */\n      0x07\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":4944:4966  reserveA -= amountAOut */\n      dup3\n      dup3\n      sload\n      tag_184\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_184:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":4985:4995  amountBOut */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":4973:4981  reserveB */\n      0x08\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":4973:4995  reserveB -= amountBOut */\n      dup3\n      dup3\n      sload\n      tag_185\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_185:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":5076:5112  _burn(msg.sender, liquidityToRemove) */\n      tag_186\n        /* \"contracts/AutomatedMarketMaker.sol\":5082:5092  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":5094:5111  liquidityToRemove */\n      dup6\n        /* \"contracts/AutomatedMarketMaker.sol\":5076:5081  _burn */\n      tag_187\n        /* \"contracts/AutomatedMarketMaker.sol\":5076:5112  _burn(msg.sender, liquidityToRemove) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/AutomatedMarketMaker.sol\":5177:5183  tokenA */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AutomatedMarketMaker.sol\":5177:5192  tokenA.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/AutomatedMarketMaker.sol\":5193:5203  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":5205:5215  amountAOut */\n      dup6\n        /* \"contracts/AutomatedMarketMaker.sol\":5177:5216  tokenA.transfer(msg.sender, amountAOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_188:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_191\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_191:\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":5223:5229  tokenB */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AutomatedMarketMaker.sol\":5223:5238  tokenB.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/AutomatedMarketMaker.sol\":5239:5249  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":5251:5261  amountBOut */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":5223:5262  tokenB.transfer(msg.sender, amountBOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_192:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_195:\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":5347:5357  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":5330:5401  LiquidityRemoved(msg.sender, amountAOut, amountBOut, liquidityToRemove) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d\n        /* \"contracts/AutomatedMarketMaker.sol\":5359:5369  amountAOut */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":5371:5381  amountBOut */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":5383:5400  liquidityToRemove */\n      dup8\n        /* \"contracts/AutomatedMarketMaker.sol\":5330:5401  LiquidityRemoved(msg.sender, amountAOut, amountBOut, liquidityToRemove) */\n      mload(0x40)\n      tag_196\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/AutomatedMarketMaker.sol\":5457:5488  return (amountAOut, amountBOut) */\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":3888:5492  function removeLiquidity(uint256 liquidityToRemove) external returns (uint256 amountAOut, uint256 amountBOut) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":2488:3880  function addLiquidity(uint256 amountA, uint256 amountB) external {... */\n    tag_85:\n        /* \"contracts/AutomatedMarketMaker.sol\":2636:2637  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":2626:2633  amountA */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":2626:2637  amountA > 0 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":2626:2652  amountA > 0 && amountB > 0 */\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2651:2652  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":2641:2648  amountB */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":2641:2652  amountB > 0 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":2626:2652  amountA > 0 && amountB > 0 */\n    tag_199:\n        /* \"contracts/AutomatedMarketMaker.sol\":2618:2676  require(amountA > 0 && amountB > 0, \"Amounts must be > 0\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/AutomatedMarketMaker.sol\":2756:2762  tokenA */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AutomatedMarketMaker.sol\":2756:2775  tokenA.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/AutomatedMarketMaker.sol\":2776:2786  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":2796:2800  this */\n      address\n        /* \"contracts/AutomatedMarketMaker.sol\":2803:2810  amountA */\n      dup6\n        /* \"contracts/AutomatedMarketMaker.sol\":2756:2811  tokenA.transferFrom(msg.sender, address(this), amountA) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_203:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_206:\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2818:2824  tokenB */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AutomatedMarketMaker.sol\":2818:2837  tokenB.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/AutomatedMarketMaker.sol\":2838:2848  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":2858:2862  this */\n      address\n        /* \"contracts/AutomatedMarketMaker.sol\":2865:2872  amountB */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":2818:2873  tokenB.transferFrom(msg.sender, address(this), amountB) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_207:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_209\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_209:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_210\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_210:\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2954:2971  uint256 liquidity */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":3071:3072  0 */\n      dup1\n        /* \"contracts/AutomatedMarketMaker.sol\":3054:3067  totalSupply() */\n      tag_211\n        /* \"contracts/AutomatedMarketMaker.sol\":3054:3065  totalSupply */\n      tag_48\n        /* \"contracts/AutomatedMarketMaker.sol\":3054:3067  totalSupply() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/AutomatedMarketMaker.sol\":3054:3072  totalSupply() == 0 */\n      sub\n        /* \"contracts/AutomatedMarketMaker.sol\":3050:3507  if (totalSupply() == 0) {... */\n      tag_212\n      jumpi\n        /* \"contracts/AutomatedMarketMaker.sol\":3156:3179  sqrt(amountA * amountB) */\n      tag_213\n        /* \"contracts/AutomatedMarketMaker.sol\":3171:3178  amountB */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":3161:3168  amountA */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":3161:3178  amountA * amountB */\n      tag_214\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_214:\n        /* \"contracts/AutomatedMarketMaker.sol\":3156:3160  sqrt */\n      tag_215\n        /* \"contracts/AutomatedMarketMaker.sol\":3156:3179  sqrt(amountA * amountB) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/AutomatedMarketMaker.sol\":3144:3179  liquidity = sqrt(amountA * amountB) */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":3050:3507  if (totalSupply() == 0) {... */\n      jump(tag_216)\n    tag_212:\n        /* \"contracts/AutomatedMarketMaker.sol\":3300:3499  min(... */\n      tag_217\n        /* \"contracts/AutomatedMarketMaker.sol\":3344:3352  reserveA */\n      sload(0x07)\n        /* \"contracts/AutomatedMarketMaker.sol\":3328:3341  totalSupply() */\n      tag_218\n        /* \"contracts/AutomatedMarketMaker.sol\":3328:3339  totalSupply */\n      tag_48\n        /* \"contracts/AutomatedMarketMaker.sol\":3328:3341  totalSupply() */\n      jump\t// in\n    tag_218:\n        /* \"contracts/AutomatedMarketMaker.sol\":3318:3325  amountA */\n      dup6\n        /* \"contracts/AutomatedMarketMaker.sol\":3318:3341  amountA * totalSupply() */\n      tag_219\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_219:\n        /* \"contracts/AutomatedMarketMaker.sol\":3318:3352  amountA * totalSupply() / reserveA */\n      tag_220\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_220:\n        /* \"contracts/AutomatedMarketMaker.sol\":3436:3444  reserveB */\n      sload(0x08)\n        /* \"contracts/AutomatedMarketMaker.sol\":3420:3433  totalSupply() */\n      tag_221\n        /* \"contracts/AutomatedMarketMaker.sol\":3420:3431  totalSupply */\n      tag_48\n        /* \"contracts/AutomatedMarketMaker.sol\":3420:3433  totalSupply() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/AutomatedMarketMaker.sol\":3410:3417  amountB */\n      dup6\n        /* \"contracts/AutomatedMarketMaker.sol\":3410:3433  amountB * totalSupply() */\n      tag_222\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_222:\n        /* \"contracts/AutomatedMarketMaker.sol\":3410:3444  amountB * totalSupply() / reserveB */\n      tag_223\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_223:\n        /* \"contracts/AutomatedMarketMaker.sol\":3300:3303  min */\n      tag_224\n        /* \"contracts/AutomatedMarketMaker.sol\":3300:3499  min(... */\n      jump\t// in\n    tag_217:\n        /* \"contracts/AutomatedMarketMaker.sol\":3288:3499  liquidity = min(... */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":3050:3507  if (totalSupply() == 0) {... */\n    tag_216:\n        /* \"contracts/AutomatedMarketMaker.sol\":3586:3614  _mint(msg.sender, liquidity) */\n      tag_225\n        /* \"contracts/AutomatedMarketMaker.sol\":3592:3602  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":3604:3613  liquidity */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":3586:3591  _mint */\n      tag_226\n        /* \"contracts/AutomatedMarketMaker.sol\":3586:3614  _mint(msg.sender, liquidity) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/AutomatedMarketMaker.sol\":3722:3729  amountA */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":3710:3718  reserveA */\n      0x07\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":3710:3729  reserveA += amountA */\n      dup3\n      dup3\n      sload\n      tag_227\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_227:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":3748:3755  amountB */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":3736:3744  reserveB */\n      0x08\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":3736:3755  reserveB += amountB */\n      dup3\n      dup3\n      sload\n      tag_228\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_228:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":3836:3846  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":3821:3876  LiquidityAdded(msg.sender, amountA, amountB, liquidity) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e\n        /* \"contracts/AutomatedMarketMaker.sol\":3848:3855  amountA */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":3857:3864  amountB */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":3866:3875  liquidity */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":3821:3876  LiquidityAdded(msg.sender, amountA, amountB, liquidity) */\n      mload(0x40)\n      tag_229\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/AutomatedMarketMaker.sol\":2553:3880  {... */\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2488:3880  function addLiquidity(uint256 amountA, uint256 amountB) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":6686:7675  function swapBforA(uint256 amountBIn, uint256 minAOut) external {... */\n    tag_92:\n        /* \"contracts/AutomatedMarketMaker.sol\":6807:6808  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":6795:6804  amountBIn */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":6795:6808  amountBIn > 0 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":6787:6831  require(amountBIn > 0, \"Amount must be > 0\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap1\n      tag_117\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"contracts/AutomatedMarketMaker.sol\":6889:6890  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":6878:6886  reserveA */\n      sload(0x07)\n        /* \"contracts/AutomatedMarketMaker.sol\":6878:6890  reserveA > 0 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":6878:6906  reserveA > 0 && reserveB > 0 */\n      dup1\n      iszero\n      tag_236\n      jumpi\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":6905:6906  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":6894:6902  reserveB */\n      sload(0x08)\n        /* \"contracts/AutomatedMarketMaker.sol\":6894:6906  reserveB > 0 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":6878:6906  reserveA > 0 && reserveB > 0 */\n    tag_236:\n        /* \"contracts/AutomatedMarketMaker.sol\":6870:6932  require(reserveA > 0 && reserveB > 0, \"Insufficient reserves\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_121\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"contracts/AutomatedMarketMaker.sol\":6973:6997  uint256 amountBInWithFee */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":7018:7022  1000 */\n      0x03e8\n        /* \"contracts/AutomatedMarketMaker.sol\":7012:7015  997 */\n      0x03e5\n        /* \"contracts/AutomatedMarketMaker.sol\":7000:7009  amountBIn */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":7000:7015  amountBIn * 997 */\n      tag_239\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_239:\n        /* \"contracts/AutomatedMarketMaker.sol\":7000:7022  amountBIn * 997 / 1000 */\n      tag_240\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_240:\n        /* \"contracts/AutomatedMarketMaker.sol\":6973:7022  uint256 amountBInWithFee = amountBIn * 997 / 1000 */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":7094:7112  uint256 amountAOut */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":7157:7173  amountBInWithFee */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":7146:7154  reserveB */\n      sload(0x08)\n        /* \"contracts/AutomatedMarketMaker.sol\":7146:7173  reserveB + amountBInWithFee */\n      tag_241\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_241:\n        /* \"contracts/AutomatedMarketMaker.sol\":7126:7142  amountBInWithFee */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":7115:7123  reserveA */\n      sload(0x07)\n        /* \"contracts/AutomatedMarketMaker.sol\":7115:7142  reserveA * amountBInWithFee */\n      tag_242\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_242:\n        /* \"contracts/AutomatedMarketMaker.sol\":7115:7174  reserveA * amountBInWithFee / (reserveB + amountBInWithFee) */\n      tag_243\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_243:\n        /* \"contracts/AutomatedMarketMaker.sol\":7094:7174  uint256 amountAOut = reserveA * amountBInWithFee / (reserveB + amountBInWithFee) */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":7244:7251  minAOut */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":7230:7240  amountAOut */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":7230:7251  amountAOut >= minAOut */\n      lt\n      iszero\n        /* \"contracts/AutomatedMarketMaker.sol\":7222:7273  require(amountAOut >= minAOut, \"Slippage too high\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_132\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"contracts/AutomatedMarketMaker.sol\":7314:7320  tokenB */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AutomatedMarketMaker.sol\":7314:7333  tokenB.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/AutomatedMarketMaker.sol\":7334:7344  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":7354:7358  this */\n      address\n        /* \"contracts/AutomatedMarketMaker.sol\":7361:7370  amountBIn */\n      dup8\n        /* \"contracts/AutomatedMarketMaker.sol\":7314:7371  tokenB.transferFrom(msg.sender, address(this), amountBIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_246:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_248\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_249\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_249:\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":7410:7416  tokenA */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AutomatedMarketMaker.sol\":7410:7425  tokenA.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/AutomatedMarketMaker.sol\":7426:7436  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":7438:7448  amountAOut */\n      dup4\n        /* \"contracts/AutomatedMarketMaker.sol\":7410:7449  tokenA.transfer(msg.sender, amountAOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_250:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_252:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_253\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_253:\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":7506:7522  amountBInWithFee */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":7494:7502  reserveB */\n      0x08\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":7494:7522  reserveB += amountBInWithFee */\n      dup3\n      dup3\n      sload\n      tag_254\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_254:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":7541:7551  amountAOut */\n      dup1\n        /* \"contracts/AutomatedMarketMaker.sol\":7529:7537  reserveA */\n      0x07\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":7529:7551  reserveA -= amountAOut */\n      dup3\n      dup3\n      sload\n      tag_255\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_255:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":7603:7613  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":7589:7671  TokensSwapped(msg.sender, address(tokenB), amountBIn, address(tokenA), amountAOut) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x631fb37dba9bbcb8b2f3be2d669e365ae9f1bd850cc57dfe8b7ccd7d979a2bba\n        /* \"contracts/AutomatedMarketMaker.sol\":7623:7629  tokenB */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AutomatedMarketMaker.sol\":7632:7641  amountBIn */\n      dup7\n        /* \"contracts/AutomatedMarketMaker.sol\":7651:7657  tokenA */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AutomatedMarketMaker.sol\":7660:7670  amountAOut */\n      dup6\n        /* \"contracts/AutomatedMarketMaker.sol\":7589:7671  TokensSwapped(msg.sender, address(tokenB), amountBIn, address(tokenA), amountAOut) */\n      mload(0x40)\n      tag_256\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/AutomatedMarketMaker.sol\":6750:7675  {... */\n      pop\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":6686:7675  function swapBforA(uint256 amountBIn, uint256 minAOut) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":594:617  uint256 public reserveA */\n    tag_94:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8055  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_279\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":1677:2408  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n    tag_215:\n        /* \"contracts/AutomatedMarketMaker.sol\":1725:1734  uint256 z */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":1826:1827  3 */\n      0x03\n        /* \"contracts/AutomatedMarketMaker.sol\":1822:1823  y */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":1822:1827  y > 3 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":1818:2343  if (y > 3) {... */\n      iszero\n      tag_281\n      jumpi\n        /* \"contracts/AutomatedMarketMaker.sol\":1891:1892  y */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":1887:1892  z = y */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":1948:1957  uint256 x */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":1968:1969  1 */\n      0x01\n        /* \"contracts/AutomatedMarketMaker.sol\":1964:1965  2 */\n      0x02\n        /* \"contracts/AutomatedMarketMaker.sol\":1960:1961  y */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":1960:1965  y / 2 */\n      tag_282\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_282:\n        /* \"contracts/AutomatedMarketMaker.sol\":1960:1969  y / 2 + 1 */\n      tag_283\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_283:\n        /* \"contracts/AutomatedMarketMaker.sol\":1948:1969  uint256 x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2089:2236  while (x < z) {... */\n    tag_284:\n        /* \"contracts/AutomatedMarketMaker.sol\":2100:2101  z */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":2096:2097  x */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":2096:2101  x < z */\n      lt\n        /* \"contracts/AutomatedMarketMaker.sol\":2089:2236  while (x < z) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"contracts/AutomatedMarketMaker.sol\":2122:2123  x */\n      dup1\n        /* \"contracts/AutomatedMarketMaker.sol\":2118:2123  z = x */\n      swap2\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2223:2224  2 */\n      0x02\n        /* \"contracts/AutomatedMarketMaker.sol\":2218:2219  x */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":2214:2215  x */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":2210:2211  y */\n      dup6\n        /* \"contracts/AutomatedMarketMaker.sol\":2210:2215  y / x */\n      tag_286\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_286:\n        /* \"contracts/AutomatedMarketMaker.sol\":2210:2219  y / x + x */\n      tag_287\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_287:\n        /* \"contracts/AutomatedMarketMaker.sol\":2209:2224  (y / x + x) / 2 */\n      tag_288\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_288:\n        /* \"contracts/AutomatedMarketMaker.sol\":2205:2224  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2089:2236  while (x < z) {... */\n      jump(tag_284)\n    tag_285:\n        /* \"contracts/AutomatedMarketMaker.sol\":1829:2243  {... */\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":1818:2343  if (y > 3) {... */\n      jump(tag_289)\n    tag_281:\n        /* \"contracts/AutomatedMarketMaker.sol\":2316:2317  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":2311:2312  y */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":2311:2317  y != 0 */\n      eq\n        /* \"contracts/AutomatedMarketMaker.sol\":2307:2343  if (y != 0) {... */\n      tag_290\n      jumpi\n        /* \"contracts/AutomatedMarketMaker.sol\":2334:2335  1 */\n      0x01\n        /* \"contracts/AutomatedMarketMaker.sol\":2330:2335  z = 1 */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2307:2343  if (y != 0) {... */\n    tag_290:\n        /* \"contracts/AutomatedMarketMaker.sol\":1818:2343  if (y > 3) {... */\n    tag_289:\n        /* \"contracts/AutomatedMarketMaker.sol\":1677:2408  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":1431:1595  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_224:\n        /* \"contracts/AutomatedMarketMaker.sol\":1489:1496  uint256 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":1582:1583  b */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":1578:1579  a */\n      dup4\n        /* \"contracts/AutomatedMarketMaker.sol\":1578:1583  a < b */\n      lt\n        /* \"contracts/AutomatedMarketMaker.sol\":1578:1591  a < b ? a : b */\n      tag_292\n      jumpi\n        /* \"contracts/AutomatedMarketMaker.sol\":1590:1591  b */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":1578:1591  a < b ? a : b */\n      jump(tag_293)\n    tag_292:\n        /* \"contracts/AutomatedMarketMaker.sol\":1586:1587  a */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":1578:1591  a < b ? a : b */\n    tag_293:\n        /* \"contracts/AutomatedMarketMaker.sol\":1571:1591  return a < b ? a : b */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":1431:1595  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_304\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_307\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_307:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_308)\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_312)\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_313\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_314:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_315:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_316:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_317:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_318:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_367\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_314\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":711:782   */\n      tag_368\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_315\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_369\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_316\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":881:910   */\n      tag_370\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_317\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_28:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_372\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_318\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1319   */\n    tag_319:\n        /* \"#utility.yul\":1279:1286   */\n      0x00\n        /* \"#utility.yul\":1308:1313   */\n      dup2\n        /* \"#utility.yul\":1297:1313   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1325:1443   */\n    tag_320:\n        /* \"#utility.yul\":1412:1436   */\n      tag_375\n        /* \"#utility.yul\":1430:1435   */\n      dup2\n        /* \"#utility.yul\":1412:1436   */\n      tag_319\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1407:1410   */\n      dup3\n        /* \"#utility.yul\":1400:1437   */\n      mstore\n        /* \"#utility.yul\":1325:1443   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1449:1781   */\n    tag_32:\n        /* \"#utility.yul\":1570:1574   */\n      0x00\n        /* \"#utility.yul\":1608:1610   */\n      0x40\n        /* \"#utility.yul\":1597:1606   */\n      dup3\n        /* \"#utility.yul\":1593:1611   */\n      add\n        /* \"#utility.yul\":1585:1611   */\n      swap1\n      pop\n        /* \"#utility.yul\":1621:1692   */\n      tag_377\n        /* \"#utility.yul\":1689:1690   */\n      0x00\n        /* \"#utility.yul\":1678:1687   */\n      dup4\n        /* \"#utility.yul\":1674:1691   */\n      add\n        /* \"#utility.yul\":1665:1671   */\n      dup6\n        /* \"#utility.yul\":1621:1692   */\n      tag_320\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1702:1774   */\n      tag_378\n        /* \"#utility.yul\":1770:1772   */\n      0x20\n        /* \"#utility.yul\":1759:1768   */\n      dup4\n        /* \"#utility.yul\":1755:1773   */\n      add\n        /* \"#utility.yul\":1746:1752   */\n      dup5\n        /* \"#utility.yul\":1702:1774   */\n      tag_320\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":1449:1781   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1868:1985   */\n    tag_322:\n        /* \"#utility.yul\":1977:1978   */\n      0x00\n        /* \"#utility.yul\":1974:1975   */\n      dup1\n        /* \"#utility.yul\":1967:1979   */\n      revert\n        /* \"#utility.yul\":2114:2240   */\n    tag_324:\n        /* \"#utility.yul\":2151:2158   */\n      0x00\n        /* \"#utility.yul\":2191:2233   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2184:2189   */\n      dup3\n        /* \"#utility.yul\":2180:2234   */\n      and\n        /* \"#utility.yul\":2169:2234   */\n      swap1\n      pop\n        /* \"#utility.yul\":2114:2240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2246:2342   */\n    tag_325:\n        /* \"#utility.yul\":2283:2290   */\n      0x00\n        /* \"#utility.yul\":2312:2336   */\n      tag_384\n        /* \"#utility.yul\":2330:2335   */\n      dup3\n        /* \"#utility.yul\":2312:2336   */\n      tag_324\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2301:2336   */\n      swap1\n      pop\n        /* \"#utility.yul\":2246:2342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2348:2470   */\n    tag_326:\n        /* \"#utility.yul\":2421:2445   */\n      tag_386\n        /* \"#utility.yul\":2439:2444   */\n      dup2\n        /* \"#utility.yul\":2421:2445   */\n      tag_325\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2411:2446   */\n      eq\n        /* \"#utility.yul\":2401:2464   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":2460:2461   */\n      0x00\n        /* \"#utility.yul\":2457:2458   */\n      dup1\n        /* \"#utility.yul\":2450:2462   */\n      revert\n        /* \"#utility.yul\":2401:2464   */\n    tag_387:\n        /* \"#utility.yul\":2348:2470   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2476:2615   */\n    tag_327:\n        /* \"#utility.yul\":2522:2527   */\n      0x00\n        /* \"#utility.yul\":2560:2566   */\n      dup2\n        /* \"#utility.yul\":2547:2567   */\n      calldataload\n        /* \"#utility.yul\":2538:2567   */\n      swap1\n      pop\n        /* \"#utility.yul\":2576:2609   */\n      tag_389\n        /* \"#utility.yul\":2603:2608   */\n      dup2\n        /* \"#utility.yul\":2576:2609   */\n      tag_326\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":2476:2615   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2621:2743   */\n    tag_328:\n        /* \"#utility.yul\":2694:2718   */\n      tag_391\n        /* \"#utility.yul\":2712:2717   */\n      dup2\n        /* \"#utility.yul\":2694:2718   */\n      tag_319\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":2687:2692   */\n      dup2\n        /* \"#utility.yul\":2684:2719   */\n      eq\n        /* \"#utility.yul\":2674:2737   */\n      tag_392\n      jumpi\n        /* \"#utility.yul\":2733:2734   */\n      0x00\n        /* \"#utility.yul\":2730:2731   */\n      dup1\n        /* \"#utility.yul\":2723:2735   */\n      revert\n        /* \"#utility.yul\":2674:2737   */\n    tag_392:\n        /* \"#utility.yul\":2621:2743   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:2888   */\n    tag_329:\n        /* \"#utility.yul\":2795:2800   */\n      0x00\n        /* \"#utility.yul\":2833:2839   */\n      dup2\n        /* \"#utility.yul\":2820:2840   */\n      calldataload\n        /* \"#utility.yul\":2811:2840   */\n      swap1\n      pop\n        /* \"#utility.yul\":2849:2882   */\n      tag_394\n        /* \"#utility.yul\":2876:2881   */\n      dup2\n        /* \"#utility.yul\":2849:2882   */\n      tag_328\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2749:2888   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2894:3368   */\n    tag_35:\n        /* \"#utility.yul\":2962:2968   */\n      0x00\n        /* \"#utility.yul\":2970:2976   */\n      dup1\n        /* \"#utility.yul\":3019:3021   */\n      0x40\n        /* \"#utility.yul\":3007:3016   */\n      dup4\n        /* \"#utility.yul\":2998:3005   */\n      dup6\n        /* \"#utility.yul\":2994:3017   */\n      sub\n        /* \"#utility.yul\":2990:3022   */\n      slt\n        /* \"#utility.yul\":2987:3106   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":3025:3104   */\n      tag_397\n      tag_322\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":2987:3106   */\n    tag_396:\n        /* \"#utility.yul\":3145:3146   */\n      0x00\n        /* \"#utility.yul\":3170:3223   */\n      tag_398\n        /* \"#utility.yul\":3215:3222   */\n      dup6\n        /* \"#utility.yul\":3206:3212   */\n      dup3\n        /* \"#utility.yul\":3195:3204   */\n      dup7\n        /* \"#utility.yul\":3191:3213   */\n      add\n        /* \"#utility.yul\":3170:3223   */\n      tag_327\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":3160:3223   */\n      swap3\n      pop\n        /* \"#utility.yul\":3116:3233   */\n      pop\n        /* \"#utility.yul\":3272:3274   */\n      0x20\n        /* \"#utility.yul\":3298:3351   */\n      tag_399\n        /* \"#utility.yul\":3343:3350   */\n      dup6\n        /* \"#utility.yul\":3334:3340   */\n      dup3\n        /* \"#utility.yul\":3323:3332   */\n      dup7\n        /* \"#utility.yul\":3319:3341   */\n      add\n        /* \"#utility.yul\":3298:3351   */\n      tag_329\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":3288:3351   */\n      swap2\n      pop\n        /* \"#utility.yul\":3243:3361   */\n      pop\n        /* \"#utility.yul\":2894:3368   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3374:3464   */\n    tag_330:\n        /* \"#utility.yul\":3408:3415   */\n      0x00\n        /* \"#utility.yul\":3451:3456   */\n      dup2\n        /* \"#utility.yul\":3444:3457   */\n      iszero\n        /* \"#utility.yul\":3437:3458   */\n      iszero\n        /* \"#utility.yul\":3426:3458   */\n      swap1\n      pop\n        /* \"#utility.yul\":3374:3464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3470:3579   */\n    tag_331:\n        /* \"#utility.yul\":3551:3572   */\n      tag_402\n        /* \"#utility.yul\":3566:3571   */\n      dup2\n        /* \"#utility.yul\":3551:3572   */\n      tag_330\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3546:3549   */\n      dup3\n        /* \"#utility.yul\":3539:3573   */\n      mstore\n        /* \"#utility.yul\":3470:3579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3585:3795   */\n    tag_38:\n        /* \"#utility.yul\":3672:3676   */\n      0x00\n        /* \"#utility.yul\":3710:3712   */\n      0x20\n        /* \"#utility.yul\":3699:3708   */\n      dup3\n        /* \"#utility.yul\":3695:3713   */\n      add\n        /* \"#utility.yul\":3687:3713   */\n      swap1\n      pop\n        /* \"#utility.yul\":3723:3788   */\n      tag_404\n        /* \"#utility.yul\":3785:3786   */\n      0x00\n        /* \"#utility.yul\":3774:3783   */\n      dup4\n        /* \"#utility.yul\":3770:3787   */\n      add\n        /* \"#utility.yul\":3761:3767   */\n      dup5\n        /* \"#utility.yul\":3723:3788   */\n      tag_331\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3585:3795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3801:3861   */\n    tag_332:\n        /* \"#utility.yul\":3829:3832   */\n      0x00\n        /* \"#utility.yul\":3850:3855   */\n      dup2\n        /* \"#utility.yul\":3843:3855   */\n      swap1\n      pop\n        /* \"#utility.yul\":3801:3861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3867:4009   */\n    tag_333:\n        /* \"#utility.yul\":3917:3926   */\n      0x00\n        /* \"#utility.yul\":3950:4003   */\n      tag_407\n        /* \"#utility.yul\":3968:4002   */\n      tag_408\n        /* \"#utility.yul\":3977:4001   */\n      tag_409\n        /* \"#utility.yul\":3995:4000   */\n      dup5\n        /* \"#utility.yul\":3977:4001   */\n      tag_324\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":3968:4002   */\n      tag_332\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":3950:4003   */\n      tag_324\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":3937:4003   */\n      swap1\n      pop\n        /* \"#utility.yul\":3867:4009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4015:4141   */\n    tag_334:\n        /* \"#utility.yul\":4065:4074   */\n      0x00\n        /* \"#utility.yul\":4098:4135   */\n      tag_411\n        /* \"#utility.yul\":4129:4134   */\n      dup3\n        /* \"#utility.yul\":4098:4135   */\n      tag_333\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":4085:4135   */\n      swap1\n      pop\n        /* \"#utility.yul\":4015:4141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4147:4287   */\n    tag_335:\n        /* \"#utility.yul\":4211:4220   */\n      0x00\n        /* \"#utility.yul\":4244:4281   */\n      tag_413\n        /* \"#utility.yul\":4275:4280   */\n      dup3\n        /* \"#utility.yul\":4244:4281   */\n      tag_334\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4231:4281   */\n      swap1\n      pop\n        /* \"#utility.yul\":4147:4287   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4293:4452   */\n    tag_336:\n        /* \"#utility.yul\":4394:4445   */\n      tag_415\n        /* \"#utility.yul\":4439:4444   */\n      dup2\n        /* \"#utility.yul\":4394:4445   */\n      tag_335\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4389:4392   */\n      dup3\n        /* \"#utility.yul\":4382:4446   */\n      mstore\n        /* \"#utility.yul\":4293:4452   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4458:4708   */\n    tag_42:\n        /* \"#utility.yul\":4565:4569   */\n      0x00\n        /* \"#utility.yul\":4603:4605   */\n      0x20\n        /* \"#utility.yul\":4592:4601   */\n      dup3\n        /* \"#utility.yul\":4588:4606   */\n      add\n        /* \"#utility.yul\":4580:4606   */\n      swap1\n      pop\n        /* \"#utility.yul\":4616:4701   */\n      tag_417\n        /* \"#utility.yul\":4698:4699   */\n      0x00\n        /* \"#utility.yul\":4687:4696   */\n      dup4\n        /* \"#utility.yul\":4683:4700   */\n      add\n        /* \"#utility.yul\":4674:4680   */\n      dup5\n        /* \"#utility.yul\":4616:4701   */\n      tag_336\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4458:4708   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4714:5188   */\n    tag_45:\n        /* \"#utility.yul\":4782:4788   */\n      0x00\n        /* \"#utility.yul\":4790:4796   */\n      dup1\n        /* \"#utility.yul\":4839:4841   */\n      0x40\n        /* \"#utility.yul\":4827:4836   */\n      dup4\n        /* \"#utility.yul\":4818:4825   */\n      dup6\n        /* \"#utility.yul\":4814:4837   */\n      sub\n        /* \"#utility.yul\":4810:4842   */\n      slt\n        /* \"#utility.yul\":4807:4926   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":4845:4924   */\n      tag_420\n      tag_322\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":4807:4926   */\n    tag_419:\n        /* \"#utility.yul\":4965:4966   */\n      0x00\n        /* \"#utility.yul\":4990:5043   */\n      tag_421\n        /* \"#utility.yul\":5035:5042   */\n      dup6\n        /* \"#utility.yul\":5026:5032   */\n      dup3\n        /* \"#utility.yul\":5015:5024   */\n      dup7\n        /* \"#utility.yul\":5011:5033   */\n      add\n        /* \"#utility.yul\":4990:5043   */\n      tag_329\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":4980:5043   */\n      swap3\n      pop\n        /* \"#utility.yul\":4936:5053   */\n      pop\n        /* \"#utility.yul\":5092:5094   */\n      0x20\n        /* \"#utility.yul\":5118:5171   */\n      tag_422\n        /* \"#utility.yul\":5163:5170   */\n      dup6\n        /* \"#utility.yul\":5154:5160   */\n      dup3\n        /* \"#utility.yul\":5143:5152   */\n      dup7\n        /* \"#utility.yul\":5139:5161   */\n      add\n        /* \"#utility.yul\":5118:5171   */\n      tag_329\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":5108:5171   */\n      swap2\n      pop\n        /* \"#utility.yul\":5063:5181   */\n      pop\n        /* \"#utility.yul\":4714:5188   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5194:5416   */\n    tag_50:\n        /* \"#utility.yul\":5287:5291   */\n      0x00\n        /* \"#utility.yul\":5325:5327   */\n      0x20\n        /* \"#utility.yul\":5314:5323   */\n      dup3\n        /* \"#utility.yul\":5310:5328   */\n      add\n        /* \"#utility.yul\":5302:5328   */\n      swap1\n      pop\n        /* \"#utility.yul\":5338:5409   */\n      tag_424\n        /* \"#utility.yul\":5406:5407   */\n      0x00\n        /* \"#utility.yul\":5395:5404   */\n      dup4\n        /* \"#utility.yul\":5391:5408   */\n      add\n        /* \"#utility.yul\":5382:5388   */\n      dup5\n        /* \"#utility.yul\":5338:5409   */\n      tag_320\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5194:5416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5422:6041   */\n    tag_56:\n        /* \"#utility.yul\":5499:5505   */\n      0x00\n        /* \"#utility.yul\":5507:5513   */\n      dup1\n        /* \"#utility.yul\":5515:5521   */\n      0x00\n        /* \"#utility.yul\":5564:5566   */\n      0x60\n        /* \"#utility.yul\":5552:5561   */\n      dup5\n        /* \"#utility.yul\":5543:5550   */\n      dup7\n        /* \"#utility.yul\":5539:5562   */\n      sub\n        /* \"#utility.yul\":5535:5567   */\n      slt\n        /* \"#utility.yul\":5532:5651   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":5570:5649   */\n      tag_427\n      tag_322\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5532:5651   */\n    tag_426:\n        /* \"#utility.yul\":5690:5691   */\n      0x00\n        /* \"#utility.yul\":5715:5768   */\n      tag_428\n        /* \"#utility.yul\":5760:5767   */\n      dup7\n        /* \"#utility.yul\":5751:5757   */\n      dup3\n        /* \"#utility.yul\":5740:5749   */\n      dup8\n        /* \"#utility.yul\":5736:5758   */\n      add\n        /* \"#utility.yul\":5715:5768   */\n      tag_327\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":5705:5768   */\n      swap4\n      pop\n        /* \"#utility.yul\":5661:5778   */\n      pop\n        /* \"#utility.yul\":5817:5819   */\n      0x20\n        /* \"#utility.yul\":5843:5896   */\n      tag_429\n        /* \"#utility.yul\":5888:5895   */\n      dup7\n        /* \"#utility.yul\":5879:5885   */\n      dup3\n        /* \"#utility.yul\":5868:5877   */\n      dup8\n        /* \"#utility.yul\":5864:5886   */\n      add\n        /* \"#utility.yul\":5843:5896   */\n      tag_327\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":5833:5896   */\n      swap3\n      pop\n        /* \"#utility.yul\":5788:5906   */\n      pop\n        /* \"#utility.yul\":5945:5947   */\n      0x40\n        /* \"#utility.yul\":5971:6024   */\n      tag_430\n        /* \"#utility.yul\":6016:6023   */\n      dup7\n        /* \"#utility.yul\":6007:6013   */\n      dup3\n        /* \"#utility.yul\":5996:6005   */\n      dup8\n        /* \"#utility.yul\":5992:6014   */\n      add\n        /* \"#utility.yul\":5971:6024   */\n      tag_329\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5961:6024   */\n      swap2\n      pop\n        /* \"#utility.yul\":5916:6034   */\n      pop\n        /* \"#utility.yul\":5422:6041   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6047:6133   */\n    tag_337:\n        /* \"#utility.yul\":6082:6089   */\n      0x00\n        /* \"#utility.yul\":6122:6126   */\n      0xff\n        /* \"#utility.yul\":6115:6120   */\n      dup3\n        /* \"#utility.yul\":6111:6127   */\n      and\n        /* \"#utility.yul\":6100:6127   */\n      swap1\n      pop\n        /* \"#utility.yul\":6047:6133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6139:6251   */\n    tag_338:\n        /* \"#utility.yul\":6222:6244   */\n      tag_433\n        /* \"#utility.yul\":6238:6243   */\n      dup2\n        /* \"#utility.yul\":6222:6244   */\n      tag_337\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":6217:6220   */\n      dup3\n        /* \"#utility.yul\":6210:6245   */\n      mstore\n        /* \"#utility.yul\":6139:6251   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6257:6471   */\n    tag_62:\n        /* \"#utility.yul\":6346:6350   */\n      0x00\n        /* \"#utility.yul\":6384:6386   */\n      0x20\n        /* \"#utility.yul\":6373:6382   */\n      dup3\n        /* \"#utility.yul\":6369:6387   */\n      add\n        /* \"#utility.yul\":6361:6387   */\n      swap1\n      pop\n        /* \"#utility.yul\":6397:6464   */\n      tag_435\n        /* \"#utility.yul\":6461:6462   */\n      0x00\n        /* \"#utility.yul\":6450:6459   */\n      dup4\n        /* \"#utility.yul\":6446:6463   */\n      add\n        /* \"#utility.yul\":6437:6443   */\n      dup5\n        /* \"#utility.yul\":6397:6464   */\n      tag_338\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":6257:6471   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6477:6806   */\n    tag_68:\n        /* \"#utility.yul\":6536:6542   */\n      0x00\n        /* \"#utility.yul\":6585:6587   */\n      0x20\n        /* \"#utility.yul\":6573:6582   */\n      dup3\n        /* \"#utility.yul\":6564:6571   */\n      dup5\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_438\n      tag_322\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":6553:6672   */\n    tag_437:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_439\n        /* \"#utility.yul\":6781:6788   */\n      dup5\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup6\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_327\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6726:6789   */\n      swap2\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6477:6806   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6812:6930   */\n    tag_339:\n        /* \"#utility.yul\":6899:6923   */\n      tag_441\n        /* \"#utility.yul\":6917:6922   */\n      dup2\n        /* \"#utility.yul\":6899:6923   */\n      tag_325\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":6894:6897   */\n      dup3\n        /* \"#utility.yul\":6887:6924   */\n      mstore\n        /* \"#utility.yul\":6812:6930   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6936:7158   */\n    tag_74:\n        /* \"#utility.yul\":7029:7033   */\n      0x00\n        /* \"#utility.yul\":7067:7069   */\n      0x20\n        /* \"#utility.yul\":7056:7065   */\n      dup3\n        /* \"#utility.yul\":7052:7070   */\n      add\n        /* \"#utility.yul\":7044:7070   */\n      swap1\n      pop\n        /* \"#utility.yul\":7080:7151   */\n      tag_443\n        /* \"#utility.yul\":7148:7149   */\n      0x00\n        /* \"#utility.yul\":7137:7146   */\n      dup4\n        /* \"#utility.yul\":7133:7150   */\n      add\n        /* \"#utility.yul\":7124:7130   */\n      dup5\n        /* \"#utility.yul\":7080:7151   */\n      tag_339\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":6936:7158   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7164:7493   */\n    tag_80:\n        /* \"#utility.yul\":7223:7229   */\n      0x00\n        /* \"#utility.yul\":7272:7274   */\n      0x20\n        /* \"#utility.yul\":7260:7269   */\n      dup3\n        /* \"#utility.yul\":7251:7258   */\n      dup5\n        /* \"#utility.yul\":7247:7270   */\n      sub\n        /* \"#utility.yul\":7243:7275   */\n      slt\n        /* \"#utility.yul\":7240:7359   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":7278:7357   */\n      tag_446\n      tag_322\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7240:7359   */\n    tag_445:\n        /* \"#utility.yul\":7398:7399   */\n      0x00\n        /* \"#utility.yul\":7423:7476   */\n      tag_447\n        /* \"#utility.yul\":7468:7475   */\n      dup5\n        /* \"#utility.yul\":7459:7465   */\n      dup3\n        /* \"#utility.yul\":7448:7457   */\n      dup6\n        /* \"#utility.yul\":7444:7466   */\n      add\n        /* \"#utility.yul\":7423:7476   */\n      tag_329\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7413:7476   */\n      swap2\n      pop\n        /* \"#utility.yul\":7369:7486   */\n      pop\n        /* \"#utility.yul\":7164:7493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7499:7973   */\n    tag_98:\n        /* \"#utility.yul\":7567:7573   */\n      0x00\n        /* \"#utility.yul\":7575:7581   */\n      dup1\n        /* \"#utility.yul\":7624:7626   */\n      0x40\n        /* \"#utility.yul\":7612:7621   */\n      dup4\n        /* \"#utility.yul\":7603:7610   */\n      dup6\n        /* \"#utility.yul\":7599:7622   */\n      sub\n        /* \"#utility.yul\":7595:7627   */\n      slt\n        /* \"#utility.yul\":7592:7711   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":7630:7709   */\n      tag_450\n      tag_322\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":7592:7711   */\n    tag_449:\n        /* \"#utility.yul\":7750:7751   */\n      0x00\n        /* \"#utility.yul\":7775:7828   */\n      tag_451\n        /* \"#utility.yul\":7820:7827   */\n      dup6\n        /* \"#utility.yul\":7811:7817   */\n      dup3\n        /* \"#utility.yul\":7800:7809   */\n      dup7\n        /* \"#utility.yul\":7796:7818   */\n      add\n        /* \"#utility.yul\":7775:7828   */\n      tag_327\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":7765:7828   */\n      swap3\n      pop\n        /* \"#utility.yul\":7721:7838   */\n      pop\n        /* \"#utility.yul\":7877:7879   */\n      0x20\n        /* \"#utility.yul\":7903:7956   */\n      tag_452\n        /* \"#utility.yul\":7948:7955   */\n      dup6\n        /* \"#utility.yul\":7939:7945   */\n      dup3\n        /* \"#utility.yul\":7928:7937   */\n      dup7\n        /* \"#utility.yul\":7924:7946   */\n      add\n        /* \"#utility.yul\":7903:7956   */\n      tag_327\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":7893:7956   */\n      swap2\n      pop\n        /* \"#utility.yul\":7848:7966   */\n      pop\n        /* \"#utility.yul\":7499:7973   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7979:8159   */\n    tag_340:\n        /* \"#utility.yul\":8027:8104   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8024:8025   */\n      0x00\n        /* \"#utility.yul\":8017:8105   */\n      mstore\n        /* \"#utility.yul\":8124:8128   */\n      0x22\n        /* \"#utility.yul\":8121:8122   */\n      0x04\n        /* \"#utility.yul\":8114:8129   */\n      mstore\n        /* \"#utility.yul\":8148:8152   */\n      0x24\n        /* \"#utility.yul\":8145:8146   */\n      0x00\n        /* \"#utility.yul\":8138:8153   */\n      revert\n        /* \"#utility.yul\":8165:8485   */\n    tag_103:\n        /* \"#utility.yul\":8209:8215   */\n      0x00\n        /* \"#utility.yul\":8246:8247   */\n      0x02\n        /* \"#utility.yul\":8240:8244   */\n      dup3\n        /* \"#utility.yul\":8236:8248   */\n      div\n        /* \"#utility.yul\":8226:8248   */\n      swap1\n      pop\n        /* \"#utility.yul\":8293:8294   */\n      0x01\n        /* \"#utility.yul\":8287:8291   */\n      dup3\n        /* \"#utility.yul\":8283:8295   */\n      and\n        /* \"#utility.yul\":8314:8332   */\n      dup1\n        /* \"#utility.yul\":8304:8385   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":8370:8374   */\n      0x7f\n        /* \"#utility.yul\":8362:8368   */\n      dup3\n        /* \"#utility.yul\":8358:8375   */\n      and\n        /* \"#utility.yul\":8348:8375   */\n      swap2\n      pop\n        /* \"#utility.yul\":8304:8385   */\n    tag_455:\n        /* \"#utility.yul\":8432:8434   */\n      0x20\n        /* \"#utility.yul\":8424:8430   */\n      dup3\n        /* \"#utility.yul\":8421:8435   */\n      lt\n        /* \"#utility.yul\":8401:8419   */\n      dup2\n        /* \"#utility.yul\":8398:8436   */\n      sub\n        /* \"#utility.yul\":8395:8479   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":8451:8469   */\n      tag_457\n      tag_340\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8395:8479   */\n    tag_456:\n        /* \"#utility.yul\":8216:8485   */\n      pop\n        /* \"#utility.yul\":8165:8485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8491:8659   */\n    tag_341:\n        /* \"#utility.yul\":8631:8651   */\n      0x416d6f756e74206d757374206265203e20300000000000000000000000000000\n        /* \"#utility.yul\":8627:8628   */\n      0x00\n        /* \"#utility.yul\":8619:8625   */\n      dup3\n        /* \"#utility.yul\":8615:8629   */\n      add\n        /* \"#utility.yul\":8608:8652   */\n      mstore\n        /* \"#utility.yul\":8491:8659   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8665:9031   */\n    tag_342:\n        /* \"#utility.yul\":8807:8810   */\n      0x00\n        /* \"#utility.yul\":8828:8895   */\n      tag_460\n        /* \"#utility.yul\":8892:8894   */\n      0x12\n        /* \"#utility.yul\":8887:8890   */\n      dup4\n        /* \"#utility.yul\":8828:8895   */\n      tag_315\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":8821:8895   */\n      swap2\n      pop\n        /* \"#utility.yul\":8904:8997   */\n      tag_461\n        /* \"#utility.yul\":8993:8996   */\n      dup3\n        /* \"#utility.yul\":8904:8997   */\n      tag_341\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":9022:9024   */\n      0x20\n        /* \"#utility.yul\":9017:9020   */\n      dup3\n        /* \"#utility.yul\":9013:9025   */\n      add\n        /* \"#utility.yul\":9006:9025   */\n      swap1\n      pop\n        /* \"#utility.yul\":8665:9031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9037:9456   */\n    tag_117:\n        /* \"#utility.yul\":9203:9207   */\n      0x00\n        /* \"#utility.yul\":9241:9243   */\n      0x20\n        /* \"#utility.yul\":9230:9239   */\n      dup3\n        /* \"#utility.yul\":9226:9244   */\n      add\n        /* \"#utility.yul\":9218:9244   */\n      swap1\n      pop\n        /* \"#utility.yul\":9290:9299   */\n      dup2\n        /* \"#utility.yul\":9284:9288   */\n      dup2\n        /* \"#utility.yul\":9280:9300   */\n      sub\n        /* \"#utility.yul\":9276:9277   */\n      0x00\n        /* \"#utility.yul\":9265:9274   */\n      dup4\n        /* \"#utility.yul\":9261:9278   */\n      add\n        /* \"#utility.yul\":9254:9301   */\n      mstore\n        /* \"#utility.yul\":9318:9449   */\n      tag_463\n        /* \"#utility.yul\":9444:9448   */\n      dup2\n        /* \"#utility.yul\":9318:9449   */\n      tag_342\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":9310:9449   */\n      swap1\n      pop\n        /* \"#utility.yul\":9037:9456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9462:9633   */\n    tag_343:\n        /* \"#utility.yul\":9602:9625   */\n      0x496e73756666696369656e742072657365727665730000000000000000000000\n        /* \"#utility.yul\":9598:9599   */\n      0x00\n        /* \"#utility.yul\":9590:9596   */\n      dup3\n        /* \"#utility.yul\":9586:9600   */\n      add\n        /* \"#utility.yul\":9579:9626   */\n      mstore\n        /* \"#utility.yul\":9462:9633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9639:10005   */\n    tag_344:\n        /* \"#utility.yul\":9781:9784   */\n      0x00\n        /* \"#utility.yul\":9802:9869   */\n      tag_466\n        /* \"#utility.yul\":9866:9868   */\n      0x15\n        /* \"#utility.yul\":9861:9864   */\n      dup4\n        /* \"#utility.yul\":9802:9869   */\n      tag_315\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":9795:9869   */\n      swap2\n      pop\n        /* \"#utility.yul\":9878:9971   */\n      tag_467\n        /* \"#utility.yul\":9967:9970   */\n      dup3\n        /* \"#utility.yul\":9878:9971   */\n      tag_343\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":9996:9998   */\n      0x20\n        /* \"#utility.yul\":9991:9994   */\n      dup3\n        /* \"#utility.yul\":9987:9999   */\n      add\n        /* \"#utility.yul\":9980:9999   */\n      swap1\n      pop\n        /* \"#utility.yul\":9639:10005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10011:10430   */\n    tag_121:\n        /* \"#utility.yul\":10177:10181   */\n      0x00\n        /* \"#utility.yul\":10215:10217   */\n      0x20\n        /* \"#utility.yul\":10204:10213   */\n      dup3\n        /* \"#utility.yul\":10200:10218   */\n      add\n        /* \"#utility.yul\":10192:10218   */\n      swap1\n      pop\n        /* \"#utility.yul\":10264:10273   */\n      dup2\n        /* \"#utility.yul\":10258:10262   */\n      dup2\n        /* \"#utility.yul\":10254:10274   */\n      sub\n        /* \"#utility.yul\":10250:10251   */\n      0x00\n        /* \"#utility.yul\":10239:10248   */\n      dup4\n        /* \"#utility.yul\":10235:10252   */\n      add\n        /* \"#utility.yul\":10228:10275   */\n      mstore\n        /* \"#utility.yul\":10292:10423   */\n      tag_469\n        /* \"#utility.yul\":10418:10422   */\n      dup2\n        /* \"#utility.yul\":10292:10423   */\n      tag_344\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":10284:10423   */\n      swap1\n      pop\n        /* \"#utility.yul\":10011:10430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10436:10616   */\n    tag_345:\n        /* \"#utility.yul\":10484:10561   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10481:10482   */\n      0x00\n        /* \"#utility.yul\":10474:10562   */\n      mstore\n        /* \"#utility.yul\":10581:10585   */\n      0x11\n        /* \"#utility.yul\":10578:10579   */\n      0x04\n        /* \"#utility.yul\":10571:10586   */\n      mstore\n        /* \"#utility.yul\":10605:10609   */\n      0x24\n        /* \"#utility.yul\":10602:10603   */\n      0x00\n        /* \"#utility.yul\":10595:10610   */\n      revert\n        /* \"#utility.yul\":10622:11032   */\n    tag_123:\n        /* \"#utility.yul\":10662:10669   */\n      0x00\n        /* \"#utility.yul\":10685:10705   */\n      tag_472\n        /* \"#utility.yul\":10703:10704   */\n      dup3\n        /* \"#utility.yul\":10685:10705   */\n      tag_319\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":10680:10705   */\n      swap2\n      pop\n        /* \"#utility.yul\":10719:10739   */\n      tag_473\n        /* \"#utility.yul\":10737:10738   */\n      dup4\n        /* \"#utility.yul\":10719:10739   */\n      tag_319\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":10714:10739   */\n      swap3\n      pop\n        /* \"#utility.yul\":10774:10775   */\n      dup3\n        /* \"#utility.yul\":10771:10772   */\n      dup3\n        /* \"#utility.yul\":10767:10776   */\n      mul\n        /* \"#utility.yul\":10796:10826   */\n      tag_474\n        /* \"#utility.yul\":10814:10825   */\n      dup2\n        /* \"#utility.yul\":10796:10826   */\n      tag_319\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":10785:10826   */\n      swap2\n      pop\n        /* \"#utility.yul\":10975:10976   */\n      dup3\n        /* \"#utility.yul\":10966:10973   */\n      dup3\n        /* \"#utility.yul\":10962:10977   */\n      div\n        /* \"#utility.yul\":10959:10960   */\n      dup5\n        /* \"#utility.yul\":10956:10978   */\n      eq\n        /* \"#utility.yul\":10936:10937   */\n      dup4\n        /* \"#utility.yul\":10929:10938   */\n      iszero\n        /* \"#utility.yul\":10909:10992   */\n      or\n        /* \"#utility.yul\":10886:11025   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":11005:11023   */\n      tag_476\n      tag_345\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":10886:11025   */\n    tag_475:\n        /* \"#utility.yul\":10670:11032   */\n      pop\n        /* \"#utility.yul\":10622:11032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11038:11218   */\n    tag_346:\n        /* \"#utility.yul\":11086:11163   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11083:11084   */\n      0x00\n        /* \"#utility.yul\":11076:11164   */\n      mstore\n        /* \"#utility.yul\":11183:11187   */\n      0x12\n        /* \"#utility.yul\":11180:11181   */\n      0x04\n        /* \"#utility.yul\":11173:11188   */\n      mstore\n        /* \"#utility.yul\":11207:11211   */\n      0x24\n        /* \"#utility.yul\":11204:11205   */\n      0x00\n        /* \"#utility.yul\":11197:11212   */\n      revert\n        /* \"#utility.yul\":11224:11409   */\n    tag_125:\n        /* \"#utility.yul\":11264:11265   */\n      0x00\n        /* \"#utility.yul\":11281:11301   */\n      tag_479\n        /* \"#utility.yul\":11299:11300   */\n      dup3\n        /* \"#utility.yul\":11281:11301   */\n      tag_319\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11276:11301   */\n      swap2\n      pop\n        /* \"#utility.yul\":11315:11335   */\n      tag_480\n        /* \"#utility.yul\":11333:11334   */\n      dup4\n        /* \"#utility.yul\":11315:11335   */\n      tag_319\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":11310:11335   */\n      swap3\n      pop\n        /* \"#utility.yul\":11354:11355   */\n      dup3\n        /* \"#utility.yul\":11344:11379   */\n      tag_481\n      jumpi\n        /* \"#utility.yul\":11359:11377   */\n      tag_482\n      tag_346\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":11344:11379   */\n    tag_481:\n        /* \"#utility.yul\":11401:11402   */\n      dup3\n        /* \"#utility.yul\":11398:11399   */\n      dup3\n        /* \"#utility.yul\":11394:11403   */\n      div\n        /* \"#utility.yul\":11389:11403   */\n      swap1\n      pop\n        /* \"#utility.yul\":11224:11409   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11415:11606   */\n    tag_127:\n        /* \"#utility.yul\":11455:11458   */\n      0x00\n        /* \"#utility.yul\":11474:11494   */\n      tag_484\n        /* \"#utility.yul\":11492:11493   */\n      dup3\n        /* \"#utility.yul\":11474:11494   */\n      tag_319\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":11469:11494   */\n      swap2\n      pop\n        /* \"#utility.yul\":11508:11528   */\n      tag_485\n        /* \"#utility.yul\":11526:11527   */\n      dup4\n        /* \"#utility.yul\":11508:11528   */\n      tag_319\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":11503:11528   */\n      swap3\n      pop\n        /* \"#utility.yul\":11551:11552   */\n      dup3\n        /* \"#utility.yul\":11548:11549   */\n      dup3\n        /* \"#utility.yul\":11544:11553   */\n      add\n        /* \"#utility.yul\":11537:11553   */\n      swap1\n      pop\n        /* \"#utility.yul\":11572:11575   */\n      dup1\n        /* \"#utility.yul\":11569:11570   */\n      dup3\n        /* \"#utility.yul\":11566:11576   */\n      gt\n        /* \"#utility.yul\":11563:11599   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":11579:11597   */\n      tag_487\n      tag_345\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":11563:11599   */\n    tag_486:\n        /* \"#utility.yul\":11415:11606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11612:11779   */\n    tag_347:\n        /* \"#utility.yul\":11752:11771   */\n      0x536c69707061676520746f6f2068696768000000000000000000000000000000\n        /* \"#utility.yul\":11748:11749   */\n      0x00\n        /* \"#utility.yul\":11740:11746   */\n      dup3\n        /* \"#utility.yul\":11736:11750   */\n      add\n        /* \"#utility.yul\":11729:11772   */\n      mstore\n        /* \"#utility.yul\":11612:11779   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11785:12151   */\n    tag_348:\n        /* \"#utility.yul\":11927:11930   */\n      0x00\n        /* \"#utility.yul\":11948:12015   */\n      tag_490\n        /* \"#utility.yul\":12012:12014   */\n      0x11\n        /* \"#utility.yul\":12007:12010   */\n      dup4\n        /* \"#utility.yul\":11948:12015   */\n      tag_315\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":11941:12015   */\n      swap2\n      pop\n        /* \"#utility.yul\":12024:12117   */\n      tag_491\n        /* \"#utility.yul\":12113:12116   */\n      dup3\n        /* \"#utility.yul\":12024:12117   */\n      tag_347\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":12142:12144   */\n      0x20\n        /* \"#utility.yul\":12137:12140   */\n      dup3\n        /* \"#utility.yul\":12133:12145   */\n      add\n        /* \"#utility.yul\":12126:12145   */\n      swap1\n      pop\n        /* \"#utility.yul\":11785:12151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12157:12576   */\n    tag_132:\n        /* \"#utility.yul\":12323:12327   */\n      0x00\n        /* \"#utility.yul\":12361:12363   */\n      0x20\n        /* \"#utility.yul\":12350:12359   */\n      dup3\n        /* \"#utility.yul\":12346:12364   */\n      add\n        /* \"#utility.yul\":12338:12364   */\n      swap1\n      pop\n        /* \"#utility.yul\":12410:12419   */\n      dup2\n        /* \"#utility.yul\":12404:12408   */\n      dup2\n        /* \"#utility.yul\":12400:12420   */\n      sub\n        /* \"#utility.yul\":12396:12397   */\n      0x00\n        /* \"#utility.yul\":12385:12394   */\n      dup4\n        /* \"#utility.yul\":12381:12398   */\n      add\n        /* \"#utility.yul\":12374:12421   */\n      mstore\n        /* \"#utility.yul\":12438:12569   */\n      tag_493\n        /* \"#utility.yul\":12564:12568   */\n      dup2\n        /* \"#utility.yul\":12438:12569   */\n      tag_348\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":12430:12569   */\n      swap1\n      pop\n        /* \"#utility.yul\":12157:12576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12582:13024   */\n    tag_134:\n        /* \"#utility.yul\":12731:12735   */\n      0x00\n        /* \"#utility.yul\":12769:12771   */\n      0x60\n        /* \"#utility.yul\":12758:12767   */\n      dup3\n        /* \"#utility.yul\":12754:12772   */\n      add\n        /* \"#utility.yul\":12746:12772   */\n      swap1\n      pop\n        /* \"#utility.yul\":12782:12853   */\n      tag_495\n        /* \"#utility.yul\":12850:12851   */\n      0x00\n        /* \"#utility.yul\":12839:12848   */\n      dup4\n        /* \"#utility.yul\":12835:12852   */\n      add\n        /* \"#utility.yul\":12826:12832   */\n      dup7\n        /* \"#utility.yul\":12782:12853   */\n      tag_339\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":12863:12935   */\n      tag_496\n        /* \"#utility.yul\":12931:12933   */\n      0x20\n        /* \"#utility.yul\":12920:12929   */\n      dup4\n        /* \"#utility.yul\":12916:12934   */\n      add\n        /* \"#utility.yul\":12907:12913   */\n      dup6\n        /* \"#utility.yul\":12863:12935   */\n      tag_339\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":12945:13017   */\n      tag_497\n        /* \"#utility.yul\":13013:13015   */\n      0x40\n        /* \"#utility.yul\":13002:13011   */\n      dup4\n        /* \"#utility.yul\":12998:13016   */\n      add\n        /* \"#utility.yul\":12989:12995   */\n      dup5\n        /* \"#utility.yul\":12945:13017   */\n      tag_320\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":12582:13024   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13030:13146   */\n    tag_349:\n        /* \"#utility.yul\":13100:13121   */\n      tag_499\n        /* \"#utility.yul\":13115:13120   */\n      dup2\n        /* \"#utility.yul\":13100:13121   */\n      tag_330\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":13093:13098   */\n      dup2\n        /* \"#utility.yul\":13090:13122   */\n      eq\n        /* \"#utility.yul\":13080:13140   */\n      tag_500\n      jumpi\n        /* \"#utility.yul\":13136:13137   */\n      0x00\n        /* \"#utility.yul\":13133:13134   */\n      dup1\n        /* \"#utility.yul\":13126:13138   */\n      revert\n        /* \"#utility.yul\":13080:13140   */\n    tag_500:\n        /* \"#utility.yul\":13030:13146   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13152:13289   */\n    tag_350:\n        /* \"#utility.yul\":13206:13211   */\n      0x00\n        /* \"#utility.yul\":13237:13243   */\n      dup2\n        /* \"#utility.yul\":13231:13244   */\n      mload\n        /* \"#utility.yul\":13222:13244   */\n      swap1\n      pop\n        /* \"#utility.yul\":13253:13283   */\n      tag_502\n        /* \"#utility.yul\":13277:13282   */\n      dup2\n        /* \"#utility.yul\":13253:13283   */\n      tag_349\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":13152:13289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13295:13640   */\n    tag_138:\n        /* \"#utility.yul\":13362:13368   */\n      0x00\n        /* \"#utility.yul\":13411:13413   */\n      0x20\n        /* \"#utility.yul\":13399:13408   */\n      dup3\n        /* \"#utility.yul\":13390:13397   */\n      dup5\n        /* \"#utility.yul\":13386:13409   */\n      sub\n        /* \"#utility.yul\":13382:13414   */\n      slt\n        /* \"#utility.yul\":13379:13498   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":13417:13496   */\n      tag_505\n      tag_322\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":13379:13498   */\n    tag_504:\n        /* \"#utility.yul\":13537:13538   */\n      0x00\n        /* \"#utility.yul\":13562:13623   */\n      tag_506\n        /* \"#utility.yul\":13615:13622   */\n      dup5\n        /* \"#utility.yul\":13606:13612   */\n      dup3\n        /* \"#utility.yul\":13595:13604   */\n      dup6\n        /* \"#utility.yul\":13591:13613   */\n      add\n        /* \"#utility.yul\":13562:13623   */\n      tag_350\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":13552:13623   */\n      swap2\n      pop\n        /* \"#utility.yul\":13508:13633   */\n      pop\n        /* \"#utility.yul\":13295:13640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13646:13978   */\n    tag_140:\n        /* \"#utility.yul\":13767:13771   */\n      0x00\n        /* \"#utility.yul\":13805:13807   */\n      0x40\n        /* \"#utility.yul\":13794:13803   */\n      dup3\n        /* \"#utility.yul\":13790:13808   */\n      add\n        /* \"#utility.yul\":13782:13808   */\n      swap1\n      pop\n        /* \"#utility.yul\":13818:13889   */\n      tag_508\n        /* \"#utility.yul\":13886:13887   */\n      0x00\n        /* \"#utility.yul\":13875:13884   */\n      dup4\n        /* \"#utility.yul\":13871:13888   */\n      add\n        /* \"#utility.yul\":13862:13868   */\n      dup6\n        /* \"#utility.yul\":13818:13889   */\n      tag_339\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":13899:13971   */\n      tag_509\n        /* \"#utility.yul\":13967:13969   */\n      0x20\n        /* \"#utility.yul\":13956:13965   */\n      dup4\n        /* \"#utility.yul\":13952:13970   */\n      add\n        /* \"#utility.yul\":13943:13949   */\n      dup5\n        /* \"#utility.yul\":13899:13971   */\n      tag_320\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":13646:13978   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13984:14178   */\n    tag_146:\n        /* \"#utility.yul\":14024:14028   */\n      0x00\n        /* \"#utility.yul\":14044:14064   */\n      tag_511\n        /* \"#utility.yul\":14062:14063   */\n      dup3\n        /* \"#utility.yul\":14044:14064   */\n      tag_319\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":14039:14064   */\n      swap2\n      pop\n        /* \"#utility.yul\":14078:14098   */\n      tag_512\n        /* \"#utility.yul\":14096:14097   */\n      dup4\n        /* \"#utility.yul\":14078:14098   */\n      tag_319\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":14073:14098   */\n      swap3\n      pop\n        /* \"#utility.yul\":14122:14123   */\n      dup3\n        /* \"#utility.yul\":14119:14120   */\n      dup3\n        /* \"#utility.yul\":14115:14124   */\n      sub\n        /* \"#utility.yul\":14107:14124   */\n      swap1\n      pop\n        /* \"#utility.yul\":14146:14147   */\n      dup2\n        /* \"#utility.yul\":14140:14144   */\n      dup2\n        /* \"#utility.yul\":14137:14148   */\n      gt\n        /* \"#utility.yul\":14134:14171   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":14151:14169   */\n      tag_514\n      tag_345\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":14134:14171   */\n    tag_513:\n        /* \"#utility.yul\":13984:14178   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14184:14737   */\n    tag_148:\n        /* \"#utility.yul\":14361:14365   */\n      0x00\n        /* \"#utility.yul\":14399:14402   */\n      0x80\n        /* \"#utility.yul\":14388:14397   */\n      dup3\n        /* \"#utility.yul\":14384:14403   */\n      add\n        /* \"#utility.yul\":14376:14403   */\n      swap1\n      pop\n        /* \"#utility.yul\":14413:14484   */\n      tag_516\n        /* \"#utility.yul\":14481:14482   */\n      0x00\n        /* \"#utility.yul\":14470:14479   */\n      dup4\n        /* \"#utility.yul\":14466:14483   */\n      add\n        /* \"#utility.yul\":14457:14463   */\n      dup8\n        /* \"#utility.yul\":14413:14484   */\n      tag_339\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":14494:14566   */\n      tag_517\n        /* \"#utility.yul\":14562:14564   */\n      0x20\n        /* \"#utility.yul\":14551:14560   */\n      dup4\n        /* \"#utility.yul\":14547:14565   */\n      add\n        /* \"#utility.yul\":14538:14544   */\n      dup7\n        /* \"#utility.yul\":14494:14566   */\n      tag_320\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":14576:14648   */\n      tag_518\n        /* \"#utility.yul\":14644:14646   */\n      0x40\n        /* \"#utility.yul\":14633:14642   */\n      dup4\n        /* \"#utility.yul\":14629:14647   */\n      add\n        /* \"#utility.yul\":14620:14626   */\n      dup6\n        /* \"#utility.yul\":14576:14648   */\n      tag_339\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":14658:14730   */\n      tag_519\n        /* \"#utility.yul\":14726:14728   */\n      0x60\n        /* \"#utility.yul\":14715:14724   */\n      dup4\n        /* \"#utility.yul\":14711:14729   */\n      add\n        /* \"#utility.yul\":14702:14708   */\n      dup5\n        /* \"#utility.yul\":14658:14730   */\n      tag_320\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":14184:14737   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14743:14924   */\n    tag_351:\n        /* \"#utility.yul\":14883:14916   */\n      0x4c697175696469747920746f2072656d6f7665206d757374206265203e203000\n        /* \"#utility.yul\":14879:14880   */\n      0x00\n        /* \"#utility.yul\":14871:14877   */\n      dup3\n        /* \"#utility.yul\":14867:14881   */\n      add\n        /* \"#utility.yul\":14860:14917   */\n      mstore\n        /* \"#utility.yul\":14743:14924   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14930:15296   */\n    tag_352:\n        /* \"#utility.yul\":15072:15075   */\n      0x00\n        /* \"#utility.yul\":15093:15160   */\n      tag_522\n        /* \"#utility.yul\":15157:15159   */\n      0x1f\n        /* \"#utility.yul\":15152:15155   */\n      dup4\n        /* \"#utility.yul\":15093:15160   */\n      tag_315\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":15086:15160   */\n      swap2\n      pop\n        /* \"#utility.yul\":15169:15262   */\n      tag_523\n        /* \"#utility.yul\":15258:15261   */\n      dup3\n        /* \"#utility.yul\":15169:15262   */\n      tag_351\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":15287:15289   */\n      0x20\n        /* \"#utility.yul\":15282:15285   */\n      dup3\n        /* \"#utility.yul\":15278:15290   */\n      add\n        /* \"#utility.yul\":15271:15290   */\n      swap1\n      pop\n        /* \"#utility.yul\":14930:15296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15302:15721   */\n    tag_167:\n        /* \"#utility.yul\":15468:15472   */\n      0x00\n        /* \"#utility.yul\":15506:15508   */\n      0x20\n        /* \"#utility.yul\":15495:15504   */\n      dup3\n        /* \"#utility.yul\":15491:15509   */\n      add\n        /* \"#utility.yul\":15483:15509   */\n      swap1\n      pop\n        /* \"#utility.yul\":15555:15564   */\n      dup2\n        /* \"#utility.yul\":15549:15553   */\n      dup2\n        /* \"#utility.yul\":15545:15565   */\n      sub\n        /* \"#utility.yul\":15541:15542   */\n      0x00\n        /* \"#utility.yul\":15530:15539   */\n      dup4\n        /* \"#utility.yul\":15526:15543   */\n      add\n        /* \"#utility.yul\":15519:15566   */\n      mstore\n        /* \"#utility.yul\":15583:15714   */\n      tag_525\n        /* \"#utility.yul\":15709:15713   */\n      dup2\n        /* \"#utility.yul\":15583:15714   */\n      tag_352\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":15575:15714   */\n      swap1\n      pop\n        /* \"#utility.yul\":15302:15721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15727:15906   */\n    tag_353:\n        /* \"#utility.yul\":15867:15898   */\n      0x496e73756666696369656e74206c697175696469747920746f6b656e73000000\n        /* \"#utility.yul\":15863:15864   */\n      0x00\n        /* \"#utility.yul\":15855:15861   */\n      dup3\n        /* \"#utility.yul\":15851:15865   */\n      add\n        /* \"#utility.yul\":15844:15899   */\n      mstore\n        /* \"#utility.yul\":15727:15906   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15912:16278   */\n    tag_354:\n        /* \"#utility.yul\":16054:16057   */\n      0x00\n        /* \"#utility.yul\":16075:16142   */\n      tag_528\n        /* \"#utility.yul\":16139:16141   */\n      0x1d\n        /* \"#utility.yul\":16134:16137   */\n      dup4\n        /* \"#utility.yul\":16075:16142   */\n      tag_315\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":16068:16142   */\n      swap2\n      pop\n        /* \"#utility.yul\":16151:16244   */\n      tag_529\n        /* \"#utility.yul\":16240:16243   */\n      dup3\n        /* \"#utility.yul\":16151:16244   */\n      tag_353\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":16269:16271   */\n      0x20\n        /* \"#utility.yul\":16264:16267   */\n      dup3\n        /* \"#utility.yul\":16260:16272   */\n      add\n        /* \"#utility.yul\":16253:16272   */\n      swap1\n      pop\n        /* \"#utility.yul\":15912:16278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16284:16703   */\n    tag_171:\n        /* \"#utility.yul\":16450:16454   */\n      0x00\n        /* \"#utility.yul\":16488:16490   */\n      0x20\n        /* \"#utility.yul\":16477:16486   */\n      dup3\n        /* \"#utility.yul\":16473:16491   */\n      add\n        /* \"#utility.yul\":16465:16491   */\n      swap1\n      pop\n        /* \"#utility.yul\":16537:16546   */\n      dup2\n        /* \"#utility.yul\":16531:16535   */\n      dup2\n        /* \"#utility.yul\":16527:16547   */\n      sub\n        /* \"#utility.yul\":16523:16524   */\n      0x00\n        /* \"#utility.yul\":16512:16521   */\n      dup4\n        /* \"#utility.yul\":16508:16525   */\n      add\n        /* \"#utility.yul\":16501:16548   */\n      mstore\n        /* \"#utility.yul\":16565:16696   */\n      tag_531\n        /* \"#utility.yul\":16691:16695   */\n      dup2\n        /* \"#utility.yul\":16565:16696   */\n      tag_354\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":16557:16696   */\n      swap1\n      pop\n        /* \"#utility.yul\":16284:16703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16709:16883   */\n    tag_355:\n        /* \"#utility.yul\":16849:16875   */\n      0x4e6f206c697175696469747920696e2074686520706f6f6c0000000000000000\n        /* \"#utility.yul\":16845:16846   */\n      0x00\n        /* \"#utility.yul\":16837:16843   */\n      dup3\n        /* \"#utility.yul\":16833:16847   */\n      add\n        /* \"#utility.yul\":16826:16876   */\n      mstore\n        /* \"#utility.yul\":16709:16883   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16889:17255   */\n    tag_356:\n        /* \"#utility.yul\":17031:17034   */\n      0x00\n        /* \"#utility.yul\":17052:17119   */\n      tag_534\n        /* \"#utility.yul\":17116:17118   */\n      0x18\n        /* \"#utility.yul\":17111:17114   */\n      dup4\n        /* \"#utility.yul\":17052:17119   */\n      tag_315\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":17045:17119   */\n      swap2\n      pop\n        /* \"#utility.yul\":17128:17221   */\n      tag_535\n        /* \"#utility.yul\":17217:17220   */\n      dup3\n        /* \"#utility.yul\":17128:17221   */\n      tag_355\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":17246:17248   */\n      0x20\n        /* \"#utility.yul\":17241:17244   */\n      dup3\n        /* \"#utility.yul\":17237:17249   */\n      add\n        /* \"#utility.yul\":17230:17249   */\n      swap1\n      pop\n        /* \"#utility.yul\":16889:17255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17261:17680   */\n    tag_175:\n        /* \"#utility.yul\":17427:17431   */\n      0x00\n        /* \"#utility.yul\":17465:17467   */\n      0x20\n        /* \"#utility.yul\":17454:17463   */\n      dup3\n        /* \"#utility.yul\":17450:17468   */\n      add\n        /* \"#utility.yul\":17442:17468   */\n      swap1\n      pop\n        /* \"#utility.yul\":17514:17523   */\n      dup2\n        /* \"#utility.yul\":17508:17512   */\n      dup2\n        /* \"#utility.yul\":17504:17524   */\n      sub\n        /* \"#utility.yul\":17500:17501   */\n      0x00\n        /* \"#utility.yul\":17489:17498   */\n      dup4\n        /* \"#utility.yul\":17485:17502   */\n      add\n        /* \"#utility.yul\":17478:17525   */\n      mstore\n        /* \"#utility.yul\":17542:17673   */\n      tag_537\n        /* \"#utility.yul\":17668:17672   */\n      dup2\n        /* \"#utility.yul\":17542:17673   */\n      tag_356\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":17534:17673   */\n      swap1\n      pop\n        /* \"#utility.yul\":17261:17680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17686:17918   */\n    tag_357:\n        /* \"#utility.yul\":17826:17860   */\n      0x496e73756666696369656e7420726573657276657320666f7220726571756573\n        /* \"#utility.yul\":17822:17823   */\n      0x00\n        /* \"#utility.yul\":17814:17820   */\n      dup3\n        /* \"#utility.yul\":17810:17824   */\n      add\n        /* \"#utility.yul\":17803:17861   */\n      mstore\n        /* \"#utility.yul\":17895:17910   */\n      0x746564206c697175696469747900000000000000000000000000000000000000\n        /* \"#utility.yul\":17890:17892   */\n      0x20\n        /* \"#utility.yul\":17882:17888   */\n      dup3\n        /* \"#utility.yul\":17878:17893   */\n      add\n        /* \"#utility.yul\":17871:17911   */\n      mstore\n        /* \"#utility.yul\":17686:17918   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17924:18290   */\n    tag_358:\n        /* \"#utility.yul\":18066:18069   */\n      0x00\n        /* \"#utility.yul\":18087:18154   */\n      tag_540\n        /* \"#utility.yul\":18151:18153   */\n      0x2d\n        /* \"#utility.yul\":18146:18149   */\n      dup4\n        /* \"#utility.yul\":18087:18154   */\n      tag_315\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":18080:18154   */\n      swap2\n      pop\n        /* \"#utility.yul\":18163:18256   */\n      tag_541\n        /* \"#utility.yul\":18252:18255   */\n      dup3\n        /* \"#utility.yul\":18163:18256   */\n      tag_357\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":18281:18283   */\n      0x40\n        /* \"#utility.yul\":18276:18279   */\n      dup3\n        /* \"#utility.yul\":18272:18284   */\n      add\n        /* \"#utility.yul\":18265:18284   */\n      swap1\n      pop\n        /* \"#utility.yul\":17924:18290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18296:18715   */\n    tag_183:\n        /* \"#utility.yul\":18462:18466   */\n      0x00\n        /* \"#utility.yul\":18500:18502   */\n      0x20\n        /* \"#utility.yul\":18489:18498   */\n      dup3\n        /* \"#utility.yul\":18485:18503   */\n      add\n        /* \"#utility.yul\":18477:18503   */\n      swap1\n      pop\n        /* \"#utility.yul\":18549:18558   */\n      dup2\n        /* \"#utility.yul\":18543:18547   */\n      dup2\n        /* \"#utility.yul\":18539:18559   */\n      sub\n        /* \"#utility.yul\":18535:18536   */\n      0x00\n        /* \"#utility.yul\":18524:18533   */\n      dup4\n        /* \"#utility.yul\":18520:18537   */\n      add\n        /* \"#utility.yul\":18513:18560   */\n      mstore\n        /* \"#utility.yul\":18577:18708   */\n      tag_543\n        /* \"#utility.yul\":18703:18707   */\n      dup2\n        /* \"#utility.yul\":18577:18708   */\n      tag_358\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":18569:18708   */\n      swap1\n      pop\n        /* \"#utility.yul\":18296:18715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18721:19163   */\n    tag_197:\n        /* \"#utility.yul\":18870:18874   */\n      0x00\n        /* \"#utility.yul\":18908:18910   */\n      0x60\n        /* \"#utility.yul\":18897:18906   */\n      dup3\n        /* \"#utility.yul\":18893:18911   */\n      add\n        /* \"#utility.yul\":18885:18911   */\n      swap1\n      pop\n        /* \"#utility.yul\":18921:18992   */\n      tag_545\n        /* \"#utility.yul\":18989:18990   */\n      0x00\n        /* \"#utility.yul\":18978:18987   */\n      dup4\n        /* \"#utility.yul\":18974:18991   */\n      add\n        /* \"#utility.yul\":18965:18971   */\n      dup7\n        /* \"#utility.yul\":18921:18992   */\n      tag_320\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":19002:19074   */\n      tag_546\n        /* \"#utility.yul\":19070:19072   */\n      0x20\n        /* \"#utility.yul\":19059:19068   */\n      dup4\n        /* \"#utility.yul\":19055:19073   */\n      add\n        /* \"#utility.yul\":19046:19052   */\n      dup6\n        /* \"#utility.yul\":19002:19074   */\n      tag_320\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":19084:19156   */\n      tag_547\n        /* \"#utility.yul\":19152:19154   */\n      0x40\n        /* \"#utility.yul\":19141:19150   */\n      dup4\n        /* \"#utility.yul\":19137:19155   */\n      add\n        /* \"#utility.yul\":19128:19134   */\n      dup5\n        /* \"#utility.yul\":19084:19156   */\n      tag_320\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":18721:19163   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19169:19338   */\n    tag_359:\n        /* \"#utility.yul\":19309:19330   */\n      0x416d6f756e7473206d757374206265203e203000000000000000000000000000\n        /* \"#utility.yul\":19305:19306   */\n      0x00\n        /* \"#utility.yul\":19297:19303   */\n      dup3\n        /* \"#utility.yul\":19293:19307   */\n      add\n        /* \"#utility.yul\":19286:19331   */\n      mstore\n        /* \"#utility.yul\":19169:19338   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19344:19710   */\n    tag_360:\n        /* \"#utility.yul\":19486:19489   */\n      0x00\n        /* \"#utility.yul\":19507:19574   */\n      tag_550\n        /* \"#utility.yul\":19571:19573   */\n      0x13\n        /* \"#utility.yul\":19566:19569   */\n      dup4\n        /* \"#utility.yul\":19507:19574   */\n      tag_315\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":19500:19574   */\n      swap2\n      pop\n        /* \"#utility.yul\":19583:19676   */\n      tag_551\n        /* \"#utility.yul\":19672:19675   */\n      dup3\n        /* \"#utility.yul\":19583:19676   */\n      tag_359\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":19701:19703   */\n      0x20\n        /* \"#utility.yul\":19696:19699   */\n      dup3\n        /* \"#utility.yul\":19692:19704   */\n      add\n        /* \"#utility.yul\":19685:19704   */\n      swap1\n      pop\n        /* \"#utility.yul\":19344:19710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19716:20135   */\n    tag_202:\n        /* \"#utility.yul\":19882:19886   */\n      0x00\n        /* \"#utility.yul\":19920:19922   */\n      0x20\n        /* \"#utility.yul\":19909:19918   */\n      dup3\n        /* \"#utility.yul\":19905:19923   */\n      add\n        /* \"#utility.yul\":19897:19923   */\n      swap1\n      pop\n        /* \"#utility.yul\":19969:19978   */\n      dup2\n        /* \"#utility.yul\":19963:19967   */\n      dup2\n        /* \"#utility.yul\":19959:19979   */\n      sub\n        /* \"#utility.yul\":19955:19956   */\n      0x00\n        /* \"#utility.yul\":19944:19953   */\n      dup4\n        /* \"#utility.yul\":19940:19957   */\n      add\n        /* \"#utility.yul\":19933:19980   */\n      mstore\n        /* \"#utility.yul\":19997:20128   */\n      tag_553\n        /* \"#utility.yul\":20123:20127   */\n      dup2\n        /* \"#utility.yul\":19997:20128   */\n      tag_360\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":19989:20128   */\n      swap1\n      pop\n        /* \"#utility.yul\":19716:20135   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20141:20583   */\n    tag_267:\n        /* \"#utility.yul\":20290:20294   */\n      0x00\n        /* \"#utility.yul\":20328:20330   */\n      0x60\n        /* \"#utility.yul\":20317:20326   */\n      dup3\n        /* \"#utility.yul\":20313:20331   */\n      add\n        /* \"#utility.yul\":20305:20331   */\n      swap1\n      pop\n        /* \"#utility.yul\":20341:20412   */\n      tag_555\n        /* \"#utility.yul\":20409:20410   */\n      0x00\n        /* \"#utility.yul\":20398:20407   */\n      dup4\n        /* \"#utility.yul\":20394:20411   */\n      add\n        /* \"#utility.yul\":20385:20391   */\n      dup7\n        /* \"#utility.yul\":20341:20412   */\n      tag_339\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":20422:20494   */\n      tag_556\n        /* \"#utility.yul\":20490:20492   */\n      0x20\n        /* \"#utility.yul\":20479:20488   */\n      dup4\n        /* \"#utility.yul\":20475:20493   */\n      add\n        /* \"#utility.yul\":20466:20472   */\n      dup6\n        /* \"#utility.yul\":20422:20494   */\n      tag_320\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":20504:20576   */\n      tag_557\n        /* \"#utility.yul\":20572:20574   */\n      0x40\n        /* \"#utility.yul\":20561:20570   */\n      dup4\n        /* \"#utility.yul\":20557:20575   */\n      add\n        /* \"#utility.yul\":20548:20554   */\n      dup5\n        /* \"#utility.yul\":20504:20576   */\n      tag_320\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":20141:20583   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220346cedd78c8de6014a09f251cc8f0f95cd4d2bbc32d49f5c984ac0aad817508a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_868": {
									"entryPoint": null,
									"id": 868,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_memory": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 286,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 397,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1013,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9291:6",
										"nodeType": "YulBlock",
										"src": "0:9291:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "934:28:6",
													"nodeType": "YulBlock",
													"src": "934:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:1:6",
																		"nodeType": "YulLiteral",
																		"src": "951:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:6",
																		"nodeType": "YulLiteral",
																		"src": "954:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:6"
																},
																"nativeSrc": "944:12:6",
																"nodeType": "YulFunctionCall",
																"src": "944:12:6"
															},
															"nativeSrc": "944:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "944:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "845:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:6"
											},
											{
												"body": {
													"nativeSrc": "1057:28:6",
													"nodeType": "YulBlock",
													"src": "1057:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1074:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1077:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1067:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:6"
																},
																"nativeSrc": "1067:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1067:12:6"
															},
															"nativeSrc": "1067:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1067:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "968:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "968:117:6"
											},
											{
												"body": {
													"nativeSrc": "1139:54:6",
													"nodeType": "YulBlock",
													"src": "1139:54:6",
													"statements": [
														{
															"nativeSrc": "1149:38:6",
															"nodeType": "YulAssignment",
															"src": "1149:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1167:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1167:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1174:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:6"
																		},
																		"nativeSrc": "1163:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1183:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1183:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1179:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:6"
																		},
																		"nativeSrc": "1179:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1179:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1159:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:6"
																},
																"nativeSrc": "1159:28:6",
																"nodeType": "YulFunctionCall",
																"src": "1159:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1149:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1091:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1122:5:6",
														"nodeType": "YulTypedName",
														"src": "1122:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1132:6:6",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"src": "1091:102:6"
											},
											{
												"body": {
													"nativeSrc": "1227:152:6",
													"nodeType": "YulBlock",
													"src": "1227:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1244:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1247:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1247:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1237:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:6"
																},
																"nativeSrc": "1237:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1237:88:6"
															},
															"nativeSrc": "1237:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1237:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1344:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:6"
																},
																"nativeSrc": "1334:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1334:15:6"
															},
															"nativeSrc": "1334:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1334:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1368:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1368:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1358:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:6"
																},
																"nativeSrc": "1358:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1358:15:6"
															},
															"nativeSrc": "1358:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1358:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1199:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:180:6"
											},
											{
												"body": {
													"nativeSrc": "1428:238:6",
													"nodeType": "YulBlock",
													"src": "1428:238:6",
													"statements": [
														{
															"nativeSrc": "1438:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1438:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1460:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1490:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1490:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1468:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "1468:21:6"
																		},
																		"nativeSrc": "1468:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1468:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1456:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:6"
																},
																"nativeSrc": "1456:40:6",
																"nodeType": "YulFunctionCall",
																"src": "1456:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1442:10:6",
																	"nodeType": "YulTypedName",
																	"src": "1442:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:22:6",
																"nodeType": "YulBlock",
																"src": "1607:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1609:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:6"
																			},
																			"nativeSrc": "1609:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:6"
																		},
																		"nativeSrc": "1609:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1550:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1550:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1562:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1562:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1547:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1547:2:6"
																		},
																		"nativeSrc": "1547:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1547:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1586:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1586:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1598:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1583:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:6"
																		},
																		"nativeSrc": "1583:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1583:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1544:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:6"
																},
																"nativeSrc": "1544:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1544:62:6"
															},
															"nativeSrc": "1541:88:6",
															"nodeType": "YulIf",
															"src": "1541:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1645:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1649:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1649:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:6"
																},
																"nativeSrc": "1638:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1638:22:6"
															},
															"nativeSrc": "1638:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1638:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1385:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1414:6:6",
														"nodeType": "YulTypedName",
														"src": "1414:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1422:4:6",
														"nodeType": "YulTypedName",
														"src": "1422:4:6",
														"type": ""
													}
												],
												"src": "1385:281:6"
											},
											{
												"body": {
													"nativeSrc": "1713:88:6",
													"nodeType": "YulBlock",
													"src": "1713:88:6",
													"statements": [
														{
															"nativeSrc": "1723:30:6",
															"nodeType": "YulAssignment",
															"src": "1723:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1733:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1733:18:6"
																},
																"nativeSrc": "1733:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1733:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1723:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1782:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1790:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1762:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1762:19:6"
																},
																"nativeSrc": "1762:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1762:33:6"
															},
															"nativeSrc": "1762:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1672:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1697:4:6",
														"nodeType": "YulTypedName",
														"src": "1697:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1706:6:6",
														"nodeType": "YulTypedName",
														"src": "1706:6:6",
														"type": ""
													}
												],
												"src": "1672:129:6"
											},
											{
												"body": {
													"nativeSrc": "1874:241:6",
													"nodeType": "YulBlock",
													"src": "1874:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1979:22:6",
																"nodeType": "YulBlock",
																"src": "1979:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1981:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1981:16:6"
																			},
																			"nativeSrc": "1981:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1981:18:6"
																		},
																		"nativeSrc": "1981:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1981:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1951:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1951:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1959:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1959:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1948:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1948:2:6"
																},
																"nativeSrc": "1948:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1948:30:6"
															},
															"nativeSrc": "1945:56:6",
															"nodeType": "YulIf",
															"src": "1945:56:6"
														},
														{
															"nativeSrc": "2011:37:6",
															"nodeType": "YulAssignment",
															"src": "2011:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2041:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2041:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2019:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "2019:21:6"
																},
																"nativeSrc": "2019:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2019:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2011:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:6"
																}
															]
														},
														{
															"nativeSrc": "2085:23:6",
															"nodeType": "YulAssignment",
															"src": "2085:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2097:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2097:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2093:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:6"
																},
																"nativeSrc": "2093:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2093:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2085:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2085:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1807:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1858:6:6",
														"nodeType": "YulTypedName",
														"src": "1858:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1869:4:6",
														"nodeType": "YulTypedName",
														"src": "1869:4:6",
														"type": ""
													}
												],
												"src": "1807:308:6"
											},
											{
												"body": {
													"nativeSrc": "2183:77:6",
													"nodeType": "YulBlock",
													"src": "2183:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2200:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2200:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2205:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2205:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2210:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2210:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2194:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2194:5:6"
																},
																"nativeSrc": "2194:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2194:23:6"
															},
															"nativeSrc": "2194:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "2194:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2237:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2237:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2242:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2242:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2233:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2233:3:6"
																		},
																		"nativeSrc": "2233:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2233:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2251:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2251:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2226:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:6"
																},
																"nativeSrc": "2226:27:6",
																"nodeType": "YulFunctionCall",
																"src": "2226:27:6"
															},
															"nativeSrc": "2226:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "2226:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2121:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2165:3:6",
														"nodeType": "YulTypedName",
														"src": "2165:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2170:3:6",
														"nodeType": "YulTypedName",
														"src": "2170:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2175:6:6",
														"nodeType": "YulTypedName",
														"src": "2175:6:6",
														"type": ""
													}
												],
												"src": "2121:139:6"
											},
											{
												"body": {
													"nativeSrc": "2361:339:6",
													"nodeType": "YulBlock",
													"src": "2361:339:6",
													"statements": [
														{
															"nativeSrc": "2371:75:6",
															"nodeType": "YulAssignment",
															"src": "2371:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2438:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2438:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2396:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "2396:41:6"
																		},
																		"nativeSrc": "2396:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2396:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2380:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "2380:15:6"
																},
																"nativeSrc": "2380:66:6",
																"nodeType": "YulFunctionCall",
																"src": "2380:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2371:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2462:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2462:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2469:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2455:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2455:6:6"
																},
																"nativeSrc": "2455:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2455:21:6"
															},
															"nativeSrc": "2455:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "2455:21:6"
														},
														{
															"nativeSrc": "2485:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2485:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2500:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2500:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2507:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2507:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2496:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:6"
																},
																"nativeSrc": "2496:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2496:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2489:3:6",
																	"nodeType": "YulTypedName",
																	"src": "2489:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2550:83:6",
																"nodeType": "YulBlock",
																"src": "2550:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2552:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2552:77:6"
																			},
																			"nativeSrc": "2552:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2552:79:6"
																		},
																		"nativeSrc": "2552:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2552:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2531:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2531:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2536:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:6"
																		},
																		"nativeSrc": "2527:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2545:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2545:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2524:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2524:2:6"
																},
																"nativeSrc": "2524:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2524:25:6"
															},
															"nativeSrc": "2521:112:6",
															"nodeType": "YulIf",
															"src": "2521:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2677:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2677:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2682:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2682:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2687:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2687:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2642:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2642:34:6"
																},
																"nativeSrc": "2642:52:6",
																"nodeType": "YulFunctionCall",
																"src": "2642:52:6"
															},
															"nativeSrc": "2642:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "2642:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2266:434:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2334:3:6",
														"nodeType": "YulTypedName",
														"src": "2334:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2339:6:6",
														"nodeType": "YulTypedName",
														"src": "2339:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:6",
														"nodeType": "YulTypedName",
														"src": "2347:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2355:5:6",
														"nodeType": "YulTypedName",
														"src": "2355:5:6",
														"type": ""
													}
												],
												"src": "2266:434:6"
											},
											{
												"body": {
													"nativeSrc": "2793:282:6",
													"nodeType": "YulBlock",
													"src": "2793:282:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2842:83:6",
																"nodeType": "YulBlock",
																"src": "2842:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2844:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2844:77:6"
																			},
																			"nativeSrc": "2844:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2844:79:6"
																		},
																		"nativeSrc": "2844:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2844:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2821:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2821:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2829:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2829:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2817:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2817:3:6"
																				},
																				"nativeSrc": "2817:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2817:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2836:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2813:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2813:3:6"
																		},
																		"nativeSrc": "2813:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2813:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2806:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2806:6:6"
																},
																"nativeSrc": "2806:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2806:35:6"
															},
															"nativeSrc": "2803:122:6",
															"nodeType": "YulIf",
															"src": "2803:122:6"
														},
														{
															"nativeSrc": "2934:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2934:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2954:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2954:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2948:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2948:5:6"
																},
																"nativeSrc": "2948:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2948:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2938:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2938:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2970:99:6",
															"nodeType": "YulAssignment",
															"src": "2970:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3042:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3042:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3050:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3050:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3038:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3038:3:6"
																		},
																		"nativeSrc": "3038:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3038:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3057:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3057:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3065:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3065:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2979:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2979:58:6"
																},
																"nativeSrc": "2979:90:6",
																"nodeType": "YulFunctionCall",
																"src": "2979:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2970:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2720:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2771:6:6",
														"nodeType": "YulTypedName",
														"src": "2771:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2779:3:6",
														"nodeType": "YulTypedName",
														"src": "2779:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2787:5:6",
														"nodeType": "YulTypedName",
														"src": "2787:5:6",
														"type": ""
													}
												],
												"src": "2720:355:6"
											},
											{
												"body": {
													"nativeSrc": "3229:1018:6",
													"nodeType": "YulBlock",
													"src": "3229:1018:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3276:83:6",
																"nodeType": "YulBlock",
																"src": "3276:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3278:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3278:77:6"
																			},
																			"nativeSrc": "3278:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3278:79:6"
																		},
																		"nativeSrc": "3278:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3278:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3250:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3250:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3259:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3259:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3246:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3246:3:6"
																		},
																		"nativeSrc": "3246:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3246:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3271:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3271:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3242:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3242:3:6"
																},
																"nativeSrc": "3242:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3242:33:6"
															},
															"nativeSrc": "3239:120:6",
															"nodeType": "YulIf",
															"src": "3239:120:6"
														},
														{
															"nativeSrc": "3369:128:6",
															"nodeType": "YulBlock",
															"src": "3369:128:6",
															"statements": [
																{
																	"nativeSrc": "3384:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3384:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3398:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3398:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3388:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3388:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3413:74:6",
																	"nodeType": "YulAssignment",
																	"src": "3413:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3459:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3459:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3470:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3470:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3455:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3455:3:6"
																				},
																				"nativeSrc": "3455:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3455:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3479:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3479:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3423:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "3423:31:6"
																		},
																		"nativeSrc": "3423:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3423:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3413:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3413:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3507:129:6",
															"nodeType": "YulBlock",
															"src": "3507:129:6",
															"statements": [
																{
																	"nativeSrc": "3522:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3522:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3536:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3536:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3526:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3526:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3552:74:6",
																	"nodeType": "YulAssignment",
																	"src": "3552:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3598:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3598:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3609:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3609:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3594:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3594:3:6"
																				},
																				"nativeSrc": "3594:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3594:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3618:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3618:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3562:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "3562:31:6"
																		},
																		"nativeSrc": "3562:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3562:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3552:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3552:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3646:292:6",
															"nodeType": "YulBlock",
															"src": "3646:292:6",
															"statements": [
																{
																	"nativeSrc": "3661:39:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3661:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3685:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3685:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3696:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3696:2:6",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3681:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3681:3:6"
																				},
																				"nativeSrc": "3681:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3681:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3675:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3675:5:6"
																		},
																		"nativeSrc": "3675:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3675:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3665:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3665:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3747:83:6",
																		"nodeType": "YulBlock",
																		"src": "3747:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3749:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3749:77:6"
																					},
																					"nativeSrc": "3749:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3749:79:6"
																				},
																				"nativeSrc": "3749:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3749:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3719:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3719:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3727:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3727:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3716:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3716:2:6"
																		},
																		"nativeSrc": "3716:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:30:6"
																	},
																	"nativeSrc": "3713:117:6",
																	"nodeType": "YulIf",
																	"src": "3713:117:6"
																},
																{
																	"nativeSrc": "3844:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3844:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3900:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3900:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3911:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3911:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3896:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3896:3:6"
																				},
																				"nativeSrc": "3896:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3896:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3920:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3920:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3854:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3854:41:6"
																		},
																		"nativeSrc": "3854:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3854:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3844:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3844:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3948:292:6",
															"nodeType": "YulBlock",
															"src": "3948:292:6",
															"statements": [
																{
																	"nativeSrc": "3963:39:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3963:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3987:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3987:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3998:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3998:2:6",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3983:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3983:3:6"
																				},
																				"nativeSrc": "3983:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3983:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3977:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3977:5:6"
																		},
																		"nativeSrc": "3977:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3977:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3967:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3967:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4049:83:6",
																		"nodeType": "YulBlock",
																		"src": "4049:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4051:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "4051:77:6"
																					},
																					"nativeSrc": "4051:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4051:79:6"
																				},
																				"nativeSrc": "4051:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4051:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4021:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4021:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4029:18:6",
																				"nodeType": "YulLiteral",
																				"src": "4029:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4018:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4018:2:6"
																		},
																		"nativeSrc": "4018:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4018:30:6"
																	},
																	"nativeSrc": "4015:117:6",
																	"nodeType": "YulIf",
																	"src": "4015:117:6"
																},
																{
																	"nativeSrc": "4146:84:6",
																	"nodeType": "YulAssignment",
																	"src": "4146:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4202:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4202:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4213:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4213:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4198:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4198:3:6"
																				},
																				"nativeSrc": "4198:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4198:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4222:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4222:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4156:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "4156:41:6"
																		},
																		"nativeSrc": "4156:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4156:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4146:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4146:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "3081:1166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3175:9:6",
														"nodeType": "YulTypedName",
														"src": "3175:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3186:7:6",
														"nodeType": "YulTypedName",
														"src": "3186:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3198:6:6",
														"nodeType": "YulTypedName",
														"src": "3198:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3206:6:6",
														"nodeType": "YulTypedName",
														"src": "3206:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3214:6:6",
														"nodeType": "YulTypedName",
														"src": "3214:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3222:6:6",
														"nodeType": "YulTypedName",
														"src": "3222:6:6",
														"type": ""
													}
												],
												"src": "3081:1166:6"
											},
											{
												"body": {
													"nativeSrc": "4312:40:6",
													"nodeType": "YulBlock",
													"src": "4312:40:6",
													"statements": [
														{
															"nativeSrc": "4323:22:6",
															"nodeType": "YulAssignment",
															"src": "4323:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4339:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4339:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4333:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4333:5:6"
																},
																"nativeSrc": "4333:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4333:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4323:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4323:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4253:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4295:5:6",
														"nodeType": "YulTypedName",
														"src": "4295:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4305:6:6",
														"nodeType": "YulTypedName",
														"src": "4305:6:6",
														"type": ""
													}
												],
												"src": "4253:99:6"
											},
											{
												"body": {
													"nativeSrc": "4386:152:6",
													"nodeType": "YulBlock",
													"src": "4386:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4403:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4403:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4406:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4406:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4396:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:6"
																},
																"nativeSrc": "4396:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4396:88:6"
															},
															"nativeSrc": "4396:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4396:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4500:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4500:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4503:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4503:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4493:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4493:6:6"
																},
																"nativeSrc": "4493:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4493:15:6"
															},
															"nativeSrc": "4493:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4493:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4527:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4527:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4517:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4517:6:6"
																},
																"nativeSrc": "4517:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4517:15:6"
															},
															"nativeSrc": "4517:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4517:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4358:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4358:180:6"
											},
											{
												"body": {
													"nativeSrc": "4595:269:6",
													"nodeType": "YulBlock",
													"src": "4595:269:6",
													"statements": [
														{
															"nativeSrc": "4605:22:6",
															"nodeType": "YulAssignment",
															"src": "4605:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4619:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4619:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4625:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4625:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4615:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:6"
																},
																"nativeSrc": "4615:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4615:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4605:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4605:6:6"
																}
															]
														},
														{
															"nativeSrc": "4636:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4636:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4666:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4666:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4672:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4672:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4662:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4662:3:6"
																},
																"nativeSrc": "4662:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4662:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4640:18:6",
																	"nodeType": "YulTypedName",
																	"src": "4640:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4713:51:6",
																"nodeType": "YulBlock",
																"src": "4713:51:6",
																"statements": [
																	{
																		"nativeSrc": "4727:27:6",
																		"nodeType": "YulAssignment",
																		"src": "4727:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4741:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4741:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4749:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4749:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4737:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4737:3:6"
																			},
																			"nativeSrc": "4737:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4737:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4727:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4727:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4693:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4693:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4686:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:6"
																},
																"nativeSrc": "4686:26:6",
																"nodeType": "YulFunctionCall",
																"src": "4686:26:6"
															},
															"nativeSrc": "4683:81:6",
															"nodeType": "YulIf",
															"src": "4683:81:6"
														},
														{
															"body": {
																"nativeSrc": "4816:42:6",
																"nodeType": "YulBlock",
																"src": "4816:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4830:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4830:16:6"
																			},
																			"nativeSrc": "4830:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4830:18:6"
																		},
																		"nativeSrc": "4830:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4830:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4780:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4780:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4803:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4803:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4811:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4811:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4800:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4800:2:6"
																		},
																		"nativeSrc": "4800:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4800:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4777:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4777:2:6"
																},
																"nativeSrc": "4777:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4777:38:6"
															},
															"nativeSrc": "4774:84:6",
															"nodeType": "YulIf",
															"src": "4774:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4544:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4579:4:6",
														"nodeType": "YulTypedName",
														"src": "4579:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4588:6:6",
														"nodeType": "YulTypedName",
														"src": "4588:6:6",
														"type": ""
													}
												],
												"src": "4544:320:6"
											},
											{
												"body": {
													"nativeSrc": "4924:87:6",
													"nodeType": "YulBlock",
													"src": "4924:87:6",
													"statements": [
														{
															"nativeSrc": "4934:11:6",
															"nodeType": "YulAssignment",
															"src": "4934:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "4942:3:6",
																"nodeType": "YulIdentifier",
																"src": "4942:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4934:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4962:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4962:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4965:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4965:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4955:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4955:6:6"
																},
																"nativeSrc": "4955:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4955:14:6"
															},
															"nativeSrc": "4955:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "4955:14:6"
														},
														{
															"nativeSrc": "4978:26:6",
															"nodeType": "YulAssignment",
															"src": "4978:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4996:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4999:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4999:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4986:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4986:9:6"
																},
																"nativeSrc": "4986:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4986:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4978:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4978:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4870:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4911:3:6",
														"nodeType": "YulTypedName",
														"src": "4911:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4919:4:6",
														"nodeType": "YulTypedName",
														"src": "4919:4:6",
														"type": ""
													}
												],
												"src": "4870:141:6"
											},
											{
												"body": {
													"nativeSrc": "5061:49:6",
													"nodeType": "YulBlock",
													"src": "5061:49:6",
													"statements": [
														{
															"nativeSrc": "5071:33:6",
															"nodeType": "YulAssignment",
															"src": "5071:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5089:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5089:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5096:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5096:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5085:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5085:3:6"
																		},
																		"nativeSrc": "5085:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5085:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5101:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5101:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5081:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5081:3:6"
																},
																"nativeSrc": "5081:23:6",
																"nodeType": "YulFunctionCall",
																"src": "5081:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5071:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5071:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5017:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5044:5:6",
														"nodeType": "YulTypedName",
														"src": "5044:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5054:6:6",
														"nodeType": "YulTypedName",
														"src": "5054:6:6",
														"type": ""
													}
												],
												"src": "5017:93:6"
											},
											{
												"body": {
													"nativeSrc": "5169:54:6",
													"nodeType": "YulBlock",
													"src": "5169:54:6",
													"statements": [
														{
															"nativeSrc": "5179:37:6",
															"nodeType": "YulAssignment",
															"src": "5179:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5204:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5204:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5210:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5210:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5200:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5200:3:6"
																},
																"nativeSrc": "5200:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5200:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5179:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5179:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5116:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5144:4:6",
														"nodeType": "YulTypedName",
														"src": "5144:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5150:5:6",
														"nodeType": "YulTypedName",
														"src": "5150:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5160:8:6",
														"nodeType": "YulTypedName",
														"src": "5160:8:6",
														"type": ""
													}
												],
												"src": "5116:107:6"
											},
											{
												"body": {
													"nativeSrc": "5305:317:6",
													"nodeType": "YulBlock",
													"src": "5305:317:6",
													"statements": [
														{
															"nativeSrc": "5315:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5315:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5336:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "5336:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5348:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5348:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5332:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5332:3:6"
																},
																"nativeSrc": "5332:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5332:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5319:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5319:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5359:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5359:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5390:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5390:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5401:66:6",
																		"nodeType": "YulLiteral",
																		"src": "5401:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5371:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5371:18:6"
																},
																"nativeSrc": "5371:97:6",
																"nodeType": "YulFunctionCall",
																"src": "5371:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5363:4:6",
																	"nodeType": "YulTypedName",
																	"src": "5363:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5477:51:6",
															"nodeType": "YulAssignment",
															"src": "5477:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5508:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5508:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5519:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "5519:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5489:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5489:18:6"
																},
																"nativeSrc": "5489:39:6",
																"nodeType": "YulFunctionCall",
																"src": "5489:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5477:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5477:8:6"
																}
															]
														},
														{
															"nativeSrc": "5537:30:6",
															"nodeType": "YulAssignment",
															"src": "5537:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5550:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5561:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5561:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5557:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:6"
																		},
																		"nativeSrc": "5557:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5557:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5546:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5546:3:6"
																},
																"nativeSrc": "5546:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5546:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5537:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5537:5:6"
																}
															]
														},
														{
															"nativeSrc": "5576:40:6",
															"nodeType": "YulAssignment",
															"src": "5576:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5589:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5589:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5600:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "5600:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5610:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5610:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5596:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5596:3:6"
																		},
																		"nativeSrc": "5596:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5596:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5586:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5586:2:6"
																},
																"nativeSrc": "5586:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5586:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5576:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5576:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5229:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5266:5:6",
														"nodeType": "YulTypedName",
														"src": "5266:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5273:10:6",
														"nodeType": "YulTypedName",
														"src": "5273:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5285:8:6",
														"nodeType": "YulTypedName",
														"src": "5285:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5298:6:6",
														"nodeType": "YulTypedName",
														"src": "5298:6:6",
														"type": ""
													}
												],
												"src": "5229:393:6"
											},
											{
												"body": {
													"nativeSrc": "5673:32:6",
													"nodeType": "YulBlock",
													"src": "5673:32:6",
													"statements": [
														{
															"nativeSrc": "5683:16:6",
															"nodeType": "YulAssignment",
															"src": "5683:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "5694:5:6",
																"nodeType": "YulIdentifier",
																"src": "5694:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5683:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5683:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5628:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5655:5:6",
														"nodeType": "YulTypedName",
														"src": "5655:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5665:7:6",
														"nodeType": "YulTypedName",
														"src": "5665:7:6",
														"type": ""
													}
												],
												"src": "5628:77:6"
											},
											{
												"body": {
													"nativeSrc": "5743:28:6",
													"nodeType": "YulBlock",
													"src": "5743:28:6",
													"statements": [
														{
															"nativeSrc": "5753:12:6",
															"nodeType": "YulAssignment",
															"src": "5753:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5760:5:6",
																"nodeType": "YulIdentifier",
																"src": "5760:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5753:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5753:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5711:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5729:5:6",
														"nodeType": "YulTypedName",
														"src": "5729:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5739:3:6",
														"nodeType": "YulTypedName",
														"src": "5739:3:6",
														"type": ""
													}
												],
												"src": "5711:60:6"
											},
											{
												"body": {
													"nativeSrc": "5837:82:6",
													"nodeType": "YulBlock",
													"src": "5837:82:6",
													"statements": [
														{
															"nativeSrc": "5847:66:6",
															"nodeType": "YulAssignment",
															"src": "5847:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5905:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5905:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5887:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "5887:17:6"
																				},
																				"nativeSrc": "5887:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5887:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5878:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "5878:8:6"
																		},
																		"nativeSrc": "5878:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5878:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5860:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5860:17:6"
																},
																"nativeSrc": "5860:53:6",
																"nodeType": "YulFunctionCall",
																"src": "5860:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5847:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5847:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5777:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:6",
														"nodeType": "YulTypedName",
														"src": "5817:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5827:9:6",
														"nodeType": "YulTypedName",
														"src": "5827:9:6",
														"type": ""
													}
												],
												"src": "5777:142:6"
											},
											{
												"body": {
													"nativeSrc": "5972:28:6",
													"nodeType": "YulBlock",
													"src": "5972:28:6",
													"statements": [
														{
															"nativeSrc": "5982:12:6",
															"nodeType": "YulAssignment",
															"src": "5982:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5989:5:6",
																"nodeType": "YulIdentifier",
																"src": "5989:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5982:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5982:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5925:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5958:5:6",
														"nodeType": "YulTypedName",
														"src": "5958:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5968:3:6",
														"nodeType": "YulTypedName",
														"src": "5968:3:6",
														"type": ""
													}
												],
												"src": "5925:75:6"
											},
											{
												"body": {
													"nativeSrc": "6082:193:6",
													"nodeType": "YulBlock",
													"src": "6082:193:6",
													"statements": [
														{
															"nativeSrc": "6092:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6092:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6147:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "6147:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6116:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6116:30:6"
																},
																"nativeSrc": "6116:39:6",
																"nodeType": "YulFunctionCall",
																"src": "6116:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6096:16:6",
																	"nodeType": "YulTypedName",
																	"src": "6096:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6171:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6171:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6211:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6211:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6205:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6205:5:6"
																				},
																				"nativeSrc": "6205:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6205:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6218:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6218:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6250:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "6250:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6226:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "6226:23:6"
																				},
																				"nativeSrc": "6226:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6226:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6177:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "6177:27:6"
																		},
																		"nativeSrc": "6177:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6177:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6164:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6164:6:6"
																},
																"nativeSrc": "6164:105:6",
																"nodeType": "YulFunctionCall",
																"src": "6164:105:6"
															},
															"nativeSrc": "6164:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "6164:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6006:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6059:4:6",
														"nodeType": "YulTypedName",
														"src": "6059:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6065:6:6",
														"nodeType": "YulTypedName",
														"src": "6065:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6073:7:6",
														"nodeType": "YulTypedName",
														"src": "6073:7:6",
														"type": ""
													}
												],
												"src": "6006:269:6"
											},
											{
												"body": {
													"nativeSrc": "6330:24:6",
													"nodeType": "YulBlock",
													"src": "6330:24:6",
													"statements": [
														{
															"nativeSrc": "6340:8:6",
															"nodeType": "YulAssignment",
															"src": "6340:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6347:1:6",
																"nodeType": "YulLiteral",
																"src": "6347:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6340:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6340:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6281:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6326:3:6",
														"nodeType": "YulTypedName",
														"src": "6326:3:6",
														"type": ""
													}
												],
												"src": "6281:73:6"
											},
											{
												"body": {
													"nativeSrc": "6413:136:6",
													"nodeType": "YulBlock",
													"src": "6413:136:6",
													"statements": [
														{
															"nativeSrc": "6423:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6423:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6437:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6437:30:6"
																},
																"nativeSrc": "6437:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6437:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6427:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6427:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6522:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6522:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6528:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6528:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6536:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6536:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6478:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6478:43:6"
																},
																"nativeSrc": "6478:65:6",
																"nodeType": "YulFunctionCall",
																"src": "6478:65:6"
															},
															"nativeSrc": "6478:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "6478:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6360:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6399:4:6",
														"nodeType": "YulTypedName",
														"src": "6399:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6405:6:6",
														"nodeType": "YulTypedName",
														"src": "6405:6:6",
														"type": ""
													}
												],
												"src": "6360:189:6"
											},
											{
												"body": {
													"nativeSrc": "6605:136:6",
													"nodeType": "YulBlock",
													"src": "6605:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6672:63:6",
																"nodeType": "YulBlock",
																"src": "6672:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6716:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6716:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6723:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6723:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6686:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "6686:29:6"
																			},
																			"nativeSrc": "6686:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6686:39:6"
																		},
																		"nativeSrc": "6686:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6686:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6625:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6625:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6632:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6632:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6622:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6622:2:6"
																},
																"nativeSrc": "6622:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6622:14:6"
															},
															"nativeSrc": "6615:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6637:26:6",
																"nodeType": "YulBlock",
																"src": "6637:26:6",
																"statements": [
																	{
																		"nativeSrc": "6639:22:6",
																		"nodeType": "YulAssignment",
																		"src": "6639:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6652:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6652:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6659:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6659:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6648:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6648:3:6"
																			},
																			"nativeSrc": "6648:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6648:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6639:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6619:2:6",
																"nodeType": "YulBlock",
																"src": "6619:2:6",
																"statements": []
															},
															"src": "6615:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6555:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6593:5:6",
														"nodeType": "YulTypedName",
														"src": "6593:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6600:3:6",
														"nodeType": "YulTypedName",
														"src": "6600:3:6",
														"type": ""
													}
												],
												"src": "6555:186:6"
											},
											{
												"body": {
													"nativeSrc": "6826:464:6",
													"nodeType": "YulBlock",
													"src": "6826:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6852:431:6",
																"nodeType": "YulBlock",
																"src": "6852:431:6",
																"statements": [
																	{
																		"nativeSrc": "6866:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6866:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6914:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6914:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6882:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "6882:31:6"
																			},
																			"nativeSrc": "6882:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6882:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6870:8:6",
																				"nodeType": "YulTypedName",
																				"src": "6870:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6933:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6933:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6956:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "6956:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6984:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "6984:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6966:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "6966:17:6"
																					},
																					"nativeSrc": "6966:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6966:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6952:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6952:3:6"
																			},
																			"nativeSrc": "6952:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6952:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6937:11:6",
																				"nodeType": "YulTypedName",
																				"src": "6937:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7153:27:6",
																			"nodeType": "YulBlock",
																			"src": "7153:27:6",
																			"statements": [
																				{
																					"nativeSrc": "7155:23:6",
																					"nodeType": "YulAssignment",
																					"src": "7155:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7170:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "7170:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7155:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "7155:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7137:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "7137:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7149:2:6",
																					"nodeType": "YulLiteral",
																					"src": "7149:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7134:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "7134:2:6"
																			},
																			"nativeSrc": "7134:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7134:18:6"
																		},
																		"nativeSrc": "7131:49:6",
																		"nodeType": "YulIf",
																		"src": "7131:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7222:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "7222:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7239:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "7239:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7267:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7267:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7249:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "7249:17:6"
																							},
																							"nativeSrc": "7249:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7249:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7235:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7235:3:6"
																					},
																					"nativeSrc": "7235:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7235:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7193:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "7193:28:6"
																			},
																			"nativeSrc": "7193:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7193:80:6"
																		},
																		"nativeSrc": "7193:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7193:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6843:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6843:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6848:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6848:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6840:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6840:2:6"
																},
																"nativeSrc": "6840:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6840:11:6"
															},
															"nativeSrc": "6837:446:6",
															"nodeType": "YulIf",
															"src": "6837:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6747:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6802:5:6",
														"nodeType": "YulTypedName",
														"src": "6802:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6809:3:6",
														"nodeType": "YulTypedName",
														"src": "6809:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6814:10:6",
														"nodeType": "YulTypedName",
														"src": "6814:10:6",
														"type": ""
													}
												],
												"src": "6747:543:6"
											},
											{
												"body": {
													"nativeSrc": "7359:54:6",
													"nodeType": "YulBlock",
													"src": "7359:54:6",
													"statements": [
														{
															"nativeSrc": "7369:37:6",
															"nodeType": "YulAssignment",
															"src": "7369:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7394:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7394:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7400:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7400:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7390:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7390:3:6"
																},
																"nativeSrc": "7390:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7390:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7369:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "7369:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7296:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7334:4:6",
														"nodeType": "YulTypedName",
														"src": "7334:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7340:5:6",
														"nodeType": "YulTypedName",
														"src": "7340:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7350:8:6",
														"nodeType": "YulTypedName",
														"src": "7350:8:6",
														"type": ""
													}
												],
												"src": "7296:117:6"
											},
											{
												"body": {
													"nativeSrc": "7470:118:6",
													"nodeType": "YulBlock",
													"src": "7470:118:6",
													"statements": [
														{
															"nativeSrc": "7480:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7480:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7529:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7529:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7532:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7532:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7525:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7525:3:6"
																				},
																				"nativeSrc": "7525:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7525:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7544:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7544:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7540:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7540:3:6"
																				},
																				"nativeSrc": "7540:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7540:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7496:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "7496:28:6"
																		},
																		"nativeSrc": "7496:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7496:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7492:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7492:3:6"
																},
																"nativeSrc": "7492:56:6",
																"nodeType": "YulFunctionCall",
																"src": "7492:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7484:4:6",
																	"nodeType": "YulTypedName",
																	"src": "7484:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7557:25:6",
															"nodeType": "YulAssignment",
															"src": "7557:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7571:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7571:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7577:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7577:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7567:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7567:3:6"
																},
																"nativeSrc": "7567:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7567:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7557:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7557:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7419:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7447:4:6",
														"nodeType": "YulTypedName",
														"src": "7447:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7453:5:6",
														"nodeType": "YulTypedName",
														"src": "7453:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7463:6:6",
														"nodeType": "YulTypedName",
														"src": "7463:6:6",
														"type": ""
													}
												],
												"src": "7419:169:6"
											},
											{
												"body": {
													"nativeSrc": "7674:214:6",
													"nodeType": "YulBlock",
													"src": "7674:214:6",
													"statements": [
														{
															"nativeSrc": "7807:37:6",
															"nodeType": "YulAssignment",
															"src": "7807:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7834:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7834:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7840:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7840:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7815:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "7815:18:6"
																},
																"nativeSrc": "7815:29:6",
																"nodeType": "YulFunctionCall",
																"src": "7815:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7807:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7807:4:6"
																}
															]
														},
														{
															"nativeSrc": "7853:29:6",
															"nodeType": "YulAssignment",
															"src": "7853:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7864:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7864:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7874:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7874:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7877:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7877:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7870:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7870:3:6"
																		},
																		"nativeSrc": "7870:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7870:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7861:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7861:2:6"
																},
																"nativeSrc": "7861:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7861:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7853:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7853:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7593:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7655:4:6",
														"nodeType": "YulTypedName",
														"src": "7655:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7661:3:6",
														"nodeType": "YulTypedName",
														"src": "7661:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7669:4:6",
														"nodeType": "YulTypedName",
														"src": "7669:4:6",
														"type": ""
													}
												],
												"src": "7593:295:6"
											},
											{
												"body": {
													"nativeSrc": "7985:1303:6",
													"nodeType": "YulBlock",
													"src": "7985:1303:6",
													"statements": [
														{
															"nativeSrc": "7996:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7996:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8043:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8043:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8010:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "8010:32:6"
																},
																"nativeSrc": "8010:37:6",
																"nodeType": "YulFunctionCall",
																"src": "8010:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8000:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8000:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8132:22:6",
																"nodeType": "YulBlock",
																"src": "8132:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8134:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8134:16:6"
																			},
																			"nativeSrc": "8134:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8134:18:6"
																		},
																		"nativeSrc": "8134:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8134:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8104:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8104:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8112:18:6",
																		"nodeType": "YulLiteral",
																		"src": "8112:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8101:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8101:2:6"
																},
																"nativeSrc": "8101:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8101:30:6"
															},
															"nativeSrc": "8098:56:6",
															"nodeType": "YulIf",
															"src": "8098:56:6"
														},
														{
															"nativeSrc": "8164:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8164:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8210:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8210:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8204:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8204:5:6"
																		},
																		"nativeSrc": "8204:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8204:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8178:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "8178:25:6"
																},
																"nativeSrc": "8178:38:6",
																"nodeType": "YulFunctionCall",
																"src": "8178:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8168:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8168:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8309:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8309:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8315:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8315:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8323:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8323:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8263:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "8263:45:6"
																},
																"nativeSrc": "8263:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8263:67:6"
															},
															"nativeSrc": "8263:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "8263:67:6"
														},
														{
															"nativeSrc": "8340:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8340:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8357:1:6",
																"nodeType": "YulLiteral",
																"src": "8357:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8344:9:6",
																	"nodeType": "YulTypedName",
																	"src": "8344:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8368:17:6",
															"nodeType": "YulAssignment",
															"src": "8368:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8381:4:6",
																"nodeType": "YulLiteral",
																"src": "8381:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8368:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "8368:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8432:611:6",
																		"nodeType": "YulBlock",
																		"src": "8432:611:6",
																		"statements": [
																			{
																				"nativeSrc": "8446:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8446:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8465:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8465:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8477:4:6",
																									"nodeType": "YulLiteral",
																									"src": "8477:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8473:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "8473:3:6"
																							},
																							"nativeSrc": "8473:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8473:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8461:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "8461:3:6"
																					},
																					"nativeSrc": "8461:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8461:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8450:7:6",
																						"nodeType": "YulTypedName",
																						"src": "8450:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8497:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8497:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8543:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8543:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8511:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "8511:31:6"
																					},
																					"nativeSrc": "8511:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8511:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8501:6:6",
																						"nodeType": "YulTypedName",
																						"src": "8501:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8561:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8561:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8570:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8570:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8565:1:6",
																						"nodeType": "YulTypedName",
																						"src": "8565:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8629:163:6",
																					"nodeType": "YulBlock",
																					"src": "8629:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8654:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8654:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8672:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "8672:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8677:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "8677:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8668:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8668:3:6"
																												},
																												"nativeSrc": "8668:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8668:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8662:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "8662:5:6"
																										},
																										"nativeSrc": "8662:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8662:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8647:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8647:6:6"
																								},
																								"nativeSrc": "8647:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8647:42:6"
																							},
																							"nativeSrc": "8647:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8647:42:6"
																						},
																						{
																							"nativeSrc": "8706:24:6",
																							"nodeType": "YulAssignment",
																							"src": "8706:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8720:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8720:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8728:1:6",
																										"nodeType": "YulLiteral",
																										"src": "8728:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8716:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8716:3:6"
																								},
																								"nativeSrc": "8716:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8716:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8706:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8706:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8747:31:6",
																							"nodeType": "YulAssignment",
																							"src": "8747:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8764:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "8764:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8775:2:6",
																										"nodeType": "YulLiteral",
																										"src": "8775:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8760:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8760:3:6"
																								},
																								"nativeSrc": "8760:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8760:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8747:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "8747:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8595:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "8595:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8598:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "8598:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8592:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "8592:2:6"
																					},
																					"nativeSrc": "8592:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8592:14:6"
																				},
																				"nativeSrc": "8584:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8607:21:6",
																					"nodeType": "YulBlock",
																					"src": "8607:21:6",
																					"statements": [
																						{
																							"nativeSrc": "8609:17:6",
																							"nodeType": "YulAssignment",
																							"src": "8609:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8618:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "8618:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8621:4:6",
																										"nodeType": "YulLiteral",
																										"src": "8621:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8614:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8614:3:6"
																								},
																								"nativeSrc": "8614:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8614:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8609:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "8609:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8588:3:6",
																					"nodeType": "YulBlock",
																					"src": "8588:3:6",
																					"statements": []
																				},
																				"src": "8584:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "8828:156:6",
																					"nodeType": "YulBlock",
																					"src": "8828:156:6",
																					"statements": [
																						{
																							"nativeSrc": "8846:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8846:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8873:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "8873:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8878:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8878:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8869:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "8869:3:6"
																										},
																										"nativeSrc": "8869:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8869:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8863:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8863:5:6"
																								},
																								"nativeSrc": "8863:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8863:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8850:9:6",
																									"nodeType": "YulTypedName",
																									"src": "8850:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8913:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8913:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8940:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8940:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8955:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "8955:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8963:4:6",
																														"nodeType": "YulLiteral",
																														"src": "8963:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8951:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8951:3:6"
																												},
																												"nativeSrc": "8951:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8951:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8921:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "8921:18:6"
																										},
																										"nativeSrc": "8921:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8921:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8906:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8906:6:6"
																								},
																								"nativeSrc": "8906:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8906:64:6"
																							},
																							"nativeSrc": "8906:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8906:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8811:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "8811:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8820:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8820:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8808:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:2:6"
																					},
																					"nativeSrc": "8808:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:19:6"
																				},
																				"nativeSrc": "8805:179:6",
																				"nodeType": "YulIf",
																				"src": "8805:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9004:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9004:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9018:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "9018:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9026:1:6",
																											"nodeType": "YulLiteral",
																											"src": "9026:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9014:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "9014:3:6"
																									},
																									"nativeSrc": "9014:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "9014:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9030:1:6",
																									"nodeType": "YulLiteral",
																									"src": "9030:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9010:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "9010:3:6"
																							},
																							"nativeSrc": "9010:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9010:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8997:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8997:6:6"
																					},
																					"nativeSrc": "8997:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8997:36:6"
																				},
																				"nativeSrc": "8997:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "8997:36:6"
																			}
																		]
																	},
																	"nativeSrc": "8425:618:6",
																	"nodeType": "YulCase",
																	"src": "8425:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8430:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8430:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9060:222:6",
																		"nodeType": "YulBlock",
																		"src": "9060:222:6",
																		"statements": [
																			{
																				"nativeSrc": "9074:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9074:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9087:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9087:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9078:5:6",
																						"nodeType": "YulTypedName",
																						"src": "9078:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9111:67:6",
																					"nodeType": "YulBlock",
																					"src": "9111:67:6",
																					"statements": [
																						{
																							"nativeSrc": "9129:35:6",
																							"nodeType": "YulAssignment",
																							"src": "9129:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9148:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "9148:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9153:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9153:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9144:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "9144:3:6"
																										},
																										"nativeSrc": "9144:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9144:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9138:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9138:5:6"
																								},
																								"nativeSrc": "9138:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9138:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9129:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9129:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9104:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9104:6:6"
																				},
																				"nativeSrc": "9101:77:6",
																				"nodeType": "YulIf",
																				"src": "9101:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9198:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9198:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9257:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9257:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9264:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9264:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9204:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "9204:52:6"
																							},
																							"nativeSrc": "9204:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9204:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9191:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9191:6:6"
																					},
																					"nativeSrc": "9191:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9191:81:6"
																				},
																				"nativeSrc": "9191:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "9191:81:6"
																			}
																		]
																	},
																	"nativeSrc": "9052:230:6",
																	"nodeType": "YulCase",
																	"src": "9052:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8405:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8405:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8413:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8413:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8402:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8402:2:6"
																},
																"nativeSrc": "8402:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8402:14:6"
															},
															"nativeSrc": "8395:887:6",
															"nodeType": "YulSwitch",
															"src": "8395:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7893:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7974:4:6",
														"nodeType": "YulTypedName",
														"src": "7974:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7980:3:6",
														"nodeType": "YulTypedName",
														"src": "7980:3:6",
														"type": ""
													}
												],
												"src": "7893:1395:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612a76380380612a76833981810160405281019061003191906102c5565b81818160039081610042919061056e565b508060049081610052919061056e565b5050508360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505061063d565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101588261012f565b9050919050565b6101688161014e565b8114610172575f80fd5b50565b5f815190506101838161015f565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6101d782610191565b810181811067ffffffffffffffff821117156101f6576101f56101a1565b5b80604052505050565b5f61020861011e565b905061021482826101ce565b919050565b5f67ffffffffffffffff821115610233576102326101a1565b5b61023c82610191565b9050602081019050919050565b8281835e5f83830152505050565b5f61026961026484610219565b6101ff565b9050828152602081018484840111156102855761028461018d565b5b610290848285610249565b509392505050565b5f82601f8301126102ac576102ab610189565b5b81516102bc848260208601610257565b91505092915050565b5f805f80608085870312156102dd576102dc610127565b5b5f6102ea87828801610175565b94505060206102fb87828801610175565b935050604085015167ffffffffffffffff81111561031c5761031b61012b565b5b61032887828801610298565b925050606085015167ffffffffffffffff8111156103495761034861012b565b5b61035587828801610298565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806103af57607f821691505b6020821081036103c2576103c161036b565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104247fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103e9565b61042e86836103e9565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61047261046d61046884610446565b61044f565b610446565b9050919050565b5f819050919050565b61048b83610458565b61049f61049782610479565b8484546103f5565b825550505050565b5f90565b6104b36104a7565b6104be818484610482565b505050565b5b818110156104e1576104d65f826104ab565b6001810190506104c4565b5050565b601f821115610526576104f7816103c8565b610500846103da565b8101602085101561050f578190505b61052361051b856103da565b8301826104c3565b50505b505050565b5f82821c905092915050565b5f6105465f198460080261052b565b1980831691505092915050565b5f61055e8383610537565b9150826002028217905092915050565b61057782610361565b67ffffffffffffffff8111156105905761058f6101a1565b5b61059a8254610398565b6105a58282856104e5565b5f60209050601f8311600181146105d6575f84156105c4578287015190505b6105ce8582610553565b865550610635565b601f1984166105e4866103c8565b5f5b8281101561060b578489015182556001820191506020850194506020810190506105e6565b868310156106285784890151610624601f891682610537565b8355505b6001600288020188555050505b505050505050565b61242c8061064a5f395ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c80635f64b55b116100ab5780639cd441da1161006f5780639cd441da1461030f578063a9059cbb1461032b578063c915cc241461035b578063dc5fa6c514610377578063dd62ed3e146103955761011f565b80635f64b55b1461025457806370a08231146102725780638da5cb5b146102a257806395d89b41146102c05780639c8f9f23146102de5761011f565b8063140e6247116100f2578063140e6247146101ae57806318160ddd146101ca57806319e36f3b146101e857806323b872dd14610206578063313ce567146102365761011f565b806306fdde03146101235780630902f1ac14610141578063095ea7b3146101605780630fc63d1014610190575b5f80fd5b61012b6103c5565b6040516101389190611a41565b60405180910390f35b610149610455565b604051610157929190611a79565b60405180910390f35b61017a60048036038101906101759190611b28565b610465565b6040516101879190611b80565b60405180910390f35b610198610487565b6040516101a59190611bf4565b60405180910390f35b6101c860048036038101906101c39190611c0d565b6104ac565b005b6101d26107d1565b6040516101df9190611c4b565b60405180910390f35b6101f06107da565b6040516101fd9190611c4b565b60405180910390f35b610220600480360381019061021b9190611c64565b6107e0565b60405161022d9190611b80565b60405180910390f35b61023e61080e565b60405161024b9190611ccf565b60405180910390f35b61025c610816565b6040516102699190611bf4565b60405180910390f35b61028c60048036038101906102879190611ce8565b61083b565b6040516102999190611c4b565b60405180910390f35b6102aa610880565b6040516102b79190611d22565b60405180910390f35b6102c86108a5565b6040516102d59190611a41565b60405180910390f35b6102f860048036038101906102f39190611d3b565b610935565b604051610306929190611a79565b60405180910390f35b61032960048036038101906103249190611c0d565b610c60565b005b61034560048036038101906103409190611b28565b610ef1565b6040516103529190611b80565b60405180910390f35b61037560048036038101906103709190611c0d565b610f13565b005b61037f611238565b60405161038c9190611c4b565b60405180910390f35b6103af60048036038101906103aa9190611d66565b61123e565b6040516103bc9190611c4b565b60405180910390f35b6060600380546103d490611dd1565b80601f016020809104026020016040519081016040528092919081815260200182805461040090611dd1565b801561044b5780601f106104225761010080835404028352916020019161044b565b820191905f5260205f20905b81548152906001019060200180831161042e57829003601f168201915b5050505050905090565b5f80600754600854915091509091565b5f8061046f6112c0565b905061047c8185856112c7565b600191505092915050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f82116104ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e590611e4b565b60405180910390fd5b5f60075411801561050057505f600854115b61053f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053690611eb3565b60405180910390fd5b5f6103e86103e5846105519190611efe565b61055b9190611f6c565b90505f8160075461056c9190611f9c565b8260085461057a9190611efe565b6105849190611f6c565b9050828110156105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c090612019565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161062793929190612037565b6020604051808303815f875af1158015610643573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106679190612096565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106c49291906120c1565b6020604051808303815f875af11580156106e0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107049190612096565b508160075f8282546107169190611f9c565b925050819055508060085f82825461072e91906120e8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f631fb37dba9bbcb8b2f3be2d669e365ae9f1bd850cc57dfe8b7ccd7d979a2bba60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040516107c3949392919061211b565b60405180910390a250505050565b5f600254905090565b60085481565b5f806107ea6112c0565b90506107f78582856112d9565b61080285858561136c565b60019150509392505050565b5f6012905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600480546108b490611dd1565b80601f01602080910402602001604051908101604052809291908181526020018280546108e090611dd1565b801561092b5780601f106109025761010080835404028352916020019161092b565b820191905f5260205f20905b81548152906001019060200180831161090e57829003601f168201915b5050505050905090565b5f805f8311610979576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610970906121a8565b60405180910390fd5b826109833361083b565b10156109c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bb90612210565b60405180910390fd5b5f6109cd6107d1565b90505f8111610a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0890612278565b60405180910390fd5b8060075485610a209190611efe565b610a2a9190611f6c565b92508060085485610a3b9190611efe565b610a459190611f6c565b91505f83118015610a5557505f82115b610a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8b90612306565b60405180910390fd5b8260075f828254610aa591906120e8565b925050819055508160085f828254610abd91906120e8565b92505081905550610ace338561145c565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610b2a9291906120c1565b6020604051808303815f875af1158015610b46573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b6a9190612096565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610bc79291906120c1565b6020604051808303815f875af1158015610be3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c079190612096565b503373ffffffffffffffffffffffffffffffffffffffff167f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d848487604051610c5293929190612324565b60405180910390a250915091565b5f82118015610c6e57505f81115b610cad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca4906123a3565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610d0b93929190612037565b6020604051808303815f875af1158015610d27573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d4b9190612096565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610daa93929190612037565b6020604051808303815f875af1158015610dc6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dea9190612096565b505f80610df56107d1565b03610e1557610e0e8284610e099190611efe565b6114db565b9050610e60565b610e5d600754610e236107d1565b85610e2e9190611efe565b610e389190611f6c565b600854610e436107d1565b85610e4e9190611efe565b610e589190611f6c565b611552565b90505b610e6a338261156a565b8260075f828254610e7b9190611f9c565b925050819055508160085f828254610e939190611f9c565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e848484604051610ee493929190612324565b60405180910390a2505050565b5f80610efb6112c0565b9050610f0881858561136c565b600191505092915050565b5f8211610f55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4c90611e4b565b60405180910390fd5b5f600754118015610f6757505f600854115b610fa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9d90611eb3565b60405180910390fd5b5f6103e86103e584610fb89190611efe565b610fc29190611f6c565b90505f81600854610fd39190611f9c565b82600754610fe19190611efe565b610feb9190611f6c565b905082811015611030576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102790612019565b60405180910390fd5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161108e93929190612037565b6020604051808303815f875af11580156110aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110ce9190612096565b5060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161112b9291906120c1565b6020604051808303815f875af1158015611147573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061116b9190612096565b508160085f82825461117d9190611f9c565b925050819055508060075f82825461119591906120e8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f631fb37dba9bbcb8b2f3be2d669e365ae9f1bd850cc57dfe8b7ccd7d979a2bba60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560405161122a949392919061211b565b60405180910390a250505050565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6112d483838360016115e9565b505050565b5f6112e4848461123e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156113665781811015611357578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161134e939291906123c1565b60405180910390fd5b61136584848484035f6115e9565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113dc575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113d39190611d22565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361144c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114439190611d22565b60405180910390fd5b6114578383836117b8565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114cc575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114c39190611d22565b60405180910390fd5b6114d7825f836117b8565b5050565b5f6003821115611540578190505f60016002846114f89190611f6c565b6115029190611f9c565b90505b8181101561153a57809150600281828561151f9190611f6c565b6115299190611f9c565b6115339190611f6c565b9050611505565b5061154d565b5f821461154c57600190505b5b919050565b5f8183106115605781611562565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115da575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115d19190611d22565b60405180910390fd5b6115e55f83836117b8565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611659575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016116509190611d22565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116c9575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016116c09190611d22565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156117b2578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117a99190611c4b565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611808578060025f8282546117fc9190611f9c565b925050819055506118d6565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611891578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611888939291906123c1565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361191d578060025f8282540392505081905550611967565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119c49190611c4b565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611a13826119d1565b611a1d81856119db565b9350611a2d8185602086016119eb565b611a36816119f9565b840191505092915050565b5f6020820190508181035f830152611a598184611a09565b905092915050565b5f819050919050565b611a7381611a61565b82525050565b5f604082019050611a8c5f830185611a6a565b611a996020830184611a6a565b9392505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611acd82611aa4565b9050919050565b611add81611ac3565b8114611ae7575f80fd5b50565b5f81359050611af881611ad4565b92915050565b611b0781611a61565b8114611b11575f80fd5b50565b5f81359050611b2281611afe565b92915050565b5f8060408385031215611b3e57611b3d611aa0565b5b5f611b4b85828601611aea565b9250506020611b5c85828601611b14565b9150509250929050565b5f8115159050919050565b611b7a81611b66565b82525050565b5f602082019050611b935f830184611b71565b92915050565b5f819050919050565b5f611bbc611bb7611bb284611aa4565b611b99565b611aa4565b9050919050565b5f611bcd82611ba2565b9050919050565b5f611bde82611bc3565b9050919050565b611bee81611bd4565b82525050565b5f602082019050611c075f830184611be5565b92915050565b5f8060408385031215611c2357611c22611aa0565b5b5f611c3085828601611b14565b9250506020611c4185828601611b14565b9150509250929050565b5f602082019050611c5e5f830184611a6a565b92915050565b5f805f60608486031215611c7b57611c7a611aa0565b5b5f611c8886828701611aea565b9350506020611c9986828701611aea565b9250506040611caa86828701611b14565b9150509250925092565b5f60ff82169050919050565b611cc981611cb4565b82525050565b5f602082019050611ce25f830184611cc0565b92915050565b5f60208284031215611cfd57611cfc611aa0565b5b5f611d0a84828501611aea565b91505092915050565b611d1c81611ac3565b82525050565b5f602082019050611d355f830184611d13565b92915050565b5f60208284031215611d5057611d4f611aa0565b5b5f611d5d84828501611b14565b91505092915050565b5f8060408385031215611d7c57611d7b611aa0565b5b5f611d8985828601611aea565b9250506020611d9a85828601611aea565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611de857607f821691505b602082108103611dfb57611dfa611da4565b5b50919050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f611e356012836119db565b9150611e4082611e01565b602082019050919050565b5f6020820190508181035f830152611e6281611e29565b9050919050565b7f496e73756666696369656e7420726573657276657300000000000000000000005f82015250565b5f611e9d6015836119db565b9150611ea882611e69565b602082019050919050565b5f6020820190508181035f830152611eca81611e91565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f0882611a61565b9150611f1383611a61565b9250828202611f2181611a61565b91508282048414831517611f3857611f37611ed1565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f7682611a61565b9150611f8183611a61565b925082611f9157611f90611f3f565b5b828204905092915050565b5f611fa682611a61565b9150611fb183611a61565b9250828201905080821115611fc957611fc8611ed1565b5b92915050565b7f536c69707061676520746f6f20686967680000000000000000000000000000005f82015250565b5f6120036011836119db565b915061200e82611fcf565b602082019050919050565b5f6020820190508181035f83015261203081611ff7565b9050919050565b5f60608201905061204a5f830186611d13565b6120576020830185611d13565b6120646040830184611a6a565b949350505050565b61207581611b66565b811461207f575f80fd5b50565b5f815190506120908161206c565b92915050565b5f602082840312156120ab576120aa611aa0565b5b5f6120b884828501612082565b91505092915050565b5f6040820190506120d45f830185611d13565b6120e16020830184611a6a565b9392505050565b5f6120f282611a61565b91506120fd83611a61565b925082820390508181111561211557612114611ed1565b5b92915050565b5f60808201905061212e5f830187611d13565b61213b6020830186611a6a565b6121486040830185611d13565b6121556060830184611a6a565b95945050505050565b7f4c697175696469747920746f2072656d6f7665206d757374206265203e2030005f82015250565b5f612192601f836119db565b915061219d8261215e565b602082019050919050565b5f6020820190508181035f8301526121bf81612186565b9050919050565b7f496e73756666696369656e74206c697175696469747920746f6b656e730000005f82015250565b5f6121fa601d836119db565b9150612205826121c6565b602082019050919050565b5f6020820190508181035f830152612227816121ee565b9050919050565b7f4e6f206c697175696469747920696e2074686520706f6f6c00000000000000005f82015250565b5f6122626018836119db565b915061226d8261222e565b602082019050919050565b5f6020820190508181035f83015261228f81612256565b9050919050565b7f496e73756666696369656e7420726573657276657320666f72207265717565735f8201527f746564206c697175696469747900000000000000000000000000000000000000602082015250565b5f6122f0602d836119db565b91506122fb82612296565b604082019050919050565b5f6020820190508181035f83015261231d816122e4565b9050919050565b5f6060820190506123375f830186611a6a565b6123446020830185611a6a565b6123516040830184611a6a565b949350505050565b7f416d6f756e7473206d757374206265203e2030000000000000000000000000005f82015250565b5f61238d6013836119db565b915061239882612359565b602082019050919050565b5f6020820190508181035f8301526123ba81612381565b9050919050565b5f6060820190506123d45f830186611d13565b6123e16020830185611a6a565b6123ee6040830184611a6a565b94935050505056fea2646970667358221220346cedd78c8de6014a09f251cc8f0f95cd4d2bbc32d49f5c984ac0aad817508a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2A76 CODESIZE SUB DUP1 PUSH2 0x2A76 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2C5 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x56E JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0x56E JUMP JUMPDEST POP POP POP DUP4 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH2 0x63D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x158 DUP3 PUSH2 0x12F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168 DUP2 PUSH2 0x14E JUMP JUMPDEST DUP2 EQ PUSH2 0x172 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x183 DUP2 PUSH2 0x15F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D7 DUP3 PUSH2 0x191 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F6 JUMPI PUSH2 0x1F5 PUSH2 0x1A1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x208 PUSH2 0x11E JUMP JUMPDEST SWAP1 POP PUSH2 0x214 DUP3 DUP3 PUSH2 0x1CE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x233 JUMPI PUSH2 0x232 PUSH2 0x1A1 JUMP JUMPDEST JUMPDEST PUSH2 0x23C DUP3 PUSH2 0x191 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x269 PUSH2 0x264 DUP5 PUSH2 0x219 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x285 JUMPI PUSH2 0x284 PUSH2 0x18D JUMP JUMPDEST JUMPDEST PUSH2 0x290 DUP5 DUP3 DUP6 PUSH2 0x249 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2AC JUMPI PUSH2 0x2AB PUSH2 0x189 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x2BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x257 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2DD JUMPI PUSH2 0x2DC PUSH2 0x127 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2EA DUP8 DUP3 DUP9 ADD PUSH2 0x175 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2FB DUP8 DUP3 DUP9 ADD PUSH2 0x175 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31C JUMPI PUSH2 0x31B PUSH2 0x12B JUMP JUMPDEST JUMPDEST PUSH2 0x328 DUP8 DUP3 DUP9 ADD PUSH2 0x298 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x349 JUMPI PUSH2 0x348 PUSH2 0x12B JUMP JUMPDEST JUMPDEST PUSH2 0x355 DUP8 DUP3 DUP9 ADD PUSH2 0x298 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3AF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3C2 JUMPI PUSH2 0x3C1 PUSH2 0x36B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x424 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x42E DUP7 DUP4 PUSH2 0x3E9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x472 PUSH2 0x46D PUSH2 0x468 DUP5 PUSH2 0x446 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48B DUP4 PUSH2 0x458 JUMP JUMPDEST PUSH2 0x49F PUSH2 0x497 DUP3 PUSH2 0x479 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3F5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x4B3 PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x4BE DUP2 DUP5 DUP5 PUSH2 0x482 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4E1 JUMPI PUSH2 0x4D6 PUSH0 DUP3 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4C4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x526 JUMPI PUSH2 0x4F7 DUP2 PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0x500 DUP5 PUSH2 0x3DA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x50F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x523 PUSH2 0x51B DUP6 PUSH2 0x3DA JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4C3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x546 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x52B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x55E DUP4 DUP4 PUSH2 0x537 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x577 DUP3 PUSH2 0x361 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x590 JUMPI PUSH2 0x58F PUSH2 0x1A1 JUMP JUMPDEST JUMPDEST PUSH2 0x59A DUP3 SLOAD PUSH2 0x398 JUMP JUMPDEST PUSH2 0x5A5 DUP3 DUP3 DUP6 PUSH2 0x4E5 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5D6 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x5C4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x5CE DUP6 DUP3 PUSH2 0x553 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x635 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5E4 DUP7 PUSH2 0x3C8 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x60B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5E6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x628 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x624 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x537 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x242C DUP1 PUSH2 0x64A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F64B55B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x9CD441DA GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xC915CC24 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x395 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x2DE JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x140E6247 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x140E6247 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x236 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x190 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP3 SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D2 PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x80E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1CE8 JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH2 0x880 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP3 SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0xF13 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37F PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1D66 JUMP JUMPDEST PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x400 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x44B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x422 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x44B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x46F PUSH2 0x12C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x47C DUP2 DUP6 DUP6 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E5 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 SLOAD GT DUP1 ISZERO PUSH2 0x500 JUMPI POP PUSH0 PUSH1 0x8 SLOAD GT JUMPDEST PUSH2 0x53F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x7 SLOAD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST DUP3 PUSH1 0x8 SLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C0 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x627 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x643 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C4 SWAP3 SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x704 SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x72E SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x631FB37DBA9BBCB8B2F3BE2D669E365AE9F1BD850CC57DFE8B7CCD7D979A2BBA PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x7C3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7EA PUSH2 0x12C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x7F7 DUP6 DUP3 DUP6 PUSH2 0x12D9 JUMP JUMPDEST PUSH2 0x802 DUP6 DUP6 DUP6 PUSH2 0x136C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8B4 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E0 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x92B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x902 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 GT PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x970 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x983 CALLER PUSH2 0x83B JUMP JUMPDEST LT ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BB SWAP1 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x9CD PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA08 SWAP1 PUSH2 0x2278 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 SLOAD DUP6 PUSH2 0xA20 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0xA2A SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x8 SLOAD DUP6 PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST SWAP2 POP PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0xA55 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8B SWAP1 PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xABD SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xACE CALLER DUP6 PUSH2 0x145C JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2A SWAP3 SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB46 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB6A SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC7 SWAP3 SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBE3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC07 SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1DC8BB69DF2B8E91FBDCBFCF93D951B3F0000F085A95FE3F7946D6161439245D DUP5 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0xC52 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0xC6E JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA4 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD27 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD4B SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDEA SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0xDF5 PUSH2 0x7D1 JUMP JUMPDEST SUB PUSH2 0xE15 JUMPI PUSH2 0xE0E DUP3 DUP5 PUSH2 0xE09 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP PUSH2 0xE60 JUMP JUMPDEST PUSH2 0xE5D PUSH1 0x7 SLOAD PUSH2 0xE23 PUSH2 0x7D1 JUMP JUMPDEST DUP6 PUSH2 0xE2E SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0xE38 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xE43 PUSH2 0x7D1 JUMP JUMPDEST DUP6 PUSH2 0xE4E SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0xE58 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST PUSH2 0x1552 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xE6A CALLER DUP3 PUSH2 0x156A JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE7B SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE93 SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEFB PUSH2 0x12C0 JUMP JUMPDEST SWAP1 POP PUSH2 0xF08 DUP2 DUP6 DUP6 PUSH2 0x136C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4C SWAP1 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 SLOAD GT DUP1 ISZERO PUSH2 0xF67 JUMPI POP PUSH0 PUSH1 0x8 SLOAD GT JUMPDEST PUSH2 0xFA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9D SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0xFB8 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0xFC2 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x8 SLOAD PUSH2 0xFD3 SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST DUP3 PUSH1 0x7 SLOAD PUSH2 0xFE1 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0xFEB SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1030 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1027 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10AA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10CE SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112B SWAP3 SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1147 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x116B SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x117D SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x631FB37DBA9BBCB8B2F3BE2D669E365AE9F1BD850CC57DFE8B7CCD7D979A2BBA PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x122A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12D4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x15E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12E4 DUP5 DUP5 PUSH2 0x123E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1366 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1357 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1365 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x15E9 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13DC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D3 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x144C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1443 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1457 DUP4 DUP4 DUP4 PUSH2 0x17B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C3 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14D7 DUP3 PUSH0 DUP4 PUSH2 0x17B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1540 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x14F8 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST PUSH2 0x1502 SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x153A JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x151F SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST PUSH2 0x1529 SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0x1533 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST SWAP1 POP PUSH2 0x1505 JUMP JUMPDEST POP PUSH2 0x154D JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x154C JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x1560 JUMPI DUP2 PUSH2 0x1562 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15DA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D1 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15E5 PUSH0 DUP4 DUP4 PUSH2 0x17B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1659 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1650 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16C9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C0 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x17B2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x17A9 SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1808 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17FC SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18D6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1891 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1888 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x191D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1967 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x19C4 SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A13 DUP3 PUSH2 0x19D1 JUMP JUMPDEST PUSH2 0x1A1D DUP2 DUP6 PUSH2 0x19DB JUMP JUMPDEST SWAP4 POP PUSH2 0x1A2D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x1A36 DUP2 PUSH2 0x19F9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A59 DUP2 DUP5 PUSH2 0x1A09 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A73 DUP2 PUSH2 0x1A61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A8C PUSH0 DUP4 ADD DUP6 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x1A99 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACD DUP3 PUSH2 0x1AA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADD DUP2 PUSH2 0x1AC3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AF8 DUP2 PUSH2 0x1AD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B07 DUP2 PUSH2 0x1A61 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B22 DUP2 PUSH2 0x1AFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B3E JUMPI PUSH2 0x1B3D PUSH2 0x1AA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B4B DUP6 DUP3 DUP7 ADD PUSH2 0x1AEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B5C DUP6 DUP3 DUP7 ADD PUSH2 0x1B14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B7A DUP2 PUSH2 0x1B66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B93 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BBC PUSH2 0x1BB7 PUSH2 0x1BB2 DUP5 PUSH2 0x1AA4 JUMP JUMPDEST PUSH2 0x1B99 JUMP JUMPDEST PUSH2 0x1AA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCD DUP3 PUSH2 0x1BA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDE DUP3 PUSH2 0x1BC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BEE DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C07 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C23 JUMPI PUSH2 0x1C22 PUSH2 0x1AA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C30 DUP6 DUP3 DUP7 ADD PUSH2 0x1B14 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C41 DUP6 DUP3 DUP7 ADD PUSH2 0x1B14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C5E PUSH0 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C7B JUMPI PUSH2 0x1C7A PUSH2 0x1AA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C88 DUP7 DUP3 DUP8 ADD PUSH2 0x1AEA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C99 DUP7 DUP3 DUP8 ADD PUSH2 0x1AEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CAA DUP7 DUP3 DUP8 ADD PUSH2 0x1B14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CC9 DUP2 PUSH2 0x1CB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFD JUMPI PUSH2 0x1CFC PUSH2 0x1AA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D0A DUP5 DUP3 DUP6 ADD PUSH2 0x1AEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D1C DUP2 PUSH2 0x1AC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D35 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D50 JUMPI PUSH2 0x1D4F PUSH2 0x1AA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D5D DUP5 DUP3 DUP6 ADD PUSH2 0x1B14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D7C JUMPI PUSH2 0x1D7B PUSH2 0x1AA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D89 DUP6 DUP3 DUP7 ADD PUSH2 0x1AEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D9A DUP6 DUP3 DUP7 ADD PUSH2 0x1AEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DE8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DFB JUMPI PUSH2 0x1DFA PUSH2 0x1DA4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E35 PUSH1 0x12 DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1E40 DUP3 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E62 DUP2 PUSH2 0x1E29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657365727665730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E9D PUSH1 0x15 DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA8 DUP3 PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ECA DUP2 PUSH2 0x1E91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F08 DUP3 PUSH2 0x1A61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F13 DUP4 PUSH2 0x1A61 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1F21 DUP2 PUSH2 0x1A61 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1F38 JUMPI PUSH2 0x1F37 PUSH2 0x1ED1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F76 DUP3 PUSH2 0x1A61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F81 DUP4 PUSH2 0x1A61 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F91 JUMPI PUSH2 0x1F90 PUSH2 0x1F3F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA6 DUP3 PUSH2 0x1A61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB1 DUP4 PUSH2 0x1A61 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FC9 JUMPI PUSH2 0x1FC8 PUSH2 0x1ED1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536C69707061676520746F6F2068696768000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2003 PUSH1 0x11 DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x200E DUP3 PUSH2 0x1FCF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2030 DUP2 PUSH2 0x1FF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x204A PUSH0 DUP4 ADD DUP7 PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x2057 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x2064 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2075 DUP2 PUSH2 0x1B66 JUMP JUMPDEST DUP2 EQ PUSH2 0x207F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2090 DUP2 PUSH2 0x206C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AB JUMPI PUSH2 0x20AA PUSH2 0x1AA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20B8 DUP5 DUP3 DUP6 ADD PUSH2 0x2082 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20D4 PUSH0 DUP4 ADD DUP6 PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x20E1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20F2 DUP3 PUSH2 0x1A61 JUMP JUMPDEST SWAP2 POP PUSH2 0x20FD DUP4 PUSH2 0x1A61 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2115 JUMPI PUSH2 0x2114 PUSH2 0x1ED1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x212E PUSH0 DUP4 ADD DUP8 PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x213B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x2148 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x2155 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4C697175696469747920746F2072656D6F7665206D757374206265203E203000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2192 PUSH1 0x1F DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x219D DUP3 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21BF DUP2 PUSH2 0x2186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C697175696469747920746F6B656E73000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21FA PUSH1 0x1D DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2205 DUP3 PUSH2 0x21C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2227 DUP2 PUSH2 0x21EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206C697175696469747920696E2074686520706F6F6C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2262 PUSH1 0x18 DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x226D DUP3 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x228F DUP2 PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420726573657276657320666F7220726571756573 PUSH0 DUP3 ADD MSTORE PUSH32 0x746564206C697175696469747900000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22F0 PUSH1 0x2D DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x22FB DUP3 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x231D DUP2 PUSH2 0x22E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2337 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x2344 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x2351 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E7473206D757374206265203E203000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x238D PUSH1 0x13 DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2398 DUP3 PUSH2 0x2359 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23BA DUP2 PUSH2 0x2381 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23D4 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x23E1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x23EE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH13 0xEDD78C8DE6014A09F251CC8F0F SWAP6 0xCD 0x4D 0x2B 0xBC ORIGIN 0xD4 SWAP16 TLOAD SWAP9 BLOBBASEFEE 0xC0 0xAA 0xD8 OR POP DUP11 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "180:7700:5:-:0;;;1176:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1272:5;1279:7;1656:5:1;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1309:7:5::1;1293:6;;:24;;;;;;;;;;;;;;;;;;1338:7;1322:6;;:24;;;;;;;;;;;;;;;;;;1359:10;1351:5;;:18;;;;;;;;;;;;;;;;;;1176:197:::0;;;;180:7700;;7:75:6;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:139::-;2210:6;2205:3;2200;2194:23;2251:1;2242:6;2237:3;2233:16;2226:27;2121:139;;;:::o;2266:434::-;2355:5;2380:66;2396:49;2438:6;2396:49;:::i;:::-;2380:66;:::i;:::-;2371:75;;2469:6;2462:5;2455:21;2507:4;2500:5;2496:16;2545:3;2536:6;2531:3;2527:16;2524:25;2521:112;;;2552:79;;:::i;:::-;2521:112;2642:52;2687:6;2682:3;2677;2642:52;:::i;:::-;2361:339;2266:434;;;;;:::o;2720:355::-;2787:5;2836:3;2829:4;2821:6;2817:17;2813:27;2803:122;;2844:79;;:::i;:::-;2803:122;2954:6;2948:13;2979:90;3065:3;3057:6;3050:4;3042:6;3038:17;2979:90;:::i;:::-;2970:99;;2793:282;2720:355;;;;:::o;3081:1166::-;3198:6;3206;3214;3222;3271:3;3259:9;3250:7;3246:23;3242:33;3239:120;;;3278:79;;:::i;:::-;3239:120;3398:1;3423:64;3479:7;3470:6;3459:9;3455:22;3423:64;:::i;:::-;3413:74;;3369:128;3536:2;3562:64;3618:7;3609:6;3598:9;3594:22;3562:64;:::i;:::-;3552:74;;3507:129;3696:2;3685:9;3681:18;3675:25;3727:18;3719:6;3716:30;3713:117;;;3749:79;;:::i;:::-;3713:117;3854:74;3920:7;3911:6;3900:9;3896:22;3854:74;:::i;:::-;3844:84;;3646:292;3998:2;3987:9;3983:18;3977:25;4029:18;4021:6;4018:30;4015:117;;;4051:79;;:::i;:::-;4015:117;4156:74;4222:7;4213:6;4202:9;4198:22;4156:74;:::i;:::-;4146:84;;3948:292;3081:1166;;;;;;;:::o;4253:99::-;4305:6;4339:5;4333:12;4323:22;;4253:99;;;:::o;4358:180::-;4406:77;4403:1;4396:88;4503:4;4500:1;4493:15;4527:4;4524:1;4517:15;4544:320;4588:6;4625:1;4619:4;4615:12;4605:22;;4672:1;4666:4;4662:12;4693:18;4683:81;;4749:4;4741:6;4737:17;4727:27;;4683:81;4811:2;4803:6;4800:14;4780:18;4777:38;4774:84;;4830:18;;:::i;:::-;4774:84;4595:269;4544:320;;;:::o;4870:141::-;4919:4;4942:3;4934:11;;4965:3;4962:1;4955:14;4999:4;4996:1;4986:18;4978:26;;4870:141;;;:::o;5017:93::-;5054:6;5101:2;5096;5089:5;5085:14;5081:23;5071:33;;5017:93;;;:::o;5116:107::-;5160:8;5210:5;5204:4;5200:16;5179:37;;5116:107;;;;:::o;5229:393::-;5298:6;5348:1;5336:10;5332:18;5371:97;5401:66;5390:9;5371:97;:::i;:::-;5489:39;5519:8;5508:9;5489:39;:::i;:::-;5477:51;;5561:4;5557:9;5550:5;5546:21;5537:30;;5610:4;5600:8;5596:19;5589:5;5586:30;5576:40;;5305:317;;5229:393;;;;;:::o;5628:77::-;5665:7;5694:5;5683:16;;5628:77;;;:::o;5711:60::-;5739:3;5760:5;5753:12;;5711:60;;;:::o;5777:142::-;5827:9;5860:53;5878:34;5887:24;5905:5;5887:24;:::i;:::-;5878:34;:::i;:::-;5860:53;:::i;:::-;5847:66;;5777:142;;;:::o;5925:75::-;5968:3;5989:5;5982:12;;5925:75;;;:::o;6006:269::-;6116:39;6147:7;6116:39;:::i;:::-;6177:91;6226:41;6250:16;6226:41;:::i;:::-;6218:6;6211:4;6205:11;6177:91;:::i;:::-;6171:4;6164:105;6082:193;6006:269;;;:::o;6281:73::-;6326:3;6281:73;:::o;6360:189::-;6437:32;;:::i;:::-;6478:65;6536:6;6528;6522:4;6478:65;:::i;:::-;6413:136;6360:189;;:::o;6555:186::-;6615:120;6632:3;6625:5;6622:14;6615:120;;;6686:39;6723:1;6716:5;6686:39;:::i;:::-;6659:1;6652:5;6648:13;6639:22;;6615:120;;;6555:186;;:::o;6747:543::-;6848:2;6843:3;6840:11;6837:446;;;6882:38;6914:5;6882:38;:::i;:::-;6966:29;6984:10;6966:29;:::i;:::-;6956:8;6952:44;7149:2;7137:10;7134:18;7131:49;;;7170:8;7155:23;;7131:49;7193:80;7249:22;7267:3;7249:22;:::i;:::-;7239:8;7235:37;7222:11;7193:80;:::i;:::-;6852:431;;6837:446;6747:543;;;:::o;7296:117::-;7350:8;7400:5;7394:4;7390:16;7369:37;;7296:117;;;;:::o;7419:169::-;7463:6;7496:51;7544:1;7540:6;7532:5;7529:1;7525:13;7496:51;:::i;:::-;7492:56;7577:4;7571;7567:15;7557:25;;7470:118;7419:169;;;;:::o;7593:295::-;7669:4;7815:29;7840:3;7834:4;7815:29;:::i;:::-;7807:37;;7877:3;7874:1;7870:11;7864:4;7861:21;7853:29;;7593:295;;;;:::o;7893:1395::-;8010:37;8043:3;8010:37;:::i;:::-;8112:18;8104:6;8101:30;8098:56;;;8134:18;;:::i;:::-;8098:56;8178:38;8210:4;8204:11;8178:38;:::i;:::-;8263:67;8323:6;8315;8309:4;8263:67;:::i;:::-;8357:1;8381:4;8368:17;;8413:2;8405:6;8402:14;8430:1;8425:618;;;;9087:1;9104:6;9101:77;;;9153:9;9148:3;9144:19;9138:26;9129:35;;9101:77;9204:67;9264:6;9257:5;9204:67;:::i;:::-;9198:4;9191:81;9060:222;8395:887;;8425:618;8477:4;8473:9;8465:6;8461:22;8511:37;8543:4;8511:37;:::i;:::-;8570:1;8584:208;8598:7;8595:1;8592:14;8584:208;;;8677:9;8672:3;8668:19;8662:26;8654:6;8647:42;8728:1;8720:6;8716:14;8706:24;;8775:2;8764:9;8760:18;8747:31;;8621:4;8618:1;8614:12;8609:17;;8584:208;;;8820:6;8811:7;8808:19;8805:179;;;8878:9;8873:3;8869:19;8863:26;8921:48;8963:4;8955:6;8951:17;8940:9;8921:48;:::i;:::-;8913:6;8906:64;8828:156;8805:179;9030:1;9026;9018:6;9014:14;9010:22;9004:4;8997:36;8432:611;;;8395:887;;7985:1303;;;7893:1395;;:::o;180:7700:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 4807,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 5609,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_524": {
									"entryPoint": 5212,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 5482,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 4800,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 4825,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 4972,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 6072,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_1039": {
									"entryPoint": 3168,
									"id": 1039,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 4670,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1125,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 2107,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 2062,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getReserves_1351": {
									"entryPoint": 1109,
									"id": 1351,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@min_885": {
									"entryPoint": 5458,
									"id": 885,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 965,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_803": {
									"entryPoint": 2176,
									"id": 803,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeLiquidity_1149": {
									"entryPoint": 2357,
									"id": 1149,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@reserveA_799": {
									"entryPoint": 4664,
									"id": 799,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveB_801": {
									"entryPoint": 2010,
									"id": 801,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_939": {
									"entryPoint": 5339,
									"id": 939,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapAforB_1244": {
									"entryPoint": 1196,
									"id": 1244,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@swapBforA_1339": {
									"entryPoint": 3859,
									"id": 1339,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 2213,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenA_794": {
									"entryPoint": 1159,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenB_797": {
									"entryPoint": 2070,
									"id": 797,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_224": {
									"entryPoint": 2001,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 2016,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 3825,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack": {
									"entryPoint": 7141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9c9101c444262e115f62faf22d3889bc6446fade1d31fd0a7de72247e37a28bb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a9c83bafacef6ef6297d2828f5147ae7f728142720de4d4634224a8e1ff199b0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b45f5068ac78a5208b0aaf17980c0e44d31143f89240a8f501ef739f25f76130_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cfe0029f7857ad1c3481fab3a86ac656b33b4cb8a7347f26a2f197d2cca210be_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8247,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8385,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8475,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9153,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": 7156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9c9101c444262e115f62faf22d3889bc6446fade1d31fd0a7de72247e37a28bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a9c83bafacef6ef6297d2828f5147ae7f728142720de4d4634224a8e1ff199b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b45f5068ac78a5208b0aaf17980c0e44d31143f89240a8f501ef739f25f76130__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cfe0029f7857ad1c3481fab3a86ac656b33b4cb8a7347f26a2f197d2cca210be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6777,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8996,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$729_to_t_address": {
									"entryPoint": 7124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6635,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7889,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7588,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6816,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb": {
									"entryPoint": 7681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb": {
									"entryPoint": 8143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674": {
									"entryPoint": 7785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9c9101c444262e115f62faf22d3889bc6446fade1d31fd0a7de72247e37a28bb": {
									"entryPoint": 8646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0": {
									"entryPoint": 9049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a9c83bafacef6ef6297d2828f5147ae7f728142720de4d4634224a8e1ff199b0": {
									"entryPoint": 8542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b45f5068ac78a5208b0aaf17980c0e44d31143f89240a8f501ef739f25f76130": {
									"entryPoint": 8854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cfe0029f7857ad1c3481fab3a86ac656b33b4cb8a7347f26a2f197d2cca210be": {
									"entryPoint": 8750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20586:6",
										"nodeType": "YulBlock",
										"src": "0:20586:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1287:32:6",
													"nodeType": "YulBlock",
													"src": "1287:32:6",
													"statements": [
														{
															"nativeSrc": "1297:16:6",
															"nodeType": "YulAssignment",
															"src": "1297:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1308:5:6",
																"nodeType": "YulIdentifier",
																"src": "1308:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1297:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1297:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1242:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1269:5:6",
														"nodeType": "YulTypedName",
														"src": "1269:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1279:7:6",
														"nodeType": "YulTypedName",
														"src": "1279:7:6",
														"type": ""
													}
												],
												"src": "1242:77:6"
											},
											{
												"body": {
													"nativeSrc": "1390:53:6",
													"nodeType": "YulBlock",
													"src": "1390:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1407:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1407:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1430:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1430:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1412:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1412:17:6"
																		},
																		"nativeSrc": "1412:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1412:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1400:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1400:6:6"
																},
																"nativeSrc": "1400:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1400:37:6"
															},
															"nativeSrc": "1400:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1400:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1325:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1378:5:6",
														"nodeType": "YulTypedName",
														"src": "1378:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1385:3:6",
														"nodeType": "YulTypedName",
														"src": "1385:3:6",
														"type": ""
													}
												],
												"src": "1325:118:6"
											},
											{
												"body": {
													"nativeSrc": "1575:206:6",
													"nodeType": "YulBlock",
													"src": "1575:206:6",
													"statements": [
														{
															"nativeSrc": "1585:26:6",
															"nodeType": "YulAssignment",
															"src": "1585:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1597:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1597:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1608:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1593:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:6"
																},
																"nativeSrc": "1593:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1593:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1585:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1585:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1665:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1665:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1678:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1678:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1689:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1689:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1674:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1674:3:6"
																		},
																		"nativeSrc": "1674:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1621:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1621:43:6"
																},
																"nativeSrc": "1621:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1621:71:6"
															},
															"nativeSrc": "1621:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1621:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1746:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1746:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1759:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1759:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1770:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1770:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1755:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1755:3:6"
																		},
																		"nativeSrc": "1755:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1755:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1702:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1702:43:6"
																},
																"nativeSrc": "1702:72:6",
																"nodeType": "YulFunctionCall",
																"src": "1702:72:6"
															},
															"nativeSrc": "1702:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "1702:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1449:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1539:9:6",
														"nodeType": "YulTypedName",
														"src": "1539:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1551:6:6",
														"nodeType": "YulTypedName",
														"src": "1551:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1559:6:6",
														"nodeType": "YulTypedName",
														"src": "1559:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1570:4:6",
														"nodeType": "YulTypedName",
														"src": "1570:4:6",
														"type": ""
													}
												],
												"src": "1449:332:6"
											},
											{
												"body": {
													"nativeSrc": "1827:35:6",
													"nodeType": "YulBlock",
													"src": "1827:35:6",
													"statements": [
														{
															"nativeSrc": "1837:19:6",
															"nodeType": "YulAssignment",
															"src": "1837:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1853:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1853:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1847:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1847:5:6"
																},
																"nativeSrc": "1847:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1847:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1837:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1837:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1787:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1820:6:6",
														"nodeType": "YulTypedName",
														"src": "1820:6:6",
														"type": ""
													}
												],
												"src": "1787:75:6"
											},
											{
												"body": {
													"nativeSrc": "1957:28:6",
													"nodeType": "YulBlock",
													"src": "1957:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1974:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1974:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1977:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1977:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1967:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1967:6:6"
																},
																"nativeSrc": "1967:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1967:12:6"
															},
															"nativeSrc": "1967:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1967:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1868:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1868:117:6"
											},
											{
												"body": {
													"nativeSrc": "2080:28:6",
													"nodeType": "YulBlock",
													"src": "2080:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2100:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2100:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2090:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:6"
																},
																"nativeSrc": "2090:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2090:12:6"
															},
															"nativeSrc": "2090:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "2090:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1991:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1991:117:6"
											},
											{
												"body": {
													"nativeSrc": "2159:81:6",
													"nodeType": "YulBlock",
													"src": "2159:81:6",
													"statements": [
														{
															"nativeSrc": "2169:65:6",
															"nodeType": "YulAssignment",
															"src": "2169:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2184:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2184:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2191:42:6",
																		"nodeType": "YulLiteral",
																		"src": "2191:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2180:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2180:3:6"
																},
																"nativeSrc": "2180:54:6",
																"nodeType": "YulFunctionCall",
																"src": "2180:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2169:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2169:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2114:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2141:5:6",
														"nodeType": "YulTypedName",
														"src": "2141:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2151:7:6",
														"nodeType": "YulTypedName",
														"src": "2151:7:6",
														"type": ""
													}
												],
												"src": "2114:126:6"
											},
											{
												"body": {
													"nativeSrc": "2291:51:6",
													"nodeType": "YulBlock",
													"src": "2291:51:6",
													"statements": [
														{
															"nativeSrc": "2301:35:6",
															"nodeType": "YulAssignment",
															"src": "2301:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2330:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2330:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2312:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2312:17:6"
																},
																"nativeSrc": "2312:24:6",
																"nodeType": "YulFunctionCall",
																"src": "2312:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2301:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2301:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2246:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2273:5:6",
														"nodeType": "YulTypedName",
														"src": "2273:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2283:7:6",
														"nodeType": "YulTypedName",
														"src": "2283:7:6",
														"type": ""
													}
												],
												"src": "2246:96:6"
											},
											{
												"body": {
													"nativeSrc": "2391:79:6",
													"nodeType": "YulBlock",
													"src": "2391:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2448:16:6",
																"nodeType": "YulBlock",
																"src": "2448:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2457:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2457:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2460:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2460:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2450:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2450:6:6"
																			},
																			"nativeSrc": "2450:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2450:12:6"
																		},
																		"nativeSrc": "2450:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2450:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2414:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2414:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2439:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2439:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2421:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2421:17:6"
																				},
																				"nativeSrc": "2421:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2421:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2411:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2411:2:6"
																		},
																		"nativeSrc": "2411:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2411:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2404:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:6"
																},
																"nativeSrc": "2404:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2404:43:6"
															},
															"nativeSrc": "2401:63:6",
															"nodeType": "YulIf",
															"src": "2401:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2348:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2384:5:6",
														"nodeType": "YulTypedName",
														"src": "2384:5:6",
														"type": ""
													}
												],
												"src": "2348:122:6"
											},
											{
												"body": {
													"nativeSrc": "2528:87:6",
													"nodeType": "YulBlock",
													"src": "2528:87:6",
													"statements": [
														{
															"nativeSrc": "2538:29:6",
															"nodeType": "YulAssignment",
															"src": "2538:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2560:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2560:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2547:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2547:12:6"
																},
																"nativeSrc": "2547:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2547:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2538:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2538:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2603:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2603:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2576:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2576:26:6"
																},
																"nativeSrc": "2576:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2576:33:6"
															},
															"nativeSrc": "2576:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2576:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2476:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2506:6:6",
														"nodeType": "YulTypedName",
														"src": "2506:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2514:3:6",
														"nodeType": "YulTypedName",
														"src": "2514:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2522:5:6",
														"nodeType": "YulTypedName",
														"src": "2522:5:6",
														"type": ""
													}
												],
												"src": "2476:139:6"
											},
											{
												"body": {
													"nativeSrc": "2664:79:6",
													"nodeType": "YulBlock",
													"src": "2664:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2721:16:6",
																"nodeType": "YulBlock",
																"src": "2721:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2730:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2730:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2733:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2723:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2723:6:6"
																			},
																			"nativeSrc": "2723:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2723:12:6"
																		},
																		"nativeSrc": "2723:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2723:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2687:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2687:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2712:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2712:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2694:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2694:17:6"
																				},
																				"nativeSrc": "2694:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2694:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2684:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2684:2:6"
																		},
																		"nativeSrc": "2684:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2684:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2677:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2677:6:6"
																},
																"nativeSrc": "2677:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2677:43:6"
															},
															"nativeSrc": "2674:63:6",
															"nodeType": "YulIf",
															"src": "2674:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2621:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2657:5:6",
														"nodeType": "YulTypedName",
														"src": "2657:5:6",
														"type": ""
													}
												],
												"src": "2621:122:6"
											},
											{
												"body": {
													"nativeSrc": "2801:87:6",
													"nodeType": "YulBlock",
													"src": "2801:87:6",
													"statements": [
														{
															"nativeSrc": "2811:29:6",
															"nodeType": "YulAssignment",
															"src": "2811:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2833:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2820:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2820:12:6"
																},
																"nativeSrc": "2820:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2820:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2811:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2811:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2876:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2876:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2849:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2849:26:6"
																},
																"nativeSrc": "2849:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2849:33:6"
															},
															"nativeSrc": "2849:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2849:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2749:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2779:6:6",
														"nodeType": "YulTypedName",
														"src": "2779:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2787:3:6",
														"nodeType": "YulTypedName",
														"src": "2787:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2795:5:6",
														"nodeType": "YulTypedName",
														"src": "2795:5:6",
														"type": ""
													}
												],
												"src": "2749:139:6"
											},
											{
												"body": {
													"nativeSrc": "2977:391:6",
													"nodeType": "YulBlock",
													"src": "2977:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3023:83:6",
																"nodeType": "YulBlock",
																"src": "3023:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3025:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3025:77:6"
																			},
																			"nativeSrc": "3025:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3025:79:6"
																		},
																		"nativeSrc": "3025:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3025:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2998:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2998:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3007:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3007:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2994:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2994:3:6"
																		},
																		"nativeSrc": "2994:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2994:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3019:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3019:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2990:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2990:3:6"
																},
																"nativeSrc": "2990:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2990:32:6"
															},
															"nativeSrc": "2987:119:6",
															"nodeType": "YulIf",
															"src": "2987:119:6"
														},
														{
															"nativeSrc": "3116:117:6",
															"nodeType": "YulBlock",
															"src": "3116:117:6",
															"statements": [
																{
																	"nativeSrc": "3131:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3131:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3145:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3145:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3135:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3135:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3160:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3160:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3195:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3195:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3206:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3206:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3191:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3191:3:6"
																				},
																				"nativeSrc": "3191:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3191:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3215:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3215:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3170:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3170:20:6"
																		},
																		"nativeSrc": "3170:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3170:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3160:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3160:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3243:118:6",
															"nodeType": "YulBlock",
															"src": "3243:118:6",
															"statements": [
																{
																	"nativeSrc": "3258:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3258:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3272:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3272:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3262:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3262:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3288:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3288:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3323:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3323:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3334:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3334:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3319:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3319:3:6"
																				},
																				"nativeSrc": "3319:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3319:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3343:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3343:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3298:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3298:20:6"
																		},
																		"nativeSrc": "3298:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3298:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3288:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3288:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2894:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2939:9:6",
														"nodeType": "YulTypedName",
														"src": "2939:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2950:7:6",
														"nodeType": "YulTypedName",
														"src": "2950:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2962:6:6",
														"nodeType": "YulTypedName",
														"src": "2962:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2970:6:6",
														"nodeType": "YulTypedName",
														"src": "2970:6:6",
														"type": ""
													}
												],
												"src": "2894:474:6"
											},
											{
												"body": {
													"nativeSrc": "3416:48:6",
													"nodeType": "YulBlock",
													"src": "3416:48:6",
													"statements": [
														{
															"nativeSrc": "3426:32:6",
															"nodeType": "YulAssignment",
															"src": "3426:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3451:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3451:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3444:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3444:6:6"
																		},
																		"nativeSrc": "3444:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3444:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3437:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3437:6:6"
																},
																"nativeSrc": "3437:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3437:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3426:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3426:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3374:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3398:5:6",
														"nodeType": "YulTypedName",
														"src": "3398:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3408:7:6",
														"nodeType": "YulTypedName",
														"src": "3408:7:6",
														"type": ""
													}
												],
												"src": "3374:90:6"
											},
											{
												"body": {
													"nativeSrc": "3529:50:6",
													"nodeType": "YulBlock",
													"src": "3529:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3546:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3546:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3566:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3566:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3551:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3551:14:6"
																		},
																		"nativeSrc": "3551:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3551:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3539:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3539:6:6"
																},
																"nativeSrc": "3539:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3539:34:6"
															},
															"nativeSrc": "3539:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3539:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3470:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3517:5:6",
														"nodeType": "YulTypedName",
														"src": "3517:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3524:3:6",
														"nodeType": "YulTypedName",
														"src": "3524:3:6",
														"type": ""
													}
												],
												"src": "3470:109:6"
											},
											{
												"body": {
													"nativeSrc": "3677:118:6",
													"nodeType": "YulBlock",
													"src": "3677:118:6",
													"statements": [
														{
															"nativeSrc": "3687:26:6",
															"nodeType": "YulAssignment",
															"src": "3687:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3699:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3699:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3710:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3710:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3695:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3695:3:6"
																},
																"nativeSrc": "3695:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3695:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3687:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3687:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3761:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3761:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3774:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3774:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3785:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3785:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3770:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3770:3:6"
																		},
																		"nativeSrc": "3770:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3770:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3723:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3723:37:6"
																},
																"nativeSrc": "3723:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3723:65:6"
															},
															"nativeSrc": "3723:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3723:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3585:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3649:9:6",
														"nodeType": "YulTypedName",
														"src": "3649:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3661:6:6",
														"nodeType": "YulTypedName",
														"src": "3661:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3672:4:6",
														"nodeType": "YulTypedName",
														"src": "3672:4:6",
														"type": ""
													}
												],
												"src": "3585:210:6"
											},
											{
												"body": {
													"nativeSrc": "3833:28:6",
													"nodeType": "YulBlock",
													"src": "3833:28:6",
													"statements": [
														{
															"nativeSrc": "3843:12:6",
															"nodeType": "YulAssignment",
															"src": "3843:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3850:5:6",
																"nodeType": "YulIdentifier",
																"src": "3850:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3843:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3843:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3801:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3819:5:6",
														"nodeType": "YulTypedName",
														"src": "3819:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3829:3:6",
														"nodeType": "YulTypedName",
														"src": "3829:3:6",
														"type": ""
													}
												],
												"src": "3801:60:6"
											},
											{
												"body": {
													"nativeSrc": "3927:82:6",
													"nodeType": "YulBlock",
													"src": "3927:82:6",
													"statements": [
														{
															"nativeSrc": "3937:66:6",
															"nodeType": "YulAssignment",
															"src": "3937:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3995:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3995:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3977:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3977:17:6"
																				},
																				"nativeSrc": "3977:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3977:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3968:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "3968:8:6"
																		},
																		"nativeSrc": "3968:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3968:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3950:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3950:17:6"
																},
																"nativeSrc": "3950:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3950:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3937:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3937:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3867:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3907:5:6",
														"nodeType": "YulTypedName",
														"src": "3907:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3917:9:6",
														"nodeType": "YulTypedName",
														"src": "3917:9:6",
														"type": ""
													}
												],
												"src": "3867:142:6"
											},
											{
												"body": {
													"nativeSrc": "4075:66:6",
													"nodeType": "YulBlock",
													"src": "4075:66:6",
													"statements": [
														{
															"nativeSrc": "4085:50:6",
															"nodeType": "YulAssignment",
															"src": "4085:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4129:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4129:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4098:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "4098:30:6"
																},
																"nativeSrc": "4098:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4098:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4085:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4085:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4015:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4055:5:6",
														"nodeType": "YulTypedName",
														"src": "4055:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4065:9:6",
														"nodeType": "YulTypedName",
														"src": "4065:9:6",
														"type": ""
													}
												],
												"src": "4015:126:6"
											},
											{
												"body": {
													"nativeSrc": "4221:66:6",
													"nodeType": "YulBlock",
													"src": "4221:66:6",
													"statements": [
														{
															"nativeSrc": "4231:50:6",
															"nodeType": "YulAssignment",
															"src": "4231:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4275:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4275:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4244:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "4244:30:6"
																},
																"nativeSrc": "4244:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4244:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4231:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4231:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$729_to_t_address",
												"nativeSrc": "4147:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4201:5:6",
														"nodeType": "YulTypedName",
														"src": "4201:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4211:9:6",
														"nodeType": "YulTypedName",
														"src": "4211:9:6",
														"type": ""
													}
												],
												"src": "4147:140:6"
											},
											{
												"body": {
													"nativeSrc": "4372:80:6",
													"nodeType": "YulBlock",
													"src": "4372:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4389:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4389:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4439:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4439:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$729_to_t_address",
																			"nativeSrc": "4394:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "4394:44:6"
																		},
																		"nativeSrc": "4394:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4394:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4382:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4382:6:6"
																},
																"nativeSrc": "4382:64:6",
																"nodeType": "YulFunctionCall",
																"src": "4382:64:6"
															},
															"nativeSrc": "4382:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "4382:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
												"nativeSrc": "4293:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4360:5:6",
														"nodeType": "YulTypedName",
														"src": "4360:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4367:3:6",
														"nodeType": "YulTypedName",
														"src": "4367:3:6",
														"type": ""
													}
												],
												"src": "4293:159:6"
											},
											{
												"body": {
													"nativeSrc": "4570:138:6",
													"nodeType": "YulBlock",
													"src": "4570:138:6",
													"statements": [
														{
															"nativeSrc": "4580:26:6",
															"nodeType": "YulAssignment",
															"src": "4580:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4592:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4592:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4603:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4603:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4588:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4588:3:6"
																},
																"nativeSrc": "4588:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4588:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4580:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4580:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4674:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4674:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4687:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4687:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4698:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4698:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4683:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4683:3:6"
																		},
																		"nativeSrc": "4683:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4683:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
																	"nativeSrc": "4616:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "4616:57:6"
																},
																"nativeSrc": "4616:85:6",
																"nodeType": "YulFunctionCall",
																"src": "4616:85:6"
															},
															"nativeSrc": "4616:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "4616:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "4458:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4542:9:6",
														"nodeType": "YulTypedName",
														"src": "4542:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4554:6:6",
														"nodeType": "YulTypedName",
														"src": "4554:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4565:4:6",
														"nodeType": "YulTypedName",
														"src": "4565:4:6",
														"type": ""
													}
												],
												"src": "4458:250:6"
											},
											{
												"body": {
													"nativeSrc": "4797:391:6",
													"nodeType": "YulBlock",
													"src": "4797:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4843:83:6",
																"nodeType": "YulBlock",
																"src": "4843:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4845:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4845:77:6"
																			},
																			"nativeSrc": "4845:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4845:79:6"
																		},
																		"nativeSrc": "4845:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4845:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4818:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4818:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4827:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4827:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4814:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4814:3:6"
																		},
																		"nativeSrc": "4814:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4839:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4839:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4810:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4810:3:6"
																},
																"nativeSrc": "4810:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4810:32:6"
															},
															"nativeSrc": "4807:119:6",
															"nodeType": "YulIf",
															"src": "4807:119:6"
														},
														{
															"nativeSrc": "4936:117:6",
															"nodeType": "YulBlock",
															"src": "4936:117:6",
															"statements": [
																{
																	"nativeSrc": "4951:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4951:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4965:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4965:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4955:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4955:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4980:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4980:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5015:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5015:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5026:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5026:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5011:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5011:3:6"
																				},
																				"nativeSrc": "5011:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5011:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5035:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5035:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4990:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4990:20:6"
																		},
																		"nativeSrc": "4990:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4990:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4980:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4980:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5063:118:6",
															"nodeType": "YulBlock",
															"src": "5063:118:6",
															"statements": [
																{
																	"nativeSrc": "5078:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5078:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5092:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5092:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5082:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5082:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5108:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5108:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5143:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5143:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5154:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5154:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5139:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5139:3:6"
																				},
																				"nativeSrc": "5139:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5139:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5163:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5163:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5118:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5118:20:6"
																		},
																		"nativeSrc": "5118:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5118:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5108:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5108:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "4714:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4759:9:6",
														"nodeType": "YulTypedName",
														"src": "4759:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4770:7:6",
														"nodeType": "YulTypedName",
														"src": "4770:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4782:6:6",
														"nodeType": "YulTypedName",
														"src": "4782:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4790:6:6",
														"nodeType": "YulTypedName",
														"src": "4790:6:6",
														"type": ""
													}
												],
												"src": "4714:474:6"
											},
											{
												"body": {
													"nativeSrc": "5292:124:6",
													"nodeType": "YulBlock",
													"src": "5292:124:6",
													"statements": [
														{
															"nativeSrc": "5302:26:6",
															"nodeType": "YulAssignment",
															"src": "5302:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5314:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5314:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5325:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5325:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5310:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5310:3:6"
																},
																"nativeSrc": "5310:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5310:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5302:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5302:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5382:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5382:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5395:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5395:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5406:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5406:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5391:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5391:3:6"
																		},
																		"nativeSrc": "5391:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5391:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5338:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5338:43:6"
																},
																"nativeSrc": "5338:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5338:71:6"
															},
															"nativeSrc": "5338:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5338:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5194:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5264:9:6",
														"nodeType": "YulTypedName",
														"src": "5264:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5276:6:6",
														"nodeType": "YulTypedName",
														"src": "5276:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5287:4:6",
														"nodeType": "YulTypedName",
														"src": "5287:4:6",
														"type": ""
													}
												],
												"src": "5194:222:6"
											},
											{
												"body": {
													"nativeSrc": "5522:519:6",
													"nodeType": "YulBlock",
													"src": "5522:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5568:83:6",
																"nodeType": "YulBlock",
																"src": "5568:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5570:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5570:77:6"
																			},
																			"nativeSrc": "5570:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5570:79:6"
																		},
																		"nativeSrc": "5570:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5570:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5543:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5543:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5552:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5552:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5539:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5539:3:6"
																		},
																		"nativeSrc": "5539:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5539:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5564:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5564:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5535:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5535:3:6"
																},
																"nativeSrc": "5535:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5535:32:6"
															},
															"nativeSrc": "5532:119:6",
															"nodeType": "YulIf",
															"src": "5532:119:6"
														},
														{
															"nativeSrc": "5661:117:6",
															"nodeType": "YulBlock",
															"src": "5661:117:6",
															"statements": [
																{
																	"nativeSrc": "5676:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5676:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5690:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5690:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5680:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5680:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5705:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5705:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5740:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5740:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5751:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5751:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5736:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5736:3:6"
																				},
																				"nativeSrc": "5736:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5736:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5760:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5760:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5715:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5715:20:6"
																		},
																		"nativeSrc": "5715:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5715:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5705:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5705:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5788:118:6",
															"nodeType": "YulBlock",
															"src": "5788:118:6",
															"statements": [
																{
																	"nativeSrc": "5803:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5803:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5817:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5817:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5807:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5807:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5833:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5833:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5868:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5868:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5879:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5879:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5864:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5864:3:6"
																				},
																				"nativeSrc": "5864:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5864:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5888:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5888:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5843:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5843:20:6"
																		},
																		"nativeSrc": "5843:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5843:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5833:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5833:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5916:118:6",
															"nodeType": "YulBlock",
															"src": "5916:118:6",
															"statements": [
																{
																	"nativeSrc": "5931:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5931:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5945:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5945:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5935:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5935:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5961:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5961:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5996:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5996:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6007:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6007:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5992:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5992:3:6"
																				},
																				"nativeSrc": "5992:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5992:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6016:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6016:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5971:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5971:20:6"
																		},
																		"nativeSrc": "5971:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5971:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5961:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5961:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5422:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5476:9:6",
														"nodeType": "YulTypedName",
														"src": "5476:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5487:7:6",
														"nodeType": "YulTypedName",
														"src": "5487:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5499:6:6",
														"nodeType": "YulTypedName",
														"src": "5499:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5507:6:6",
														"nodeType": "YulTypedName",
														"src": "5507:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5515:6:6",
														"nodeType": "YulTypedName",
														"src": "5515:6:6",
														"type": ""
													}
												],
												"src": "5422:619:6"
											},
											{
												"body": {
													"nativeSrc": "6090:43:6",
													"nodeType": "YulBlock",
													"src": "6090:43:6",
													"statements": [
														{
															"nativeSrc": "6100:27:6",
															"nodeType": "YulAssignment",
															"src": "6100:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6115:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6115:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6122:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6122:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6111:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6111:3:6"
																},
																"nativeSrc": "6111:16:6",
																"nodeType": "YulFunctionCall",
																"src": "6111:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6100:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6100:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6047:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6072:5:6",
														"nodeType": "YulTypedName",
														"src": "6072:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6082:7:6",
														"nodeType": "YulTypedName",
														"src": "6082:7:6",
														"type": ""
													}
												],
												"src": "6047:86:6"
											},
											{
												"body": {
													"nativeSrc": "6200:51:6",
													"nodeType": "YulBlock",
													"src": "6200:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6217:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6217:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6238:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6238:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6222:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "6222:15:6"
																		},
																		"nativeSrc": "6222:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6222:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6210:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6210:6:6"
																},
																"nativeSrc": "6210:35:6",
																"nodeType": "YulFunctionCall",
																"src": "6210:35:6"
															},
															"nativeSrc": "6210:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "6210:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6139:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6188:5:6",
														"nodeType": "YulTypedName",
														"src": "6188:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6195:3:6",
														"nodeType": "YulTypedName",
														"src": "6195:3:6",
														"type": ""
													}
												],
												"src": "6139:112:6"
											},
											{
												"body": {
													"nativeSrc": "6351:120:6",
													"nodeType": "YulBlock",
													"src": "6351:120:6",
													"statements": [
														{
															"nativeSrc": "6361:26:6",
															"nodeType": "YulAssignment",
															"src": "6361:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6373:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6373:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6384:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6384:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6369:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6369:3:6"
																},
																"nativeSrc": "6369:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6369:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6361:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6361:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6437:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6437:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6450:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6450:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6461:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6461:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6446:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6446:3:6"
																		},
																		"nativeSrc": "6446:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6446:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6397:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "6397:39:6"
																},
																"nativeSrc": "6397:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6397:67:6"
															},
															"nativeSrc": "6397:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "6397:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6257:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6323:9:6",
														"nodeType": "YulTypedName",
														"src": "6323:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6335:6:6",
														"nodeType": "YulTypedName",
														"src": "6335:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6346:4:6",
														"nodeType": "YulTypedName",
														"src": "6346:4:6",
														"type": ""
													}
												],
												"src": "6257:214:6"
											},
											{
												"body": {
													"nativeSrc": "6543:263:6",
													"nodeType": "YulBlock",
													"src": "6543:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6589:83:6",
																"nodeType": "YulBlock",
																"src": "6589:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6591:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:6"
																			},
																			"nativeSrc": "6591:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:6"
																		},
																		"nativeSrc": "6591:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6564:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6573:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6560:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:6"
																		},
																		"nativeSrc": "6560:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6556:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:6"
																},
																"nativeSrc": "6556:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6556:32:6"
															},
															"nativeSrc": "6553:119:6",
															"nodeType": "YulIf",
															"src": "6553:119:6"
														},
														{
															"nativeSrc": "6682:117:6",
															"nodeType": "YulBlock",
															"src": "6682:117:6",
															"statements": [
																{
																	"nativeSrc": "6697:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6711:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6701:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6726:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6726:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6761:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6772:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6757:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:6"
																				},
																				"nativeSrc": "6757:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6781:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6736:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:6"
																		},
																		"nativeSrc": "6736:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6726:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6477:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6513:9:6",
														"nodeType": "YulTypedName",
														"src": "6513:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6524:7:6",
														"nodeType": "YulTypedName",
														"src": "6524:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6536:6:6",
														"nodeType": "YulTypedName",
														"src": "6536:6:6",
														"type": ""
													}
												],
												"src": "6477:329:6"
											},
											{
												"body": {
													"nativeSrc": "6877:53:6",
													"nodeType": "YulBlock",
													"src": "6877:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6894:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6894:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6917:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6917:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6899:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "6899:17:6"
																		},
																		"nativeSrc": "6899:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6899:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6887:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6887:6:6"
																},
																"nativeSrc": "6887:37:6",
																"nodeType": "YulFunctionCall",
																"src": "6887:37:6"
															},
															"nativeSrc": "6887:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "6887:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6812:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6865:5:6",
														"nodeType": "YulTypedName",
														"src": "6865:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6872:3:6",
														"nodeType": "YulTypedName",
														"src": "6872:3:6",
														"type": ""
													}
												],
												"src": "6812:118:6"
											},
											{
												"body": {
													"nativeSrc": "7034:124:6",
													"nodeType": "YulBlock",
													"src": "7034:124:6",
													"statements": [
														{
															"nativeSrc": "7044:26:6",
															"nodeType": "YulAssignment",
															"src": "7044:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7056:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7056:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7067:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7067:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7052:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7052:3:6"
																},
																"nativeSrc": "7052:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7052:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7044:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7044:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7124:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7124:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7137:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7137:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7148:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7148:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7133:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7133:3:6"
																		},
																		"nativeSrc": "7133:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7133:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7080:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7080:43:6"
																},
																"nativeSrc": "7080:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7080:71:6"
															},
															"nativeSrc": "7080:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7080:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6936:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7006:9:6",
														"nodeType": "YulTypedName",
														"src": "7006:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7018:6:6",
														"nodeType": "YulTypedName",
														"src": "7018:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7029:4:6",
														"nodeType": "YulTypedName",
														"src": "7029:4:6",
														"type": ""
													}
												],
												"src": "6936:222:6"
											},
											{
												"body": {
													"nativeSrc": "7230:263:6",
													"nodeType": "YulBlock",
													"src": "7230:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7276:83:6",
																"nodeType": "YulBlock",
																"src": "7276:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7278:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7278:77:6"
																			},
																			"nativeSrc": "7278:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7278:79:6"
																		},
																		"nativeSrc": "7278:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7278:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7251:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7251:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7260:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7260:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7247:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7247:3:6"
																		},
																		"nativeSrc": "7247:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7247:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7272:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7272:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7243:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7243:3:6"
																},
																"nativeSrc": "7243:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7243:32:6"
															},
															"nativeSrc": "7240:119:6",
															"nodeType": "YulIf",
															"src": "7240:119:6"
														},
														{
															"nativeSrc": "7369:117:6",
															"nodeType": "YulBlock",
															"src": "7369:117:6",
															"statements": [
																{
																	"nativeSrc": "7384:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7384:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7398:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7398:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7388:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7388:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7413:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7413:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7448:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7448:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7459:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7459:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7444:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7444:3:6"
																				},
																				"nativeSrc": "7444:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7444:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7468:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7468:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7423:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7423:20:6"
																		},
																		"nativeSrc": "7423:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7423:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7413:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7413:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7164:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7200:9:6",
														"nodeType": "YulTypedName",
														"src": "7200:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7211:7:6",
														"nodeType": "YulTypedName",
														"src": "7211:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7223:6:6",
														"nodeType": "YulTypedName",
														"src": "7223:6:6",
														"type": ""
													}
												],
												"src": "7164:329:6"
											},
											{
												"body": {
													"nativeSrc": "7582:391:6",
													"nodeType": "YulBlock",
													"src": "7582:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7628:83:6",
																"nodeType": "YulBlock",
																"src": "7628:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7630:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7630:77:6"
																			},
																			"nativeSrc": "7630:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7630:79:6"
																		},
																		"nativeSrc": "7630:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7630:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7603:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7603:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7612:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7612:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7599:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7599:3:6"
																		},
																		"nativeSrc": "7599:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7599:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7624:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7624:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7595:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7595:3:6"
																},
																"nativeSrc": "7595:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7595:32:6"
															},
															"nativeSrc": "7592:119:6",
															"nodeType": "YulIf",
															"src": "7592:119:6"
														},
														{
															"nativeSrc": "7721:117:6",
															"nodeType": "YulBlock",
															"src": "7721:117:6",
															"statements": [
																{
																	"nativeSrc": "7736:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7736:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7750:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7750:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7740:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7740:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7765:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7765:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7800:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7800:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7811:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7811:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7796:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7796:3:6"
																				},
																				"nativeSrc": "7796:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7796:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7820:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7820:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7775:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7775:20:6"
																		},
																		"nativeSrc": "7775:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7775:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7765:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7765:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7848:118:6",
															"nodeType": "YulBlock",
															"src": "7848:118:6",
															"statements": [
																{
																	"nativeSrc": "7863:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7863:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7877:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7877:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7867:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7867:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7893:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7893:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7928:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7928:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7939:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7939:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7924:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7924:3:6"
																				},
																				"nativeSrc": "7924:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7924:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7948:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7948:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7903:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7903:20:6"
																		},
																		"nativeSrc": "7903:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7903:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7893:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7893:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7499:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7544:9:6",
														"nodeType": "YulTypedName",
														"src": "7544:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7555:7:6",
														"nodeType": "YulTypedName",
														"src": "7555:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7567:6:6",
														"nodeType": "YulTypedName",
														"src": "7567:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7575:6:6",
														"nodeType": "YulTypedName",
														"src": "7575:6:6",
														"type": ""
													}
												],
												"src": "7499:474:6"
											},
											{
												"body": {
													"nativeSrc": "8007:152:6",
													"nodeType": "YulBlock",
													"src": "8007:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8024:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8024:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8027:77:6",
																		"nodeType": "YulLiteral",
																		"src": "8027:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8017:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8017:6:6"
																},
																"nativeSrc": "8017:88:6",
																"nodeType": "YulFunctionCall",
																"src": "8017:88:6"
															},
															"nativeSrc": "8017:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "8017:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8121:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8121:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8124:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8124:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8114:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8114:6:6"
																},
																"nativeSrc": "8114:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8114:15:6"
															},
															"nativeSrc": "8114:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8114:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8145:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8145:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8148:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8148:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8138:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8138:6:6"
																},
																"nativeSrc": "8138:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8138:15:6"
															},
															"nativeSrc": "8138:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8138:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7979:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "7979:180:6"
											},
											{
												"body": {
													"nativeSrc": "8216:269:6",
													"nodeType": "YulBlock",
													"src": "8216:269:6",
													"statements": [
														{
															"nativeSrc": "8226:22:6",
															"nodeType": "YulAssignment",
															"src": "8226:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8240:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8240:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8246:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8246:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8236:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8236:3:6"
																},
																"nativeSrc": "8236:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8236:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8226:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8226:6:6"
																}
															]
														},
														{
															"nativeSrc": "8257:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8257:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8287:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8287:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8293:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8293:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8283:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8283:3:6"
																},
																"nativeSrc": "8283:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8283:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8261:18:6",
																	"nodeType": "YulTypedName",
																	"src": "8261:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8334:51:6",
																"nodeType": "YulBlock",
																"src": "8334:51:6",
																"statements": [
																	{
																		"nativeSrc": "8348:27:6",
																		"nodeType": "YulAssignment",
																		"src": "8348:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8362:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "8362:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8370:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8370:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8358:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8358:3:6"
																			},
																			"nativeSrc": "8358:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8358:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8348:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8348:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8314:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "8314:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8307:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8307:6:6"
																},
																"nativeSrc": "8307:26:6",
																"nodeType": "YulFunctionCall",
																"src": "8307:26:6"
															},
															"nativeSrc": "8304:81:6",
															"nodeType": "YulIf",
															"src": "8304:81:6"
														},
														{
															"body": {
																"nativeSrc": "8437:42:6",
																"nodeType": "YulBlock",
																"src": "8437:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8451:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8451:16:6"
																			},
																			"nativeSrc": "8451:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8451:18:6"
																		},
																		"nativeSrc": "8451:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8451:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8401:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "8401:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8424:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8424:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8432:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8432:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8421:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8421:2:6"
																		},
																		"nativeSrc": "8421:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8421:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8398:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8398:2:6"
																},
																"nativeSrc": "8398:38:6",
																"nodeType": "YulFunctionCall",
																"src": "8398:38:6"
															},
															"nativeSrc": "8395:84:6",
															"nodeType": "YulIf",
															"src": "8395:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8165:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8200:4:6",
														"nodeType": "YulTypedName",
														"src": "8200:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8209:6:6",
														"nodeType": "YulTypedName",
														"src": "8209:6:6",
														"type": ""
													}
												],
												"src": "8165:320:6"
											},
											{
												"body": {
													"nativeSrc": "8597:62:6",
													"nodeType": "YulBlock",
													"src": "8597:62:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8619:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8619:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8627:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8627:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8615:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8615:3:6"
																		},
																		"nativeSrc": "8615:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8615:14:6"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "8631:20:6",
																		"nodeType": "YulLiteral",
																		"src": "8631:20:6",
																		"type": "",
																		"value": "Amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8608:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8608:6:6"
																},
																"nativeSrc": "8608:44:6",
																"nodeType": "YulFunctionCall",
																"src": "8608:44:6"
															},
															"nativeSrc": "8608:44:6",
															"nodeType": "YulExpressionStatement",
															"src": "8608:44:6"
														}
													]
												},
												"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
												"nativeSrc": "8491:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8589:6:6",
														"nodeType": "YulTypedName",
														"src": "8589:6:6",
														"type": ""
													}
												],
												"src": "8491:168:6"
											},
											{
												"body": {
													"nativeSrc": "8811:220:6",
													"nodeType": "YulBlock",
													"src": "8811:220:6",
													"statements": [
														{
															"nativeSrc": "8821:74:6",
															"nodeType": "YulAssignment",
															"src": "8821:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8887:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8887:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8892:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8892:2:6",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8828:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8828:58:6"
																},
																"nativeSrc": "8828:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8828:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8821:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8821:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8993:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8993:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																	"nativeSrc": "8904:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8904:88:6"
																},
																"nativeSrc": "8904:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8904:93:6"
															},
															"nativeSrc": "8904:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8904:93:6"
														},
														{
															"nativeSrc": "9006:19:6",
															"nodeType": "YulAssignment",
															"src": "9006:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9017:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9017:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9022:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9022:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9013:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9013:3:6"
																},
																"nativeSrc": "9013:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9013:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9006:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9006:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8665:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8799:3:6",
														"nodeType": "YulTypedName",
														"src": "8799:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8807:3:6",
														"nodeType": "YulTypedName",
														"src": "8807:3:6",
														"type": ""
													}
												],
												"src": "8665:366:6"
											},
											{
												"body": {
													"nativeSrc": "9208:248:6",
													"nodeType": "YulBlock",
													"src": "9208:248:6",
													"statements": [
														{
															"nativeSrc": "9218:26:6",
															"nodeType": "YulAssignment",
															"src": "9218:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9230:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9230:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9241:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9241:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9226:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9226:3:6"
																},
																"nativeSrc": "9226:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9226:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9218:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9218:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9265:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9265:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9276:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9276:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9261:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9261:3:6"
																		},
																		"nativeSrc": "9261:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9261:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9284:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9284:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9290:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9290:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9280:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9280:3:6"
																		},
																		"nativeSrc": "9280:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9280:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9254:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9254:6:6"
																},
																"nativeSrc": "9254:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9254:47:6"
															},
															"nativeSrc": "9254:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9254:47:6"
														},
														{
															"nativeSrc": "9310:139:6",
															"nodeType": "YulAssignment",
															"src": "9310:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9444:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9444:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9318:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9318:124:6"
																},
																"nativeSrc": "9318:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9318:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9310:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9310:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9037:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9188:9:6",
														"nodeType": "YulTypedName",
														"src": "9188:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9203:4:6",
														"nodeType": "YulTypedName",
														"src": "9203:4:6",
														"type": ""
													}
												],
												"src": "9037:419:6"
											},
											{
												"body": {
													"nativeSrc": "9568:65:6",
													"nodeType": "YulBlock",
													"src": "9568:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9590:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9590:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9598:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9598:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9586:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9586:3:6"
																		},
																		"nativeSrc": "9586:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9586:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207265736572766573",
																		"kind": "string",
																		"nativeSrc": "9602:23:6",
																		"nodeType": "YulLiteral",
																		"src": "9602:23:6",
																		"type": "",
																		"value": "Insufficient reserves"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9579:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9579:6:6"
																},
																"nativeSrc": "9579:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9579:47:6"
															},
															"nativeSrc": "9579:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9579:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674",
												"nativeSrc": "9462:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9560:6:6",
														"nodeType": "YulTypedName",
														"src": "9560:6:6",
														"type": ""
													}
												],
												"src": "9462:171:6"
											},
											{
												"body": {
													"nativeSrc": "9785:220:6",
													"nodeType": "YulBlock",
													"src": "9785:220:6",
													"statements": [
														{
															"nativeSrc": "9795:74:6",
															"nodeType": "YulAssignment",
															"src": "9795:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9861:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9861:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9866:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9866:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9802:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9802:58:6"
																},
																"nativeSrc": "9802:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9802:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9795:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9795:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9967:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9967:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674",
																	"nativeSrc": "9878:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9878:88:6"
																},
																"nativeSrc": "9878:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9878:93:6"
															},
															"nativeSrc": "9878:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9878:93:6"
														},
														{
															"nativeSrc": "9980:19:6",
															"nodeType": "YulAssignment",
															"src": "9980:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9991:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9991:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9996:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9996:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9987:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9987:3:6"
																},
																"nativeSrc": "9987:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9987:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9980:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9980:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9639:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9773:3:6",
														"nodeType": "YulTypedName",
														"src": "9773:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9781:3:6",
														"nodeType": "YulTypedName",
														"src": "9781:3:6",
														"type": ""
													}
												],
												"src": "9639:366:6"
											},
											{
												"body": {
													"nativeSrc": "10182:248:6",
													"nodeType": "YulBlock",
													"src": "10182:248:6",
													"statements": [
														{
															"nativeSrc": "10192:26:6",
															"nodeType": "YulAssignment",
															"src": "10192:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10204:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10204:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10215:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10215:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10200:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10200:3:6"
																},
																"nativeSrc": "10200:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10200:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10192:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10192:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10239:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10239:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10250:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10250:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10235:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10235:3:6"
																		},
																		"nativeSrc": "10235:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10235:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10258:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10258:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10264:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10264:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10254:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10254:3:6"
																		},
																		"nativeSrc": "10254:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10254:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10228:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10228:6:6"
																},
																"nativeSrc": "10228:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10228:47:6"
															},
															"nativeSrc": "10228:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10228:47:6"
														},
														{
															"nativeSrc": "10284:139:6",
															"nodeType": "YulAssignment",
															"src": "10284:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10418:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10418:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10292:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10292:124:6"
																},
																"nativeSrc": "10292:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10292:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10284:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10284:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10011:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10162:9:6",
														"nodeType": "YulTypedName",
														"src": "10162:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10177:4:6",
														"nodeType": "YulTypedName",
														"src": "10177:4:6",
														"type": ""
													}
												],
												"src": "10011:419:6"
											},
											{
												"body": {
													"nativeSrc": "10464:152:6",
													"nodeType": "YulBlock",
													"src": "10464:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10481:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10481:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10484:77:6",
																		"nodeType": "YulLiteral",
																		"src": "10484:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10474:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10474:6:6"
																},
																"nativeSrc": "10474:88:6",
																"nodeType": "YulFunctionCall",
																"src": "10474:88:6"
															},
															"nativeSrc": "10474:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "10474:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10578:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10578:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10581:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10581:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10571:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10571:6:6"
																},
																"nativeSrc": "10571:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10571:15:6"
															},
															"nativeSrc": "10571:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "10571:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10602:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10602:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10605:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10605:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10595:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10595:6:6"
																},
																"nativeSrc": "10595:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10595:15:6"
															},
															"nativeSrc": "10595:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "10595:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10436:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "10436:180:6"
											},
											{
												"body": {
													"nativeSrc": "10670:362:6",
													"nodeType": "YulBlock",
													"src": "10670:362:6",
													"statements": [
														{
															"nativeSrc": "10680:25:6",
															"nodeType": "YulAssignment",
															"src": "10680:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10703:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10703:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10685:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10685:17:6"
																},
																"nativeSrc": "10685:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10685:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10680:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10680:1:6"
																}
															]
														},
														{
															"nativeSrc": "10714:25:6",
															"nodeType": "YulAssignment",
															"src": "10714:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10737:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10737:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10719:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10719:17:6"
																},
																"nativeSrc": "10719:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10719:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10714:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10714:1:6"
																}
															]
														},
														{
															"nativeSrc": "10748:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "10748:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10771:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10771:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10774:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10774:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10767:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10767:3:6"
																},
																"nativeSrc": "10767:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10767:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10752:11:6",
																	"nodeType": "YulTypedName",
																	"src": "10752:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10785:41:6",
															"nodeType": "YulAssignment",
															"src": "10785:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10814:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "10814:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10796:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10796:17:6"
																},
																"nativeSrc": "10796:30:6",
																"nodeType": "YulFunctionCall",
																"src": "10796:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10785:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "10785:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11003:22:6",
																"nodeType": "YulBlock",
																"src": "11003:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11005:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11005:16:6"
																			},
																			"nativeSrc": "11005:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11005:18:6"
																		},
																		"nativeSrc": "11005:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11005:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10936:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "10936:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10929:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "10929:6:6"
																				},
																				"nativeSrc": "10929:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10929:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10959:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "10959:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10966:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "10966:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10975:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "10975:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10962:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "10962:3:6"
																						},
																						"nativeSrc": "10962:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "10962:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10956:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "10956:2:6"
																				},
																				"nativeSrc": "10956:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10956:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10909:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "10909:2:6"
																		},
																		"nativeSrc": "10909:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10909:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10889:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10889:6:6"
																},
																"nativeSrc": "10889:113:6",
																"nodeType": "YulFunctionCall",
																"src": "10889:113:6"
															},
															"nativeSrc": "10886:139:6",
															"nodeType": "YulIf",
															"src": "10886:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10622:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10653:1:6",
														"nodeType": "YulTypedName",
														"src": "10653:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10656:1:6",
														"nodeType": "YulTypedName",
														"src": "10656:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10662:7:6",
														"nodeType": "YulTypedName",
														"src": "10662:7:6",
														"type": ""
													}
												],
												"src": "10622:410:6"
											},
											{
												"body": {
													"nativeSrc": "11066:152:6",
													"nodeType": "YulBlock",
													"src": "11066:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11083:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11083:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11086:77:6",
																		"nodeType": "YulLiteral",
																		"src": "11086:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11076:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11076:6:6"
																},
																"nativeSrc": "11076:88:6",
																"nodeType": "YulFunctionCall",
																"src": "11076:88:6"
															},
															"nativeSrc": "11076:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "11076:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11180:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11180:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11183:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11183:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11173:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11173:6:6"
																},
																"nativeSrc": "11173:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11173:15:6"
															},
															"nativeSrc": "11173:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11173:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11204:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11204:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11207:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11207:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11197:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11197:6:6"
																},
																"nativeSrc": "11197:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11197:15:6"
															},
															"nativeSrc": "11197:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11197:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11038:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "11038:180:6"
											},
											{
												"body": {
													"nativeSrc": "11266:143:6",
													"nodeType": "YulBlock",
													"src": "11266:143:6",
													"statements": [
														{
															"nativeSrc": "11276:25:6",
															"nodeType": "YulAssignment",
															"src": "11276:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11299:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11299:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11281:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11281:17:6"
																},
																"nativeSrc": "11281:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11281:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11276:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11276:1:6"
																}
															]
														},
														{
															"nativeSrc": "11310:25:6",
															"nodeType": "YulAssignment",
															"src": "11310:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11333:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11333:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11315:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11315:17:6"
																},
																"nativeSrc": "11315:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11315:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11310:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11310:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11357:22:6",
																"nodeType": "YulBlock",
																"src": "11357:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11359:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11359:16:6"
																			},
																			"nativeSrc": "11359:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11359:18:6"
																		},
																		"nativeSrc": "11359:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11359:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11354:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11354:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11347:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11347:6:6"
																},
																"nativeSrc": "11347:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11347:9:6"
															},
															"nativeSrc": "11344:35:6",
															"nodeType": "YulIf",
															"src": "11344:35:6"
														},
														{
															"nativeSrc": "11389:14:6",
															"nodeType": "YulAssignment",
															"src": "11389:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11398:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11398:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11401:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11401:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11394:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11394:3:6"
																},
																"nativeSrc": "11394:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11394:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11389:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11389:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11224:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11255:1:6",
														"nodeType": "YulTypedName",
														"src": "11255:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11258:1:6",
														"nodeType": "YulTypedName",
														"src": "11258:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11264:1:6",
														"nodeType": "YulTypedName",
														"src": "11264:1:6",
														"type": ""
													}
												],
												"src": "11224:185:6"
											},
											{
												"body": {
													"nativeSrc": "11459:147:6",
													"nodeType": "YulBlock",
													"src": "11459:147:6",
													"statements": [
														{
															"nativeSrc": "11469:25:6",
															"nodeType": "YulAssignment",
															"src": "11469:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11492:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11492:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11474:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11474:17:6"
																},
																"nativeSrc": "11474:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11474:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11469:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11469:1:6"
																}
															]
														},
														{
															"nativeSrc": "11503:25:6",
															"nodeType": "YulAssignment",
															"src": "11503:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11526:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11526:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11508:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11508:17:6"
																},
																"nativeSrc": "11508:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11508:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11503:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11503:1:6"
																}
															]
														},
														{
															"nativeSrc": "11537:16:6",
															"nodeType": "YulAssignment",
															"src": "11537:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11548:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11548:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11551:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11551:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11544:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11544:3:6"
																},
																"nativeSrc": "11544:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11544:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11537:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11537:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11577:22:6",
																"nodeType": "YulBlock",
																"src": "11577:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11579:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11579:16:6"
																			},
																			"nativeSrc": "11579:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11579:18:6"
																		},
																		"nativeSrc": "11579:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11579:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11569:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11569:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11572:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11572:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11566:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11566:2:6"
																},
																"nativeSrc": "11566:10:6",
																"nodeType": "YulFunctionCall",
																"src": "11566:10:6"
															},
															"nativeSrc": "11563:36:6",
															"nodeType": "YulIf",
															"src": "11563:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11415:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11446:1:6",
														"nodeType": "YulTypedName",
														"src": "11446:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11449:1:6",
														"nodeType": "YulTypedName",
														"src": "11449:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11455:3:6",
														"nodeType": "YulTypedName",
														"src": "11455:3:6",
														"type": ""
													}
												],
												"src": "11415:191:6"
											},
											{
												"body": {
													"nativeSrc": "11718:61:6",
													"nodeType": "YulBlock",
													"src": "11718:61:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11740:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11740:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11748:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11748:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11736:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11736:3:6"
																		},
																		"nativeSrc": "11736:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11736:14:6"
																	},
																	{
																		"hexValue": "536c69707061676520746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "11752:19:6",
																		"nodeType": "YulLiteral",
																		"src": "11752:19:6",
																		"type": "",
																		"value": "Slippage too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11729:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11729:6:6"
																},
																"nativeSrc": "11729:43:6",
																"nodeType": "YulFunctionCall",
																"src": "11729:43:6"
															},
															"nativeSrc": "11729:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "11729:43:6"
														}
													]
												},
												"name": "store_literal_in_memory_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb",
												"nativeSrc": "11612:167:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11710:6:6",
														"nodeType": "YulTypedName",
														"src": "11710:6:6",
														"type": ""
													}
												],
												"src": "11612:167:6"
											},
											{
												"body": {
													"nativeSrc": "11931:220:6",
													"nodeType": "YulBlock",
													"src": "11931:220:6",
													"statements": [
														{
															"nativeSrc": "11941:74:6",
															"nodeType": "YulAssignment",
															"src": "11941:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12007:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12007:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12012:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12012:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11948:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11948:58:6"
																},
																"nativeSrc": "11948:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11948:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11941:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11941:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12113:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12113:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb",
																	"nativeSrc": "12024:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "12024:88:6"
																},
																"nativeSrc": "12024:93:6",
																"nodeType": "YulFunctionCall",
																"src": "12024:93:6"
															},
															"nativeSrc": "12024:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "12024:93:6"
														},
														{
															"nativeSrc": "12126:19:6",
															"nodeType": "YulAssignment",
															"src": "12126:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12137:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12137:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12142:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12142:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12133:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12133:3:6"
																},
																"nativeSrc": "12133:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12133:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12126:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12126:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11785:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11919:3:6",
														"nodeType": "YulTypedName",
														"src": "11919:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11927:3:6",
														"nodeType": "YulTypedName",
														"src": "11927:3:6",
														"type": ""
													}
												],
												"src": "11785:366:6"
											},
											{
												"body": {
													"nativeSrc": "12328:248:6",
													"nodeType": "YulBlock",
													"src": "12328:248:6",
													"statements": [
														{
															"nativeSrc": "12338:26:6",
															"nodeType": "YulAssignment",
															"src": "12338:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12350:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12350:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12361:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12361:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12346:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12346:3:6"
																},
																"nativeSrc": "12346:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12346:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12338:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12338:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12385:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12385:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12396:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12396:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12381:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12381:3:6"
																		},
																		"nativeSrc": "12381:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12381:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12404:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "12404:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12410:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12410:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12400:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12400:3:6"
																		},
																		"nativeSrc": "12400:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12400:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12374:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12374:6:6"
																},
																"nativeSrc": "12374:47:6",
																"nodeType": "YulFunctionCall",
																"src": "12374:47:6"
															},
															"nativeSrc": "12374:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "12374:47:6"
														},
														{
															"nativeSrc": "12430:139:6",
															"nodeType": "YulAssignment",
															"src": "12430:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12564:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12564:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12438:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "12438:124:6"
																},
																"nativeSrc": "12438:131:6",
																"nodeType": "YulFunctionCall",
																"src": "12438:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12430:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12430:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12157:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12308:9:6",
														"nodeType": "YulTypedName",
														"src": "12308:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12323:4:6",
														"nodeType": "YulTypedName",
														"src": "12323:4:6",
														"type": ""
													}
												],
												"src": "12157:419:6"
											},
											{
												"body": {
													"nativeSrc": "12736:288:6",
													"nodeType": "YulBlock",
													"src": "12736:288:6",
													"statements": [
														{
															"nativeSrc": "12746:26:6",
															"nodeType": "YulAssignment",
															"src": "12746:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12758:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12758:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12769:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12769:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12754:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12754:3:6"
																},
																"nativeSrc": "12754:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12754:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12746:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12746:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12826:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12826:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12839:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12839:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12850:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12850:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12835:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12835:3:6"
																		},
																		"nativeSrc": "12835:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12835:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12782:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12782:43:6"
																},
																"nativeSrc": "12782:71:6",
																"nodeType": "YulFunctionCall",
																"src": "12782:71:6"
															},
															"nativeSrc": "12782:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "12782:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12907:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12907:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12920:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12920:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12931:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12931:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12916:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12916:3:6"
																		},
																		"nativeSrc": "12916:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12916:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12863:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12863:43:6"
																},
																"nativeSrc": "12863:72:6",
																"nodeType": "YulFunctionCall",
																"src": "12863:72:6"
															},
															"nativeSrc": "12863:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "12863:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12989:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12989:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13002:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13002:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13013:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13013:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12998:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12998:3:6"
																		},
																		"nativeSrc": "12998:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12998:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12945:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12945:43:6"
																},
																"nativeSrc": "12945:72:6",
																"nodeType": "YulFunctionCall",
																"src": "12945:72:6"
															},
															"nativeSrc": "12945:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "12945:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12582:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12692:9:6",
														"nodeType": "YulTypedName",
														"src": "12692:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12704:6:6",
														"nodeType": "YulTypedName",
														"src": "12704:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12712:6:6",
														"nodeType": "YulTypedName",
														"src": "12712:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12720:6:6",
														"nodeType": "YulTypedName",
														"src": "12720:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12731:4:6",
														"nodeType": "YulTypedName",
														"src": "12731:4:6",
														"type": ""
													}
												],
												"src": "12582:442:6"
											},
											{
												"body": {
													"nativeSrc": "13070:76:6",
													"nodeType": "YulBlock",
													"src": "13070:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "13124:16:6",
																"nodeType": "YulBlock",
																"src": "13124:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13133:1:6",
																					"nodeType": "YulLiteral",
																					"src": "13133:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13136:1:6",
																					"nodeType": "YulLiteral",
																					"src": "13136:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13126:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "13126:6:6"
																			},
																			"nativeSrc": "13126:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "13126:12:6"
																		},
																		"nativeSrc": "13126:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "13126:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13093:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "13093:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13115:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "13115:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "13100:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "13100:14:6"
																				},
																				"nativeSrc": "13100:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "13100:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13090:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "13090:2:6"
																		},
																		"nativeSrc": "13090:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13090:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13083:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13083:6:6"
																},
																"nativeSrc": "13083:40:6",
																"nodeType": "YulFunctionCall",
																"src": "13083:40:6"
															},
															"nativeSrc": "13080:60:6",
															"nodeType": "YulIf",
															"src": "13080:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13030:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13063:5:6",
														"nodeType": "YulTypedName",
														"src": "13063:5:6",
														"type": ""
													}
												],
												"src": "13030:116:6"
											},
											{
												"body": {
													"nativeSrc": "13212:77:6",
													"nodeType": "YulBlock",
													"src": "13212:77:6",
													"statements": [
														{
															"nativeSrc": "13222:22:6",
															"nodeType": "YulAssignment",
															"src": "13222:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13237:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13237:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13231:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "13231:5:6"
																},
																"nativeSrc": "13231:13:6",
																"nodeType": "YulFunctionCall",
																"src": "13231:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13222:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "13222:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13277:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "13277:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13253:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "13253:23:6"
																},
																"nativeSrc": "13253:30:6",
																"nodeType": "YulFunctionCall",
																"src": "13253:30:6"
															},
															"nativeSrc": "13253:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "13253:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "13152:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13190:6:6",
														"nodeType": "YulTypedName",
														"src": "13190:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13198:3:6",
														"nodeType": "YulTypedName",
														"src": "13198:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13206:5:6",
														"nodeType": "YulTypedName",
														"src": "13206:5:6",
														"type": ""
													}
												],
												"src": "13152:137:6"
											},
											{
												"body": {
													"nativeSrc": "13369:271:6",
													"nodeType": "YulBlock",
													"src": "13369:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "13415:83:6",
																"nodeType": "YulBlock",
																"src": "13415:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13417:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "13417:77:6"
																			},
																			"nativeSrc": "13417:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "13417:79:6"
																		},
																		"nativeSrc": "13417:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "13417:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13390:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "13390:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13399:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13399:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13386:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13386:3:6"
																		},
																		"nativeSrc": "13386:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13386:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13411:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13411:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13382:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13382:3:6"
																},
																"nativeSrc": "13382:32:6",
																"nodeType": "YulFunctionCall",
																"src": "13382:32:6"
															},
															"nativeSrc": "13379:119:6",
															"nodeType": "YulIf",
															"src": "13379:119:6"
														},
														{
															"nativeSrc": "13508:125:6",
															"nodeType": "YulBlock",
															"src": "13508:125:6",
															"statements": [
																{
																	"nativeSrc": "13523:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13523:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13537:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13537:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13527:6:6",
																			"nodeType": "YulTypedName",
																			"src": "13527:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13552:71:6",
																	"nodeType": "YulAssignment",
																	"src": "13552:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13595:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "13595:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13606:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "13606:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13591:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "13591:3:6"
																				},
																				"nativeSrc": "13591:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "13591:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13615:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "13615:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "13562:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "13562:28:6"
																		},
																		"nativeSrc": "13562:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13562:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13552:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "13552:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "13295:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13339:9:6",
														"nodeType": "YulTypedName",
														"src": "13339:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13350:7:6",
														"nodeType": "YulTypedName",
														"src": "13350:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13362:6:6",
														"nodeType": "YulTypedName",
														"src": "13362:6:6",
														"type": ""
													}
												],
												"src": "13295:345:6"
											},
											{
												"body": {
													"nativeSrc": "13772:206:6",
													"nodeType": "YulBlock",
													"src": "13772:206:6",
													"statements": [
														{
															"nativeSrc": "13782:26:6",
															"nodeType": "YulAssignment",
															"src": "13782:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13794:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13794:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13805:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13805:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13790:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13790:3:6"
																},
																"nativeSrc": "13790:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13790:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13782:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13782:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13862:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13862:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13875:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13875:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13886:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13886:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13871:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13871:3:6"
																		},
																		"nativeSrc": "13871:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13871:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13818:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13818:43:6"
																},
																"nativeSrc": "13818:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13818:71:6"
															},
															"nativeSrc": "13818:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13818:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13943:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13943:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13956:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13956:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13967:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13967:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13952:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13952:3:6"
																		},
																		"nativeSrc": "13952:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13952:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13899:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13899:43:6"
																},
																"nativeSrc": "13899:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13899:72:6"
															},
															"nativeSrc": "13899:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13899:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13646:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13736:9:6",
														"nodeType": "YulTypedName",
														"src": "13736:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13748:6:6",
														"nodeType": "YulTypedName",
														"src": "13748:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13756:6:6",
														"nodeType": "YulTypedName",
														"src": "13756:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13767:4:6",
														"nodeType": "YulTypedName",
														"src": "13767:4:6",
														"type": ""
													}
												],
												"src": "13646:332:6"
											},
											{
												"body": {
													"nativeSrc": "14029:149:6",
													"nodeType": "YulBlock",
													"src": "14029:149:6",
													"statements": [
														{
															"nativeSrc": "14039:25:6",
															"nodeType": "YulAssignment",
															"src": "14039:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14062:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14062:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14044:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "14044:17:6"
																},
																"nativeSrc": "14044:20:6",
																"nodeType": "YulFunctionCall",
																"src": "14044:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14039:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "14039:1:6"
																}
															]
														},
														{
															"nativeSrc": "14073:25:6",
															"nodeType": "YulAssignment",
															"src": "14073:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14096:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14096:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14078:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "14078:17:6"
																},
																"nativeSrc": "14078:20:6",
																"nodeType": "YulFunctionCall",
																"src": "14078:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14073:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "14073:1:6"
																}
															]
														},
														{
															"nativeSrc": "14107:17:6",
															"nodeType": "YulAssignment",
															"src": "14107:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14119:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14119:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14122:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14122:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14115:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14115:3:6"
																},
																"nativeSrc": "14115:9:6",
																"nodeType": "YulFunctionCall",
																"src": "14115:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14107:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14107:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14149:22:6",
																"nodeType": "YulBlock",
																"src": "14149:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14151:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "14151:16:6"
																			},
																			"nativeSrc": "14151:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "14151:18:6"
																		},
																		"nativeSrc": "14151:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "14151:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14140:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "14140:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14146:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14146:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14137:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "14137:2:6"
																},
																"nativeSrc": "14137:11:6",
																"nodeType": "YulFunctionCall",
																"src": "14137:11:6"
															},
															"nativeSrc": "14134:37:6",
															"nodeType": "YulIf",
															"src": "14134:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13984:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14015:1:6",
														"nodeType": "YulTypedName",
														"src": "14015:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14018:1:6",
														"nodeType": "YulTypedName",
														"src": "14018:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14024:4:6",
														"nodeType": "YulTypedName",
														"src": "14024:4:6",
														"type": ""
													}
												],
												"src": "13984:194:6"
											},
											{
												"body": {
													"nativeSrc": "14366:371:6",
													"nodeType": "YulBlock",
													"src": "14366:371:6",
													"statements": [
														{
															"nativeSrc": "14376:27:6",
															"nodeType": "YulAssignment",
															"src": "14376:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14388:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14388:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14399:3:6",
																		"nodeType": "YulLiteral",
																		"src": "14399:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14384:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14384:3:6"
																},
																"nativeSrc": "14384:19:6",
																"nodeType": "YulFunctionCall",
																"src": "14384:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14376:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14376:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14457:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14457:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14470:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14470:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14481:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14481:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14466:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14466:3:6"
																		},
																		"nativeSrc": "14466:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14466:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14413:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14413:43:6"
																},
																"nativeSrc": "14413:71:6",
																"nodeType": "YulFunctionCall",
																"src": "14413:71:6"
															},
															"nativeSrc": "14413:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "14413:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14538:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14538:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14551:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14551:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14562:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14562:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14547:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14547:3:6"
																		},
																		"nativeSrc": "14547:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14547:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14494:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14494:43:6"
																},
																"nativeSrc": "14494:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14494:72:6"
															},
															"nativeSrc": "14494:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14494:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14620:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14620:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14633:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14633:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14644:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14644:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14629:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14629:3:6"
																		},
																		"nativeSrc": "14629:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14629:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14576:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14576:43:6"
																},
																"nativeSrc": "14576:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14576:72:6"
															},
															"nativeSrc": "14576:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14576:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14702:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14702:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14715:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14715:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14726:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14726:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14711:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14711:3:6"
																		},
																		"nativeSrc": "14711:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14711:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14658:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14658:43:6"
																},
																"nativeSrc": "14658:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14658:72:6"
															},
															"nativeSrc": "14658:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14658:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14184:553:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14314:9:6",
														"nodeType": "YulTypedName",
														"src": "14314:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14326:6:6",
														"nodeType": "YulTypedName",
														"src": "14326:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14334:6:6",
														"nodeType": "YulTypedName",
														"src": "14334:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14342:6:6",
														"nodeType": "YulTypedName",
														"src": "14342:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14350:6:6",
														"nodeType": "YulTypedName",
														"src": "14350:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14361:4:6",
														"nodeType": "YulTypedName",
														"src": "14361:4:6",
														"type": ""
													}
												],
												"src": "14184:553:6"
											},
											{
												"body": {
													"nativeSrc": "14849:75:6",
													"nodeType": "YulBlock",
													"src": "14849:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14871:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "14871:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14879:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14879:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14867:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14867:3:6"
																		},
																		"nativeSrc": "14867:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14867:14:6"
																	},
																	{
																		"hexValue": "4c697175696469747920746f2072656d6f7665206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "14883:33:6",
																		"nodeType": "YulLiteral",
																		"src": "14883:33:6",
																		"type": "",
																		"value": "Liquidity to remove must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14860:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14860:6:6"
																},
																"nativeSrc": "14860:57:6",
																"nodeType": "YulFunctionCall",
																"src": "14860:57:6"
															},
															"nativeSrc": "14860:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "14860:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_a9c83bafacef6ef6297d2828f5147ae7f728142720de4d4634224a8e1ff199b0",
												"nativeSrc": "14743:181:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14841:6:6",
														"nodeType": "YulTypedName",
														"src": "14841:6:6",
														"type": ""
													}
												],
												"src": "14743:181:6"
											},
											{
												"body": {
													"nativeSrc": "15076:220:6",
													"nodeType": "YulBlock",
													"src": "15076:220:6",
													"statements": [
														{
															"nativeSrc": "15086:74:6",
															"nodeType": "YulAssignment",
															"src": "15086:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15152:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15152:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15157:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15157:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15093:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "15093:58:6"
																},
																"nativeSrc": "15093:67:6",
																"nodeType": "YulFunctionCall",
																"src": "15093:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15086:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15086:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15258:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15258:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a9c83bafacef6ef6297d2828f5147ae7f728142720de4d4634224a8e1ff199b0",
																	"nativeSrc": "15169:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "15169:88:6"
																},
																"nativeSrc": "15169:93:6",
																"nodeType": "YulFunctionCall",
																"src": "15169:93:6"
															},
															"nativeSrc": "15169:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "15169:93:6"
														},
														{
															"nativeSrc": "15271:19:6",
															"nodeType": "YulAssignment",
															"src": "15271:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15282:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15282:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15287:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15287:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15278:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15278:3:6"
																},
																"nativeSrc": "15278:12:6",
																"nodeType": "YulFunctionCall",
																"src": "15278:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15271:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15271:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a9c83bafacef6ef6297d2828f5147ae7f728142720de4d4634224a8e1ff199b0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14930:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15064:3:6",
														"nodeType": "YulTypedName",
														"src": "15064:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15072:3:6",
														"nodeType": "YulTypedName",
														"src": "15072:3:6",
														"type": ""
													}
												],
												"src": "14930:366:6"
											},
											{
												"body": {
													"nativeSrc": "15473:248:6",
													"nodeType": "YulBlock",
													"src": "15473:248:6",
													"statements": [
														{
															"nativeSrc": "15483:26:6",
															"nodeType": "YulAssignment",
															"src": "15483:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15495:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "15495:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15506:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15506:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15491:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15491:3:6"
																},
																"nativeSrc": "15491:18:6",
																"nodeType": "YulFunctionCall",
																"src": "15491:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15483:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15483:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15530:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15530:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15541:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15541:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15526:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15526:3:6"
																		},
																		"nativeSrc": "15526:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15526:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15549:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "15549:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15555:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15555:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15545:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15545:3:6"
																		},
																		"nativeSrc": "15545:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15545:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15519:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15519:6:6"
																},
																"nativeSrc": "15519:47:6",
																"nodeType": "YulFunctionCall",
																"src": "15519:47:6"
															},
															"nativeSrc": "15519:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "15519:47:6"
														},
														{
															"nativeSrc": "15575:139:6",
															"nodeType": "YulAssignment",
															"src": "15575:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15709:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15709:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a9c83bafacef6ef6297d2828f5147ae7f728142720de4d4634224a8e1ff199b0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15583:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "15583:124:6"
																},
																"nativeSrc": "15583:131:6",
																"nodeType": "YulFunctionCall",
																"src": "15583:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15575:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15575:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a9c83bafacef6ef6297d2828f5147ae7f728142720de4d4634224a8e1ff199b0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15302:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15453:9:6",
														"nodeType": "YulTypedName",
														"src": "15453:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15468:4:6",
														"nodeType": "YulTypedName",
														"src": "15468:4:6",
														"type": ""
													}
												],
												"src": "15302:419:6"
											},
											{
												"body": {
													"nativeSrc": "15833:73:6",
													"nodeType": "YulBlock",
													"src": "15833:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15855:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "15855:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15863:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15863:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15851:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15851:3:6"
																		},
																		"nativeSrc": "15851:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15851:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206c697175696469747920746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "15867:31:6",
																		"nodeType": "YulLiteral",
																		"src": "15867:31:6",
																		"type": "",
																		"value": "Insufficient liquidity tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15844:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15844:6:6"
																},
																"nativeSrc": "15844:55:6",
																"nodeType": "YulFunctionCall",
																"src": "15844:55:6"
															},
															"nativeSrc": "15844:55:6",
															"nodeType": "YulExpressionStatement",
															"src": "15844:55:6"
														}
													]
												},
												"name": "store_literal_in_memory_9c9101c444262e115f62faf22d3889bc6446fade1d31fd0a7de72247e37a28bb",
												"nativeSrc": "15727:179:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15825:6:6",
														"nodeType": "YulTypedName",
														"src": "15825:6:6",
														"type": ""
													}
												],
												"src": "15727:179:6"
											},
											{
												"body": {
													"nativeSrc": "16058:220:6",
													"nodeType": "YulBlock",
													"src": "16058:220:6",
													"statements": [
														{
															"nativeSrc": "16068:74:6",
															"nodeType": "YulAssignment",
															"src": "16068:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16134:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "16134:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16139:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16139:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16075:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "16075:58:6"
																},
																"nativeSrc": "16075:67:6",
																"nodeType": "YulFunctionCall",
																"src": "16075:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16068:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16068:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16240:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "16240:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9c9101c444262e115f62faf22d3889bc6446fade1d31fd0a7de72247e37a28bb",
																	"nativeSrc": "16151:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "16151:88:6"
																},
																"nativeSrc": "16151:93:6",
																"nodeType": "YulFunctionCall",
																"src": "16151:93:6"
															},
															"nativeSrc": "16151:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "16151:93:6"
														},
														{
															"nativeSrc": "16253:19:6",
															"nodeType": "YulAssignment",
															"src": "16253:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16264:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "16264:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16269:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16269:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16260:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16260:3:6"
																},
																"nativeSrc": "16260:12:6",
																"nodeType": "YulFunctionCall",
																"src": "16260:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16253:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16253:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9c9101c444262e115f62faf22d3889bc6446fade1d31fd0a7de72247e37a28bb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15912:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16046:3:6",
														"nodeType": "YulTypedName",
														"src": "16046:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16054:3:6",
														"nodeType": "YulTypedName",
														"src": "16054:3:6",
														"type": ""
													}
												],
												"src": "15912:366:6"
											},
											{
												"body": {
													"nativeSrc": "16455:248:6",
													"nodeType": "YulBlock",
													"src": "16455:248:6",
													"statements": [
														{
															"nativeSrc": "16465:26:6",
															"nodeType": "YulAssignment",
															"src": "16465:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16477:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "16477:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16488:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16488:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16473:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16473:3:6"
																},
																"nativeSrc": "16473:18:6",
																"nodeType": "YulFunctionCall",
																"src": "16473:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16465:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "16465:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16512:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "16512:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16523:1:6",
																				"nodeType": "YulLiteral",
																				"src": "16523:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16508:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16508:3:6"
																		},
																		"nativeSrc": "16508:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16508:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16531:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "16531:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16537:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "16537:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16527:3:6"
																		},
																		"nativeSrc": "16527:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16527:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16501:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16501:6:6"
																},
																"nativeSrc": "16501:47:6",
																"nodeType": "YulFunctionCall",
																"src": "16501:47:6"
															},
															"nativeSrc": "16501:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "16501:47:6"
														},
														{
															"nativeSrc": "16557:139:6",
															"nodeType": "YulAssignment",
															"src": "16557:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16691:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "16691:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9c9101c444262e115f62faf22d3889bc6446fade1d31fd0a7de72247e37a28bb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16565:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "16565:124:6"
																},
																"nativeSrc": "16565:131:6",
																"nodeType": "YulFunctionCall",
																"src": "16565:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16557:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "16557:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9c9101c444262e115f62faf22d3889bc6446fade1d31fd0a7de72247e37a28bb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16284:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16435:9:6",
														"nodeType": "YulTypedName",
														"src": "16435:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16450:4:6",
														"nodeType": "YulTypedName",
														"src": "16450:4:6",
														"type": ""
													}
												],
												"src": "16284:419:6"
											},
											{
												"body": {
													"nativeSrc": "16815:68:6",
													"nodeType": "YulBlock",
													"src": "16815:68:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16837:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "16837:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16845:1:6",
																				"nodeType": "YulLiteral",
																				"src": "16845:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16833:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16833:3:6"
																		},
																		"nativeSrc": "16833:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16833:14:6"
																	},
																	{
																		"hexValue": "4e6f206c697175696469747920696e2074686520706f6f6c",
																		"kind": "string",
																		"nativeSrc": "16849:26:6",
																		"nodeType": "YulLiteral",
																		"src": "16849:26:6",
																		"type": "",
																		"value": "No liquidity in the pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16826:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16826:6:6"
																},
																"nativeSrc": "16826:50:6",
																"nodeType": "YulFunctionCall",
																"src": "16826:50:6"
															},
															"nativeSrc": "16826:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "16826:50:6"
														}
													]
												},
												"name": "store_literal_in_memory_cfe0029f7857ad1c3481fab3a86ac656b33b4cb8a7347f26a2f197d2cca210be",
												"nativeSrc": "16709:174:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16807:6:6",
														"nodeType": "YulTypedName",
														"src": "16807:6:6",
														"type": ""
													}
												],
												"src": "16709:174:6"
											},
											{
												"body": {
													"nativeSrc": "17035:220:6",
													"nodeType": "YulBlock",
													"src": "17035:220:6",
													"statements": [
														{
															"nativeSrc": "17045:74:6",
															"nodeType": "YulAssignment",
															"src": "17045:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17111:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "17111:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17116:2:6",
																		"nodeType": "YulLiteral",
																		"src": "17116:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17052:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "17052:58:6"
																},
																"nativeSrc": "17052:67:6",
																"nodeType": "YulFunctionCall",
																"src": "17052:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17045:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17045:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17217:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "17217:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cfe0029f7857ad1c3481fab3a86ac656b33b4cb8a7347f26a2f197d2cca210be",
																	"nativeSrc": "17128:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "17128:88:6"
																},
																"nativeSrc": "17128:93:6",
																"nodeType": "YulFunctionCall",
																"src": "17128:93:6"
															},
															"nativeSrc": "17128:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "17128:93:6"
														},
														{
															"nativeSrc": "17230:19:6",
															"nodeType": "YulAssignment",
															"src": "17230:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17241:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "17241:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17246:2:6",
																		"nodeType": "YulLiteral",
																		"src": "17246:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17237:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17237:3:6"
																},
																"nativeSrc": "17237:12:6",
																"nodeType": "YulFunctionCall",
																"src": "17237:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17230:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17230:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cfe0029f7857ad1c3481fab3a86ac656b33b4cb8a7347f26a2f197d2cca210be_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16889:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17023:3:6",
														"nodeType": "YulTypedName",
														"src": "17023:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17031:3:6",
														"nodeType": "YulTypedName",
														"src": "17031:3:6",
														"type": ""
													}
												],
												"src": "16889:366:6"
											},
											{
												"body": {
													"nativeSrc": "17432:248:6",
													"nodeType": "YulBlock",
													"src": "17432:248:6",
													"statements": [
														{
															"nativeSrc": "17442:26:6",
															"nodeType": "YulAssignment",
															"src": "17442:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17454:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "17454:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17465:2:6",
																		"nodeType": "YulLiteral",
																		"src": "17465:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17450:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17450:3:6"
																},
																"nativeSrc": "17450:18:6",
																"nodeType": "YulFunctionCall",
																"src": "17450:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17442:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "17442:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17489:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17489:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17500:1:6",
																				"nodeType": "YulLiteral",
																				"src": "17500:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17485:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17485:3:6"
																		},
																		"nativeSrc": "17485:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17485:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17508:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "17508:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17514:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17514:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17504:3:6"
																		},
																		"nativeSrc": "17504:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17504:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17478:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17478:6:6"
																},
																"nativeSrc": "17478:47:6",
																"nodeType": "YulFunctionCall",
																"src": "17478:47:6"
															},
															"nativeSrc": "17478:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "17478:47:6"
														},
														{
															"nativeSrc": "17534:139:6",
															"nodeType": "YulAssignment",
															"src": "17534:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17668:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "17668:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cfe0029f7857ad1c3481fab3a86ac656b33b4cb8a7347f26a2f197d2cca210be_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17542:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "17542:124:6"
																},
																"nativeSrc": "17542:131:6",
																"nodeType": "YulFunctionCall",
																"src": "17542:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17534:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "17534:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cfe0029f7857ad1c3481fab3a86ac656b33b4cb8a7347f26a2f197d2cca210be__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17261:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17412:9:6",
														"nodeType": "YulTypedName",
														"src": "17412:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17427:4:6",
														"nodeType": "YulTypedName",
														"src": "17427:4:6",
														"type": ""
													}
												],
												"src": "17261:419:6"
											},
											{
												"body": {
													"nativeSrc": "17792:126:6",
													"nodeType": "YulBlock",
													"src": "17792:126:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17814:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "17814:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17822:1:6",
																				"nodeType": "YulLiteral",
																				"src": "17822:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17810:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17810:3:6"
																		},
																		"nativeSrc": "17810:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17810:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420726573657276657320666f7220726571756573",
																		"kind": "string",
																		"nativeSrc": "17826:34:6",
																		"nodeType": "YulLiteral",
																		"src": "17826:34:6",
																		"type": "",
																		"value": "Insufficient reserves for reques"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17803:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17803:6:6"
																},
																"nativeSrc": "17803:58:6",
																"nodeType": "YulFunctionCall",
																"src": "17803:58:6"
															},
															"nativeSrc": "17803:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "17803:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17882:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "17882:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17890:2:6",
																				"nodeType": "YulLiteral",
																				"src": "17890:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17878:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17878:3:6"
																		},
																		"nativeSrc": "17878:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17878:15:6"
																	},
																	{
																		"hexValue": "746564206c6971756964697479",
																		"kind": "string",
																		"nativeSrc": "17895:15:6",
																		"nodeType": "YulLiteral",
																		"src": "17895:15:6",
																		"type": "",
																		"value": "ted liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17871:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17871:6:6"
																},
																"nativeSrc": "17871:40:6",
																"nodeType": "YulFunctionCall",
																"src": "17871:40:6"
															},
															"nativeSrc": "17871:40:6",
															"nodeType": "YulExpressionStatement",
															"src": "17871:40:6"
														}
													]
												},
												"name": "store_literal_in_memory_b45f5068ac78a5208b0aaf17980c0e44d31143f89240a8f501ef739f25f76130",
												"nativeSrc": "17686:232:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17784:6:6",
														"nodeType": "YulTypedName",
														"src": "17784:6:6",
														"type": ""
													}
												],
												"src": "17686:232:6"
											},
											{
												"body": {
													"nativeSrc": "18070:220:6",
													"nodeType": "YulBlock",
													"src": "18070:220:6",
													"statements": [
														{
															"nativeSrc": "18080:74:6",
															"nodeType": "YulAssignment",
															"src": "18080:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18146:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18146:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18151:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18151:2:6",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18087:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "18087:58:6"
																},
																"nativeSrc": "18087:67:6",
																"nodeType": "YulFunctionCall",
																"src": "18087:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18080:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18080:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18252:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18252:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b45f5068ac78a5208b0aaf17980c0e44d31143f89240a8f501ef739f25f76130",
																	"nativeSrc": "18163:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "18163:88:6"
																},
																"nativeSrc": "18163:93:6",
																"nodeType": "YulFunctionCall",
																"src": "18163:93:6"
															},
															"nativeSrc": "18163:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "18163:93:6"
														},
														{
															"nativeSrc": "18265:19:6",
															"nodeType": "YulAssignment",
															"src": "18265:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18276:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18276:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18281:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18281:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18272:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18272:3:6"
																},
																"nativeSrc": "18272:12:6",
																"nodeType": "YulFunctionCall",
																"src": "18272:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18265:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18265:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b45f5068ac78a5208b0aaf17980c0e44d31143f89240a8f501ef739f25f76130_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17924:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18058:3:6",
														"nodeType": "YulTypedName",
														"src": "18058:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18066:3:6",
														"nodeType": "YulTypedName",
														"src": "18066:3:6",
														"type": ""
													}
												],
												"src": "17924:366:6"
											},
											{
												"body": {
													"nativeSrc": "18467:248:6",
													"nodeType": "YulBlock",
													"src": "18467:248:6",
													"statements": [
														{
															"nativeSrc": "18477:26:6",
															"nodeType": "YulAssignment",
															"src": "18477:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18489:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "18489:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18500:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18500:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18485:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18485:3:6"
																},
																"nativeSrc": "18485:18:6",
																"nodeType": "YulFunctionCall",
																"src": "18485:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18477:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "18477:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18524:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18524:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18535:1:6",
																				"nodeType": "YulLiteral",
																				"src": "18535:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18520:3:6"
																		},
																		"nativeSrc": "18520:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18520:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18543:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "18543:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18549:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18549:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18539:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18539:3:6"
																		},
																		"nativeSrc": "18539:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18539:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18513:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "18513:6:6"
																},
																"nativeSrc": "18513:47:6",
																"nodeType": "YulFunctionCall",
																"src": "18513:47:6"
															},
															"nativeSrc": "18513:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "18513:47:6"
														},
														{
															"nativeSrc": "18569:139:6",
															"nodeType": "YulAssignment",
															"src": "18569:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18703:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "18703:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b45f5068ac78a5208b0aaf17980c0e44d31143f89240a8f501ef739f25f76130_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18577:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "18577:124:6"
																},
																"nativeSrc": "18577:131:6",
																"nodeType": "YulFunctionCall",
																"src": "18577:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18569:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "18569:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b45f5068ac78a5208b0aaf17980c0e44d31143f89240a8f501ef739f25f76130__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18296:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18447:9:6",
														"nodeType": "YulTypedName",
														"src": "18447:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18462:4:6",
														"nodeType": "YulTypedName",
														"src": "18462:4:6",
														"type": ""
													}
												],
												"src": "18296:419:6"
											},
											{
												"body": {
													"nativeSrc": "18875:288:6",
													"nodeType": "YulBlock",
													"src": "18875:288:6",
													"statements": [
														{
															"nativeSrc": "18885:26:6",
															"nodeType": "YulAssignment",
															"src": "18885:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18897:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "18897:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18908:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18908:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18893:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18893:3:6"
																},
																"nativeSrc": "18893:18:6",
																"nodeType": "YulFunctionCall",
																"src": "18893:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18885:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "18885:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18965:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "18965:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18978:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18978:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18989:1:6",
																				"nodeType": "YulLiteral",
																				"src": "18989:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18974:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18974:3:6"
																		},
																		"nativeSrc": "18974:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18974:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18921:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "18921:43:6"
																},
																"nativeSrc": "18921:71:6",
																"nodeType": "YulFunctionCall",
																"src": "18921:71:6"
															},
															"nativeSrc": "18921:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "18921:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19046:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "19046:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19059:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19059:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19070:2:6",
																				"nodeType": "YulLiteral",
																				"src": "19070:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19055:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19055:3:6"
																		},
																		"nativeSrc": "19055:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19055:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19002:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "19002:43:6"
																},
																"nativeSrc": "19002:72:6",
																"nodeType": "YulFunctionCall",
																"src": "19002:72:6"
															},
															"nativeSrc": "19002:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "19002:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19128:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "19128:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19141:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19141:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19152:2:6",
																				"nodeType": "YulLiteral",
																				"src": "19152:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19137:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19137:3:6"
																		},
																		"nativeSrc": "19137:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19137:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19084:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "19084:43:6"
																},
																"nativeSrc": "19084:72:6",
																"nodeType": "YulFunctionCall",
																"src": "19084:72:6"
															},
															"nativeSrc": "19084:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "19084:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18721:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18831:9:6",
														"nodeType": "YulTypedName",
														"src": "18831:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18843:6:6",
														"nodeType": "YulTypedName",
														"src": "18843:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18851:6:6",
														"nodeType": "YulTypedName",
														"src": "18851:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18859:6:6",
														"nodeType": "YulTypedName",
														"src": "18859:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18870:4:6",
														"nodeType": "YulTypedName",
														"src": "18870:4:6",
														"type": ""
													}
												],
												"src": "18721:442:6"
											},
											{
												"body": {
													"nativeSrc": "19275:63:6",
													"nodeType": "YulBlock",
													"src": "19275:63:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19297:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "19297:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19305:1:6",
																				"nodeType": "YulLiteral",
																				"src": "19305:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19293:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19293:3:6"
																		},
																		"nativeSrc": "19293:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19293:14:6"
																	},
																	{
																		"hexValue": "416d6f756e7473206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "19309:21:6",
																		"nodeType": "YulLiteral",
																		"src": "19309:21:6",
																		"type": "",
																		"value": "Amounts must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19286:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "19286:6:6"
																},
																"nativeSrc": "19286:45:6",
																"nodeType": "YulFunctionCall",
																"src": "19286:45:6"
															},
															"nativeSrc": "19286:45:6",
															"nodeType": "YulExpressionStatement",
															"src": "19286:45:6"
														}
													]
												},
												"name": "store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0",
												"nativeSrc": "19169:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19267:6:6",
														"nodeType": "YulTypedName",
														"src": "19267:6:6",
														"type": ""
													}
												],
												"src": "19169:169:6"
											},
											{
												"body": {
													"nativeSrc": "19490:220:6",
													"nodeType": "YulBlock",
													"src": "19490:220:6",
													"statements": [
														{
															"nativeSrc": "19500:74:6",
															"nodeType": "YulAssignment",
															"src": "19500:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19566:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "19566:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19571:2:6",
																		"nodeType": "YulLiteral",
																		"src": "19571:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19507:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "19507:58:6"
																},
																"nativeSrc": "19507:67:6",
																"nodeType": "YulFunctionCall",
																"src": "19507:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "19500:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19672:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "19672:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0",
																	"nativeSrc": "19583:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "19583:88:6"
																},
																"nativeSrc": "19583:93:6",
																"nodeType": "YulFunctionCall",
																"src": "19583:93:6"
															},
															"nativeSrc": "19583:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "19583:93:6"
														},
														{
															"nativeSrc": "19685:19:6",
															"nodeType": "YulAssignment",
															"src": "19685:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19696:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "19696:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19701:2:6",
																		"nodeType": "YulLiteral",
																		"src": "19701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19692:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "19692:3:6"
																},
																"nativeSrc": "19692:12:6",
																"nodeType": "YulFunctionCall",
																"src": "19692:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19685:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "19685:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19344:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19478:3:6",
														"nodeType": "YulTypedName",
														"src": "19478:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19486:3:6",
														"nodeType": "YulTypedName",
														"src": "19486:3:6",
														"type": ""
													}
												],
												"src": "19344:366:6"
											},
											{
												"body": {
													"nativeSrc": "19887:248:6",
													"nodeType": "YulBlock",
													"src": "19887:248:6",
													"statements": [
														{
															"nativeSrc": "19897:26:6",
															"nodeType": "YulAssignment",
															"src": "19897:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19909:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "19909:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19920:2:6",
																		"nodeType": "YulLiteral",
																		"src": "19920:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19905:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "19905:3:6"
																},
																"nativeSrc": "19905:18:6",
																"nodeType": "YulFunctionCall",
																"src": "19905:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19897:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "19897:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19944:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19944:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19955:1:6",
																				"nodeType": "YulLiteral",
																				"src": "19955:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19940:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19940:3:6"
																		},
																		"nativeSrc": "19940:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19940:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19963:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "19963:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19969:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19969:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19959:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19959:3:6"
																		},
																		"nativeSrc": "19959:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19959:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19933:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "19933:6:6"
																},
																"nativeSrc": "19933:47:6",
																"nodeType": "YulFunctionCall",
																"src": "19933:47:6"
															},
															"nativeSrc": "19933:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "19933:47:6"
														},
														{
															"nativeSrc": "19989:139:6",
															"nodeType": "YulAssignment",
															"src": "19989:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20123:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "20123:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19997:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "19997:124:6"
																},
																"nativeSrc": "19997:131:6",
																"nodeType": "YulFunctionCall",
																"src": "19997:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19989:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "19989:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19716:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19867:9:6",
														"nodeType": "YulTypedName",
														"src": "19867:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19882:4:6",
														"nodeType": "YulTypedName",
														"src": "19882:4:6",
														"type": ""
													}
												],
												"src": "19716:419:6"
											},
											{
												"body": {
													"nativeSrc": "20295:288:6",
													"nodeType": "YulBlock",
													"src": "20295:288:6",
													"statements": [
														{
															"nativeSrc": "20305:26:6",
															"nodeType": "YulAssignment",
															"src": "20305:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20317:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "20317:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20328:2:6",
																		"nodeType": "YulLiteral",
																		"src": "20328:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20313:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "20313:3:6"
																},
																"nativeSrc": "20313:18:6",
																"nodeType": "YulFunctionCall",
																"src": "20313:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20305:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "20305:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20385:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "20385:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20398:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "20398:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20409:1:6",
																				"nodeType": "YulLiteral",
																				"src": "20409:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20394:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "20394:3:6"
																		},
																		"nativeSrc": "20394:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "20394:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20341:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "20341:43:6"
																},
																"nativeSrc": "20341:71:6",
																"nodeType": "YulFunctionCall",
																"src": "20341:71:6"
															},
															"nativeSrc": "20341:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "20341:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20466:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "20466:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20479:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "20479:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20490:2:6",
																				"nodeType": "YulLiteral",
																				"src": "20490:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20475:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "20475:3:6"
																		},
																		"nativeSrc": "20475:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "20475:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20422:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "20422:43:6"
																},
																"nativeSrc": "20422:72:6",
																"nodeType": "YulFunctionCall",
																"src": "20422:72:6"
															},
															"nativeSrc": "20422:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "20422:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20548:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "20548:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20561:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "20561:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20572:2:6",
																				"nodeType": "YulLiteral",
																				"src": "20572:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20557:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "20557:3:6"
																		},
																		"nativeSrc": "20557:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "20557:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20504:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "20504:43:6"
																},
																"nativeSrc": "20504:72:6",
																"nodeType": "YulFunctionCall",
																"src": "20504:72:6"
															},
															"nativeSrc": "20504:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "20504:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20141:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20251:9:6",
														"nodeType": "YulTypedName",
														"src": "20251:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20263:6:6",
														"nodeType": "YulTypedName",
														"src": "20263:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20271:6:6",
														"nodeType": "YulTypedName",
														"src": "20271:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20279:6:6",
														"nodeType": "YulTypedName",
														"src": "20279:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20290:4:6",
														"nodeType": "YulTypedName",
														"src": "20290:4:6",
														"type": ""
													}
												],
												"src": "20141:442:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$729_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$729_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient reserves\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Slippage too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_a9c83bafacef6ef6297d2828f5147ae7f728142720de4d4634224a8e1ff199b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Liquidity to remove must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_a9c83bafacef6ef6297d2828f5147ae7f728142720de4d4634224a8e1ff199b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_a9c83bafacef6ef6297d2828f5147ae7f728142720de4d4634224a8e1ff199b0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a9c83bafacef6ef6297d2828f5147ae7f728142720de4d4634224a8e1ff199b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a9c83bafacef6ef6297d2828f5147ae7f728142720de4d4634224a8e1ff199b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9c9101c444262e115f62faf22d3889bc6446fade1d31fd0a7de72247e37a28bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient liquidity tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_9c9101c444262e115f62faf22d3889bc6446fade1d31fd0a7de72247e37a28bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_9c9101c444262e115f62faf22d3889bc6446fade1d31fd0a7de72247e37a28bb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9c9101c444262e115f62faf22d3889bc6446fade1d31fd0a7de72247e37a28bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9c9101c444262e115f62faf22d3889bc6446fade1d31fd0a7de72247e37a28bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cfe0029f7857ad1c3481fab3a86ac656b33b4cb8a7347f26a2f197d2cca210be(memPtr) {\n\n        mstore(add(memPtr, 0), \"No liquidity in the pool\")\n\n    }\n\n    function abi_encode_t_stringliteral_cfe0029f7857ad1c3481fab3a86ac656b33b4cb8a7347f26a2f197d2cca210be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_cfe0029f7857ad1c3481fab3a86ac656b33b4cb8a7347f26a2f197d2cca210be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cfe0029f7857ad1c3481fab3a86ac656b33b4cb8a7347f26a2f197d2cca210be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cfe0029f7857ad1c3481fab3a86ac656b33b4cb8a7347f26a2f197d2cca210be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b45f5068ac78a5208b0aaf17980c0e44d31143f89240a8f501ef739f25f76130(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient reserves for reques\")\n\n        mstore(add(memPtr, 32), \"ted liquidity\")\n\n    }\n\n    function abi_encode_t_stringliteral_b45f5068ac78a5208b0aaf17980c0e44d31143f89240a8f501ef739f25f76130_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_b45f5068ac78a5208b0aaf17980c0e44d31143f89240a8f501ef739f25f76130(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b45f5068ac78a5208b0aaf17980c0e44d31143f89240a8f501ef739f25f76130__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b45f5068ac78a5208b0aaf17980c0e44d31143f89240a8f501ef739f25f76130_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amounts must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011f575f3560e01c80635f64b55b116100ab5780639cd441da1161006f5780639cd441da1461030f578063a9059cbb1461032b578063c915cc241461035b578063dc5fa6c514610377578063dd62ed3e146103955761011f565b80635f64b55b1461025457806370a08231146102725780638da5cb5b146102a257806395d89b41146102c05780639c8f9f23146102de5761011f565b8063140e6247116100f2578063140e6247146101ae57806318160ddd146101ca57806319e36f3b146101e857806323b872dd14610206578063313ce567146102365761011f565b806306fdde03146101235780630902f1ac14610141578063095ea7b3146101605780630fc63d1014610190575b5f80fd5b61012b6103c5565b6040516101389190611a41565b60405180910390f35b610149610455565b604051610157929190611a79565b60405180910390f35b61017a60048036038101906101759190611b28565b610465565b6040516101879190611b80565b60405180910390f35b610198610487565b6040516101a59190611bf4565b60405180910390f35b6101c860048036038101906101c39190611c0d565b6104ac565b005b6101d26107d1565b6040516101df9190611c4b565b60405180910390f35b6101f06107da565b6040516101fd9190611c4b565b60405180910390f35b610220600480360381019061021b9190611c64565b6107e0565b60405161022d9190611b80565b60405180910390f35b61023e61080e565b60405161024b9190611ccf565b60405180910390f35b61025c610816565b6040516102699190611bf4565b60405180910390f35b61028c60048036038101906102879190611ce8565b61083b565b6040516102999190611c4b565b60405180910390f35b6102aa610880565b6040516102b79190611d22565b60405180910390f35b6102c86108a5565b6040516102d59190611a41565b60405180910390f35b6102f860048036038101906102f39190611d3b565b610935565b604051610306929190611a79565b60405180910390f35b61032960048036038101906103249190611c0d565b610c60565b005b61034560048036038101906103409190611b28565b610ef1565b6040516103529190611b80565b60405180910390f35b61037560048036038101906103709190611c0d565b610f13565b005b61037f611238565b60405161038c9190611c4b565b60405180910390f35b6103af60048036038101906103aa9190611d66565b61123e565b6040516103bc9190611c4b565b60405180910390f35b6060600380546103d490611dd1565b80601f016020809104026020016040519081016040528092919081815260200182805461040090611dd1565b801561044b5780601f106104225761010080835404028352916020019161044b565b820191905f5260205f20905b81548152906001019060200180831161042e57829003601f168201915b5050505050905090565b5f80600754600854915091509091565b5f8061046f6112c0565b905061047c8185856112c7565b600191505092915050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f82116104ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e590611e4b565b60405180910390fd5b5f60075411801561050057505f600854115b61053f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053690611eb3565b60405180910390fd5b5f6103e86103e5846105519190611efe565b61055b9190611f6c565b90505f8160075461056c9190611f9c565b8260085461057a9190611efe565b6105849190611f6c565b9050828110156105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c090612019565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161062793929190612037565b6020604051808303815f875af1158015610643573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106679190612096565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106c49291906120c1565b6020604051808303815f875af11580156106e0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107049190612096565b508160075f8282546107169190611f9c565b925050819055508060085f82825461072e91906120e8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f631fb37dba9bbcb8b2f3be2d669e365ae9f1bd850cc57dfe8b7ccd7d979a2bba60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040516107c3949392919061211b565b60405180910390a250505050565b5f600254905090565b60085481565b5f806107ea6112c0565b90506107f78582856112d9565b61080285858561136c565b60019150509392505050565b5f6012905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600480546108b490611dd1565b80601f01602080910402602001604051908101604052809291908181526020018280546108e090611dd1565b801561092b5780601f106109025761010080835404028352916020019161092b565b820191905f5260205f20905b81548152906001019060200180831161090e57829003601f168201915b5050505050905090565b5f805f8311610979576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610970906121a8565b60405180910390fd5b826109833361083b565b10156109c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bb90612210565b60405180910390fd5b5f6109cd6107d1565b90505f8111610a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0890612278565b60405180910390fd5b8060075485610a209190611efe565b610a2a9190611f6c565b92508060085485610a3b9190611efe565b610a459190611f6c565b91505f83118015610a5557505f82115b610a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8b90612306565b60405180910390fd5b8260075f828254610aa591906120e8565b925050819055508160085f828254610abd91906120e8565b92505081905550610ace338561145c565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610b2a9291906120c1565b6020604051808303815f875af1158015610b46573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b6a9190612096565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610bc79291906120c1565b6020604051808303815f875af1158015610be3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c079190612096565b503373ffffffffffffffffffffffffffffffffffffffff167f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d848487604051610c5293929190612324565b60405180910390a250915091565b5f82118015610c6e57505f81115b610cad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca4906123a3565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610d0b93929190612037565b6020604051808303815f875af1158015610d27573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d4b9190612096565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610daa93929190612037565b6020604051808303815f875af1158015610dc6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dea9190612096565b505f80610df56107d1565b03610e1557610e0e8284610e099190611efe565b6114db565b9050610e60565b610e5d600754610e236107d1565b85610e2e9190611efe565b610e389190611f6c565b600854610e436107d1565b85610e4e9190611efe565b610e589190611f6c565b611552565b90505b610e6a338261156a565b8260075f828254610e7b9190611f9c565b925050819055508160085f828254610e939190611f9c565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e848484604051610ee493929190612324565b60405180910390a2505050565b5f80610efb6112c0565b9050610f0881858561136c565b600191505092915050565b5f8211610f55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4c90611e4b565b60405180910390fd5b5f600754118015610f6757505f600854115b610fa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9d90611eb3565b60405180910390fd5b5f6103e86103e584610fb89190611efe565b610fc29190611f6c565b90505f81600854610fd39190611f9c565b82600754610fe19190611efe565b610feb9190611f6c565b905082811015611030576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102790612019565b60405180910390fd5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161108e93929190612037565b6020604051808303815f875af11580156110aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110ce9190612096565b5060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161112b9291906120c1565b6020604051808303815f875af1158015611147573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061116b9190612096565b508160085f82825461117d9190611f9c565b925050819055508060075f82825461119591906120e8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f631fb37dba9bbcb8b2f3be2d669e365ae9f1bd850cc57dfe8b7ccd7d979a2bba60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560405161122a949392919061211b565b60405180910390a250505050565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6112d483838360016115e9565b505050565b5f6112e4848461123e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156113665781811015611357578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161134e939291906123c1565b60405180910390fd5b61136584848484035f6115e9565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113dc575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113d39190611d22565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361144c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114439190611d22565b60405180910390fd5b6114578383836117b8565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114cc575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114c39190611d22565b60405180910390fd5b6114d7825f836117b8565b5050565b5f6003821115611540578190505f60016002846114f89190611f6c565b6115029190611f9c565b90505b8181101561153a57809150600281828561151f9190611f6c565b6115299190611f9c565b6115339190611f6c565b9050611505565b5061154d565b5f821461154c57600190505b5b919050565b5f8183106115605781611562565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115da575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115d19190611d22565b60405180910390fd5b6115e55f83836117b8565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611659575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016116509190611d22565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116c9575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016116c09190611d22565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156117b2578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117a99190611c4b565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611808578060025f8282546117fc9190611f9c565b925050819055506118d6565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611891578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611888939291906123c1565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361191d578060025f8282540392505081905550611967565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119c49190611c4b565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611a13826119d1565b611a1d81856119db565b9350611a2d8185602086016119eb565b611a36816119f9565b840191505092915050565b5f6020820190508181035f830152611a598184611a09565b905092915050565b5f819050919050565b611a7381611a61565b82525050565b5f604082019050611a8c5f830185611a6a565b611a996020830184611a6a565b9392505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611acd82611aa4565b9050919050565b611add81611ac3565b8114611ae7575f80fd5b50565b5f81359050611af881611ad4565b92915050565b611b0781611a61565b8114611b11575f80fd5b50565b5f81359050611b2281611afe565b92915050565b5f8060408385031215611b3e57611b3d611aa0565b5b5f611b4b85828601611aea565b9250506020611b5c85828601611b14565b9150509250929050565b5f8115159050919050565b611b7a81611b66565b82525050565b5f602082019050611b935f830184611b71565b92915050565b5f819050919050565b5f611bbc611bb7611bb284611aa4565b611b99565b611aa4565b9050919050565b5f611bcd82611ba2565b9050919050565b5f611bde82611bc3565b9050919050565b611bee81611bd4565b82525050565b5f602082019050611c075f830184611be5565b92915050565b5f8060408385031215611c2357611c22611aa0565b5b5f611c3085828601611b14565b9250506020611c4185828601611b14565b9150509250929050565b5f602082019050611c5e5f830184611a6a565b92915050565b5f805f60608486031215611c7b57611c7a611aa0565b5b5f611c8886828701611aea565b9350506020611c9986828701611aea565b9250506040611caa86828701611b14565b9150509250925092565b5f60ff82169050919050565b611cc981611cb4565b82525050565b5f602082019050611ce25f830184611cc0565b92915050565b5f60208284031215611cfd57611cfc611aa0565b5b5f611d0a84828501611aea565b91505092915050565b611d1c81611ac3565b82525050565b5f602082019050611d355f830184611d13565b92915050565b5f60208284031215611d5057611d4f611aa0565b5b5f611d5d84828501611b14565b91505092915050565b5f8060408385031215611d7c57611d7b611aa0565b5b5f611d8985828601611aea565b9250506020611d9a85828601611aea565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611de857607f821691505b602082108103611dfb57611dfa611da4565b5b50919050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f611e356012836119db565b9150611e4082611e01565b602082019050919050565b5f6020820190508181035f830152611e6281611e29565b9050919050565b7f496e73756666696369656e7420726573657276657300000000000000000000005f82015250565b5f611e9d6015836119db565b9150611ea882611e69565b602082019050919050565b5f6020820190508181035f830152611eca81611e91565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f0882611a61565b9150611f1383611a61565b9250828202611f2181611a61565b91508282048414831517611f3857611f37611ed1565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f7682611a61565b9150611f8183611a61565b925082611f9157611f90611f3f565b5b828204905092915050565b5f611fa682611a61565b9150611fb183611a61565b9250828201905080821115611fc957611fc8611ed1565b5b92915050565b7f536c69707061676520746f6f20686967680000000000000000000000000000005f82015250565b5f6120036011836119db565b915061200e82611fcf565b602082019050919050565b5f6020820190508181035f83015261203081611ff7565b9050919050565b5f60608201905061204a5f830186611d13565b6120576020830185611d13565b6120646040830184611a6a565b949350505050565b61207581611b66565b811461207f575f80fd5b50565b5f815190506120908161206c565b92915050565b5f602082840312156120ab576120aa611aa0565b5b5f6120b884828501612082565b91505092915050565b5f6040820190506120d45f830185611d13565b6120e16020830184611a6a565b9392505050565b5f6120f282611a61565b91506120fd83611a61565b925082820390508181111561211557612114611ed1565b5b92915050565b5f60808201905061212e5f830187611d13565b61213b6020830186611a6a565b6121486040830185611d13565b6121556060830184611a6a565b95945050505050565b7f4c697175696469747920746f2072656d6f7665206d757374206265203e2030005f82015250565b5f612192601f836119db565b915061219d8261215e565b602082019050919050565b5f6020820190508181035f8301526121bf81612186565b9050919050565b7f496e73756666696369656e74206c697175696469747920746f6b656e730000005f82015250565b5f6121fa601d836119db565b9150612205826121c6565b602082019050919050565b5f6020820190508181035f830152612227816121ee565b9050919050565b7f4e6f206c697175696469747920696e2074686520706f6f6c00000000000000005f82015250565b5f6122626018836119db565b915061226d8261222e565b602082019050919050565b5f6020820190508181035f83015261228f81612256565b9050919050565b7f496e73756666696369656e7420726573657276657320666f72207265717565735f8201527f746564206c697175696469747900000000000000000000000000000000000000602082015250565b5f6122f0602d836119db565b91506122fb82612296565b604082019050919050565b5f6020820190508181035f83015261231d816122e4565b9050919050565b5f6060820190506123375f830186611a6a565b6123446020830185611a6a565b6123516040830184611a6a565b949350505050565b7f416d6f756e7473206d757374206265203e2030000000000000000000000000005f82015250565b5f61238d6013836119db565b915061239882612359565b602082019050919050565b5f6020820190508181035f8301526123ba81612381565b9050919050565b5f6060820190506123d45f830186611d13565b6123e16020830185611a6a565b6123ee6040830184611a6a565b94935050505056fea2646970667358221220346cedd78c8de6014a09f251cc8f0f95cd4d2bbc32d49f5c984ac0aad817508a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F64B55B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x9CD441DA GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xC915CC24 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x395 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x2DE JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x140E6247 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x140E6247 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x236 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x190 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP3 SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D2 PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x80E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1CE8 JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH2 0x880 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP3 SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0xF13 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37F PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1D66 JUMP JUMPDEST PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x400 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x44B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x422 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x44B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x46F PUSH2 0x12C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x47C DUP2 DUP6 DUP6 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E5 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 SLOAD GT DUP1 ISZERO PUSH2 0x500 JUMPI POP PUSH0 PUSH1 0x8 SLOAD GT JUMPDEST PUSH2 0x53F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x7 SLOAD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST DUP3 PUSH1 0x8 SLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C0 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x627 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x643 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C4 SWAP3 SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x704 SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x72E SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x631FB37DBA9BBCB8B2F3BE2D669E365AE9F1BD850CC57DFE8B7CCD7D979A2BBA PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x7C3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7EA PUSH2 0x12C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x7F7 DUP6 DUP3 DUP6 PUSH2 0x12D9 JUMP JUMPDEST PUSH2 0x802 DUP6 DUP6 DUP6 PUSH2 0x136C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8B4 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E0 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x92B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x902 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 GT PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x970 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x983 CALLER PUSH2 0x83B JUMP JUMPDEST LT ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BB SWAP1 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x9CD PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA08 SWAP1 PUSH2 0x2278 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 SLOAD DUP6 PUSH2 0xA20 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0xA2A SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x8 SLOAD DUP6 PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST SWAP2 POP PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0xA55 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8B SWAP1 PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xABD SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xACE CALLER DUP6 PUSH2 0x145C JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2A SWAP3 SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB46 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB6A SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC7 SWAP3 SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBE3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC07 SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1DC8BB69DF2B8E91FBDCBFCF93D951B3F0000F085A95FE3F7946D6161439245D DUP5 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0xC52 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0xC6E JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA4 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD27 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD4B SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDEA SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0xDF5 PUSH2 0x7D1 JUMP JUMPDEST SUB PUSH2 0xE15 JUMPI PUSH2 0xE0E DUP3 DUP5 PUSH2 0xE09 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP PUSH2 0xE60 JUMP JUMPDEST PUSH2 0xE5D PUSH1 0x7 SLOAD PUSH2 0xE23 PUSH2 0x7D1 JUMP JUMPDEST DUP6 PUSH2 0xE2E SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0xE38 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xE43 PUSH2 0x7D1 JUMP JUMPDEST DUP6 PUSH2 0xE4E SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0xE58 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST PUSH2 0x1552 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xE6A CALLER DUP3 PUSH2 0x156A JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE7B SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE93 SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEFB PUSH2 0x12C0 JUMP JUMPDEST SWAP1 POP PUSH2 0xF08 DUP2 DUP6 DUP6 PUSH2 0x136C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4C SWAP1 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 SLOAD GT DUP1 ISZERO PUSH2 0xF67 JUMPI POP PUSH0 PUSH1 0x8 SLOAD GT JUMPDEST PUSH2 0xFA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9D SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E8 PUSH2 0x3E5 DUP5 PUSH2 0xFB8 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0xFC2 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x8 SLOAD PUSH2 0xFD3 SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST DUP3 PUSH1 0x7 SLOAD PUSH2 0xFE1 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0xFEB SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1030 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1027 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10AA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10CE SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112B SWAP3 SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1147 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x116B SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x117D SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x631FB37DBA9BBCB8B2F3BE2D669E365AE9F1BD850CC57DFE8B7CCD7D979A2BBA PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x122A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12D4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x15E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12E4 DUP5 DUP5 PUSH2 0x123E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1366 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1357 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1365 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x15E9 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13DC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D3 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x144C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1443 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1457 DUP4 DUP4 DUP4 PUSH2 0x17B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C3 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14D7 DUP3 PUSH0 DUP4 PUSH2 0x17B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1540 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x14F8 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST PUSH2 0x1502 SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x153A JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x151F SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST PUSH2 0x1529 SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0x1533 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST SWAP1 POP PUSH2 0x1505 JUMP JUMPDEST POP PUSH2 0x154D JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x154C JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x1560 JUMPI DUP2 PUSH2 0x1562 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15DA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D1 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15E5 PUSH0 DUP4 DUP4 PUSH2 0x17B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1659 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1650 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16C9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C0 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x17B2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x17A9 SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1808 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17FC SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18D6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1891 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1888 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x191D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1967 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x19C4 SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A13 DUP3 PUSH2 0x19D1 JUMP JUMPDEST PUSH2 0x1A1D DUP2 DUP6 PUSH2 0x19DB JUMP JUMPDEST SWAP4 POP PUSH2 0x1A2D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x1A36 DUP2 PUSH2 0x19F9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A59 DUP2 DUP5 PUSH2 0x1A09 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A73 DUP2 PUSH2 0x1A61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A8C PUSH0 DUP4 ADD DUP6 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x1A99 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACD DUP3 PUSH2 0x1AA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADD DUP2 PUSH2 0x1AC3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AF8 DUP2 PUSH2 0x1AD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B07 DUP2 PUSH2 0x1A61 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B22 DUP2 PUSH2 0x1AFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B3E JUMPI PUSH2 0x1B3D PUSH2 0x1AA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B4B DUP6 DUP3 DUP7 ADD PUSH2 0x1AEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B5C DUP6 DUP3 DUP7 ADD PUSH2 0x1B14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B7A DUP2 PUSH2 0x1B66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B93 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BBC PUSH2 0x1BB7 PUSH2 0x1BB2 DUP5 PUSH2 0x1AA4 JUMP JUMPDEST PUSH2 0x1B99 JUMP JUMPDEST PUSH2 0x1AA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCD DUP3 PUSH2 0x1BA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDE DUP3 PUSH2 0x1BC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BEE DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C07 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C23 JUMPI PUSH2 0x1C22 PUSH2 0x1AA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C30 DUP6 DUP3 DUP7 ADD PUSH2 0x1B14 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C41 DUP6 DUP3 DUP7 ADD PUSH2 0x1B14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C5E PUSH0 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C7B JUMPI PUSH2 0x1C7A PUSH2 0x1AA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C88 DUP7 DUP3 DUP8 ADD PUSH2 0x1AEA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C99 DUP7 DUP3 DUP8 ADD PUSH2 0x1AEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CAA DUP7 DUP3 DUP8 ADD PUSH2 0x1B14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CC9 DUP2 PUSH2 0x1CB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFD JUMPI PUSH2 0x1CFC PUSH2 0x1AA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D0A DUP5 DUP3 DUP6 ADD PUSH2 0x1AEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D1C DUP2 PUSH2 0x1AC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D35 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D50 JUMPI PUSH2 0x1D4F PUSH2 0x1AA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D5D DUP5 DUP3 DUP6 ADD PUSH2 0x1B14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D7C JUMPI PUSH2 0x1D7B PUSH2 0x1AA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D89 DUP6 DUP3 DUP7 ADD PUSH2 0x1AEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D9A DUP6 DUP3 DUP7 ADD PUSH2 0x1AEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DE8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DFB JUMPI PUSH2 0x1DFA PUSH2 0x1DA4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E35 PUSH1 0x12 DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1E40 DUP3 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E62 DUP2 PUSH2 0x1E29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657365727665730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E9D PUSH1 0x15 DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA8 DUP3 PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ECA DUP2 PUSH2 0x1E91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F08 DUP3 PUSH2 0x1A61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F13 DUP4 PUSH2 0x1A61 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1F21 DUP2 PUSH2 0x1A61 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1F38 JUMPI PUSH2 0x1F37 PUSH2 0x1ED1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F76 DUP3 PUSH2 0x1A61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F81 DUP4 PUSH2 0x1A61 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F91 JUMPI PUSH2 0x1F90 PUSH2 0x1F3F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA6 DUP3 PUSH2 0x1A61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB1 DUP4 PUSH2 0x1A61 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FC9 JUMPI PUSH2 0x1FC8 PUSH2 0x1ED1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536C69707061676520746F6F2068696768000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2003 PUSH1 0x11 DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x200E DUP3 PUSH2 0x1FCF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2030 DUP2 PUSH2 0x1FF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x204A PUSH0 DUP4 ADD DUP7 PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x2057 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x2064 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2075 DUP2 PUSH2 0x1B66 JUMP JUMPDEST DUP2 EQ PUSH2 0x207F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2090 DUP2 PUSH2 0x206C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AB JUMPI PUSH2 0x20AA PUSH2 0x1AA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20B8 DUP5 DUP3 DUP6 ADD PUSH2 0x2082 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20D4 PUSH0 DUP4 ADD DUP6 PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x20E1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20F2 DUP3 PUSH2 0x1A61 JUMP JUMPDEST SWAP2 POP PUSH2 0x20FD DUP4 PUSH2 0x1A61 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2115 JUMPI PUSH2 0x2114 PUSH2 0x1ED1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x212E PUSH0 DUP4 ADD DUP8 PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x213B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x2148 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x2155 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4C697175696469747920746F2072656D6F7665206D757374206265203E203000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2192 PUSH1 0x1F DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x219D DUP3 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21BF DUP2 PUSH2 0x2186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C697175696469747920746F6B656E73000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21FA PUSH1 0x1D DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2205 DUP3 PUSH2 0x21C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2227 DUP2 PUSH2 0x21EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206C697175696469747920696E2074686520706F6F6C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2262 PUSH1 0x18 DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x226D DUP3 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x228F DUP2 PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420726573657276657320666F7220726571756573 PUSH0 DUP3 ADD MSTORE PUSH32 0x746564206C697175696469747900000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22F0 PUSH1 0x2D DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x22FB DUP3 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x231D DUP2 PUSH2 0x22E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2337 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x2344 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x2351 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E7473206D757374206265203E203000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x238D PUSH1 0x13 DUP4 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2398 DUP3 PUSH2 0x2359 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23BA DUP2 PUSH2 0x2381 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23D4 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x23E1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x23EE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH13 0xEDD78C8DE6014A09F251CC8F0F SWAP6 0xCD 0x4D 0x2B 0xBC ORIGIN 0xD4 SWAP16 TLOAD SWAP9 BLOBBASEFEE 0xC0 0xAA 0xD8 OR POP DUP11 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "180:7700:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7683:181:5;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3979:186:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;230:20:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5500:1175;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2830:97:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;624:23:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;257:20:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;656:20:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3888:1604:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2488:1392;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3296:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6686:989:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;594:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;7683:181:5:-;7729:7;7738;7841:8;;7851;;7833:27;;;;7683:181;;:::o;3979:186:1:-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;230:20:5:-;;;;;;;;;;;;;:::o;5500:1175::-;5634:1;5622:9;:13;5614:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;5741:1;5730:8;;:12;:28;;;;;5757:1;5746:8;;:12;5730:28;5722:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;5855:24;5900:4;5894:3;5882:9;:15;;;;:::i;:::-;:22;;;;:::i;:::-;5855:49;;5977:18;6040:16;6029:8;;:27;;;;:::i;:::-;6009:16;5998:8;;:27;;;;:::i;:::-;:59;;;;:::i;:::-;5977:80;;6169:7;6155:10;:21;;6147:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;6253:6;;;;;;;;;;;:19;;;6273:10;6293:4;6300:9;6253:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6355:6;;;;;;;;;;;:15;;;6371:10;6383;6355:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6495:16;6483:8;;:28;;;;;;;:::i;:::-;;;;;;;;6530:10;6518:8;;:22;;;;;;;:::i;:::-;;;;;;;;6603:10;6589:82;;;6623:6;;;;;;;;;;;6632:9;6651:6;;;;;;;;;;;6660:10;6589:82;;;;;;;;;:::i;:::-;;;;;;;;5564:1111;;5500:1175;;:::o;2830:97:1:-;2882:7;2908:12;;2901:19;;2830:97;:::o;624:23:5:-;;;;:::o;4757:244:1:-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;257:20:5:-;;;;;;;;;;;;;:::o;2985:116:1:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;656:20:5:-;;;;;;;;;;;;;:::o;1962:93:1:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3888:1604:5:-;3958:18;3978;4094:1;4074:17;:21;4066:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;4251:17;4226:21;4236:10;4226:9;:21::i;:::-;:42;;4218:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;4366:22;4391:13;:11;:13::i;:::-;4366:38;;4436:1;4419:14;:18;4411:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4611:14;4599:8;;4579:17;:28;;;;:::i;:::-;4578:47;;;;:::i;:::-;4565:60;;4678:14;4666:8;;4646:17;:28;;;;:::i;:::-;4645:47;;;;:::i;:::-;4632:60;;4803:1;4790:10;:14;:32;;;;;4821:1;4808:10;:14;4790:32;4782:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;4956:10;4944:8;;:22;;;;;;;:::i;:::-;;;;;;;;4985:10;4973:8;;:22;;;;;;;:::i;:::-;;;;;;;;5076:36;5082:10;5094:17;5076:5;:36::i;:::-;5177:6;;;;;;;;;;;:15;;;5193:10;5205;5177:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5223:6;;;;;;;;;;;:15;;;5239:10;5251;5223:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5347:10;5330:71;;;5359:10;5371;5383:17;5330:71;;;;;;;;:::i;:::-;;;;;;;;5457:31;3888:1604;;;:::o;2488:1392::-;2636:1;2626:7;:11;:26;;;;;2651:1;2641:7;:11;2626:26;2618:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2756:6;;;;;;;;;;;:19;;;2776:10;2796:4;2803:7;2756:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2818:6;;;;;;;;;;;:19;;;2838:10;2858:4;2865:7;2818:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2954:17;3071:1;3054:13;:11;:13::i;:::-;:18;3050:457;;3156:23;3171:7;3161;:17;;;;:::i;:::-;3156:4;:23::i;:::-;3144:35;;3050:457;;;3300:199;3344:8;;3328:13;:11;:13::i;:::-;3318:7;:23;;;;:::i;:::-;:34;;;;:::i;:::-;3436:8;;3420:13;:11;:13::i;:::-;3410:7;:23;;;;:::i;:::-;:34;;;;:::i;:::-;3300:3;:199::i;:::-;3288:211;;3050:457;3586:28;3592:10;3604:9;3586:5;:28::i;:::-;3722:7;3710:8;;:19;;;;;;;:::i;:::-;;;;;;;;3748:7;3736:8;;:19;;;;;;;:::i;:::-;;;;;;;;3836:10;3821:55;;;3848:7;3857;3866:9;3821:55;;;;;;;;:::i;:::-;;;;;;;;2553:1327;2488:1392;;:::o;3296:178:1:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;6686:989:5:-;6807:1;6795:9;:13;6787:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;6889:1;6878:8;;:12;:28;;;;;6905:1;6894:8;;:12;6878:28;6870:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;6973:24;7018:4;7012:3;7000:9;:15;;;;:::i;:::-;:22;;;;:::i;:::-;6973:49;;7094:18;7157:16;7146:8;;:27;;;;:::i;:::-;7126:16;7115:8;;:27;;;;:::i;:::-;:59;;;;:::i;:::-;7094:80;;7244:7;7230:10;:21;;7222:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;7314:6;;;;;;;;;;;:19;;;7334:10;7354:4;7361:9;7314:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7410:6;;;;;;;;;;;:15;;;7426:10;7438;7410:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7506:16;7494:8;;:28;;;;;;;:::i;:::-;;;;;;;;7541:10;7529:8;;:22;;;;;;;:::i;:::-;;;;;;;;7603:10;7589:82;;;7623:6;;;;;;;;;;;7632:9;7651:6;;;;;;;;;;;7660:10;7589:82;;;;;;;;;:::i;:::-;;;;;;;;6750:925;;6686:989;;:::o;594:23::-;;;;:::o;3532:140:1:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8707:128:1:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;7965:206::-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;1677:731:5:-;1725:9;1826:1;1822;:5;1818:525;;;1891:1;1887:5;;1948:9;1968:1;1964;1960;:5;;;;:::i;:::-;:9;;;;:::i;:::-;1948:21;;2089:147;2100:1;2096;:5;2089:147;;;2122:1;2118:5;;2223:1;2218;2214;2210;:5;;;;:::i;:::-;:9;;;;:::i;:::-;2209:15;;;;:::i;:::-;2205:19;;2089:147;;;1829:414;1818:525;;;2316:1;2311;:6;2307:36;;2334:1;2330:5;;2307:36;1818:525;1677:731;;;:::o;1431:164::-;1489:7;1582:1;1578;:5;:13;;1590:1;1578:13;;;1586:1;1578:13;1571:20;;1431:164;;;;:::o;7439:208:1:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:77::-;1279:7;1308:5;1297:16;;1242:77;;;:::o;1325:118::-;1412:24;1430:5;1412:24;:::i;:::-;1407:3;1400:37;1325:118;;:::o;1449:332::-;1570:4;1608:2;1597:9;1593:18;1585:26;;1621:71;1689:1;1678:9;1674:17;1665:6;1621:71;:::i;:::-;1702:72;1770:2;1759:9;1755:18;1746:6;1702:72;:::i;:::-;1449:332;;;;;:::o;1868:117::-;1977:1;1974;1967:12;2114:126;2151:7;2191:42;2184:5;2180:54;2169:65;;2114:126;;;:::o;2246:96::-;2283:7;2312:24;2330:5;2312:24;:::i;:::-;2301:35;;2246:96;;;:::o;2348:122::-;2421:24;2439:5;2421:24;:::i;:::-;2414:5;2411:35;2401:63;;2460:1;2457;2450:12;2401:63;2348:122;:::o;2476:139::-;2522:5;2560:6;2547:20;2538:29;;2576:33;2603:5;2576:33;:::i;:::-;2476:139;;;;:::o;2621:122::-;2694:24;2712:5;2694:24;:::i;:::-;2687:5;2684:35;2674:63;;2733:1;2730;2723:12;2674:63;2621:122;:::o;2749:139::-;2795:5;2833:6;2820:20;2811:29;;2849:33;2876:5;2849:33;:::i;:::-;2749:139;;;;:::o;2894:474::-;2962:6;2970;3019:2;3007:9;2998:7;2994:23;2990:32;2987:119;;;3025:79;;:::i;:::-;2987:119;3145:1;3170:53;3215:7;3206:6;3195:9;3191:22;3170:53;:::i;:::-;3160:63;;3116:117;3272:2;3298:53;3343:7;3334:6;3323:9;3319:22;3298:53;:::i;:::-;3288:63;;3243:118;2894:474;;;;;:::o;3374:90::-;3408:7;3451:5;3444:13;3437:21;3426:32;;3374:90;;;:::o;3470:109::-;3551:21;3566:5;3551:21;:::i;:::-;3546:3;3539:34;3470:109;;:::o;3585:210::-;3672:4;3710:2;3699:9;3695:18;3687:26;;3723:65;3785:1;3774:9;3770:17;3761:6;3723:65;:::i;:::-;3585:210;;;;:::o;3801:60::-;3829:3;3850:5;3843:12;;3801:60;;;:::o;3867:142::-;3917:9;3950:53;3968:34;3977:24;3995:5;3977:24;:::i;:::-;3968:34;:::i;:::-;3950:53;:::i;:::-;3937:66;;3867:142;;;:::o;4015:126::-;4065:9;4098:37;4129:5;4098:37;:::i;:::-;4085:50;;4015:126;;;:::o;4147:140::-;4211:9;4244:37;4275:5;4244:37;:::i;:::-;4231:50;;4147:140;;;:::o;4293:159::-;4394:51;4439:5;4394:51;:::i;:::-;4389:3;4382:64;4293:159;;:::o;4458:250::-;4565:4;4603:2;4592:9;4588:18;4580:26;;4616:85;4698:1;4687:9;4683:17;4674:6;4616:85;:::i;:::-;4458:250;;;;:::o;4714:474::-;4782:6;4790;4839:2;4827:9;4818:7;4814:23;4810:32;4807:119;;;4845:79;;:::i;:::-;4807:119;4965:1;4990:53;5035:7;5026:6;5015:9;5011:22;4990:53;:::i;:::-;4980:63;;4936:117;5092:2;5118:53;5163:7;5154:6;5143:9;5139:22;5118:53;:::i;:::-;5108:63;;5063:118;4714:474;;;;;:::o;5194:222::-;5287:4;5325:2;5314:9;5310:18;5302:26;;5338:71;5406:1;5395:9;5391:17;5382:6;5338:71;:::i;:::-;5194:222;;;;:::o;5422:619::-;5499:6;5507;5515;5564:2;5552:9;5543:7;5539:23;5535:32;5532:119;;;5570:79;;:::i;:::-;5532:119;5690:1;5715:53;5760:7;5751:6;5740:9;5736:22;5715:53;:::i;:::-;5705:63;;5661:117;5817:2;5843:53;5888:7;5879:6;5868:9;5864:22;5843:53;:::i;:::-;5833:63;;5788:118;5945:2;5971:53;6016:7;6007:6;5996:9;5992:22;5971:53;:::i;:::-;5961:63;;5916:118;5422:619;;;;;:::o;6047:86::-;6082:7;6122:4;6115:5;6111:16;6100:27;;6047:86;;;:::o;6139:112::-;6222:22;6238:5;6222:22;:::i;:::-;6217:3;6210:35;6139:112;;:::o;6257:214::-;6346:4;6384:2;6373:9;6369:18;6361:26;;6397:67;6461:1;6450:9;6446:17;6437:6;6397:67;:::i;:::-;6257:214;;;;:::o;6477:329::-;6536:6;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6477:329;;;;:::o;6812:118::-;6899:24;6917:5;6899:24;:::i;:::-;6894:3;6887:37;6812:118;;:::o;6936:222::-;7029:4;7067:2;7056:9;7052:18;7044:26;;7080:71;7148:1;7137:9;7133:17;7124:6;7080:71;:::i;:::-;6936:222;;;;:::o;7164:329::-;7223:6;7272:2;7260:9;7251:7;7247:23;7243:32;7240:119;;;7278:79;;:::i;:::-;7240:119;7398:1;7423:53;7468:7;7459:6;7448:9;7444:22;7423:53;:::i;:::-;7413:63;;7369:117;7164:329;;;;:::o;7499:474::-;7567:6;7575;7624:2;7612:9;7603:7;7599:23;7595:32;7592:119;;;7630:79;;:::i;:::-;7592:119;7750:1;7775:53;7820:7;7811:6;7800:9;7796:22;7775:53;:::i;:::-;7765:63;;7721:117;7877:2;7903:53;7948:7;7939:6;7928:9;7924:22;7903:53;:::i;:::-;7893:63;;7848:118;7499:474;;;;;:::o;7979:180::-;8027:77;8024:1;8017:88;8124:4;8121:1;8114:15;8148:4;8145:1;8138:15;8165:320;8209:6;8246:1;8240:4;8236:12;8226:22;;8293:1;8287:4;8283:12;8314:18;8304:81;;8370:4;8362:6;8358:17;8348:27;;8304:81;8432:2;8424:6;8421:14;8401:18;8398:38;8395:84;;8451:18;;:::i;:::-;8395:84;8216:269;8165:320;;;:::o;8491:168::-;8631:20;8627:1;8619:6;8615:14;8608:44;8491:168;:::o;8665:366::-;8807:3;8828:67;8892:2;8887:3;8828:67;:::i;:::-;8821:74;;8904:93;8993:3;8904:93;:::i;:::-;9022:2;9017:3;9013:12;9006:19;;8665:366;;;:::o;9037:419::-;9203:4;9241:2;9230:9;9226:18;9218:26;;9290:9;9284:4;9280:20;9276:1;9265:9;9261:17;9254:47;9318:131;9444:4;9318:131;:::i;:::-;9310:139;;9037:419;;;:::o;9462:171::-;9602:23;9598:1;9590:6;9586:14;9579:47;9462:171;:::o;9639:366::-;9781:3;9802:67;9866:2;9861:3;9802:67;:::i;:::-;9795:74;;9878:93;9967:3;9878:93;:::i;:::-;9996:2;9991:3;9987:12;9980:19;;9639:366;;;:::o;10011:419::-;10177:4;10215:2;10204:9;10200:18;10192:26;;10264:9;10258:4;10254:20;10250:1;10239:9;10235:17;10228:47;10292:131;10418:4;10292:131;:::i;:::-;10284:139;;10011:419;;;:::o;10436:180::-;10484:77;10481:1;10474:88;10581:4;10578:1;10571:15;10605:4;10602:1;10595:15;10622:410;10662:7;10685:20;10703:1;10685:20;:::i;:::-;10680:25;;10719:20;10737:1;10719:20;:::i;:::-;10714:25;;10774:1;10771;10767:9;10796:30;10814:11;10796:30;:::i;:::-;10785:41;;10975:1;10966:7;10962:15;10959:1;10956:22;10936:1;10929:9;10909:83;10886:139;;11005:18;;:::i;:::-;10886:139;10670:362;10622:410;;;;:::o;11038:180::-;11086:77;11083:1;11076:88;11183:4;11180:1;11173:15;11207:4;11204:1;11197:15;11224:185;11264:1;11281:20;11299:1;11281:20;:::i;:::-;11276:25;;11315:20;11333:1;11315:20;:::i;:::-;11310:25;;11354:1;11344:35;;11359:18;;:::i;:::-;11344:35;11401:1;11398;11394:9;11389:14;;11224:185;;;;:::o;11415:191::-;11455:3;11474:20;11492:1;11474:20;:::i;:::-;11469:25;;11508:20;11526:1;11508:20;:::i;:::-;11503:25;;11551:1;11548;11544:9;11537:16;;11572:3;11569:1;11566:10;11563:36;;;11579:18;;:::i;:::-;11563:36;11415:191;;;;:::o;11612:167::-;11752:19;11748:1;11740:6;11736:14;11729:43;11612:167;:::o;11785:366::-;11927:3;11948:67;12012:2;12007:3;11948:67;:::i;:::-;11941:74;;12024:93;12113:3;12024:93;:::i;:::-;12142:2;12137:3;12133:12;12126:19;;11785:366;;;:::o;12157:419::-;12323:4;12361:2;12350:9;12346:18;12338:26;;12410:9;12404:4;12400:20;12396:1;12385:9;12381:17;12374:47;12438:131;12564:4;12438:131;:::i;:::-;12430:139;;12157:419;;;:::o;12582:442::-;12731:4;12769:2;12758:9;12754:18;12746:26;;12782:71;12850:1;12839:9;12835:17;12826:6;12782:71;:::i;:::-;12863:72;12931:2;12920:9;12916:18;12907:6;12863:72;:::i;:::-;12945;13013:2;13002:9;12998:18;12989:6;12945:72;:::i;:::-;12582:442;;;;;;:::o;13030:116::-;13100:21;13115:5;13100:21;:::i;:::-;13093:5;13090:32;13080:60;;13136:1;13133;13126:12;13080:60;13030:116;:::o;13152:137::-;13206:5;13237:6;13231:13;13222:22;;13253:30;13277:5;13253:30;:::i;:::-;13152:137;;;;:::o;13295:345::-;13362:6;13411:2;13399:9;13390:7;13386:23;13382:32;13379:119;;;13417:79;;:::i;:::-;13379:119;13537:1;13562:61;13615:7;13606:6;13595:9;13591:22;13562:61;:::i;:::-;13552:71;;13508:125;13295:345;;;;:::o;13646:332::-;13767:4;13805:2;13794:9;13790:18;13782:26;;13818:71;13886:1;13875:9;13871:17;13862:6;13818:71;:::i;:::-;13899:72;13967:2;13956:9;13952:18;13943:6;13899:72;:::i;:::-;13646:332;;;;;:::o;13984:194::-;14024:4;14044:20;14062:1;14044:20;:::i;:::-;14039:25;;14078:20;14096:1;14078:20;:::i;:::-;14073:25;;14122:1;14119;14115:9;14107:17;;14146:1;14140:4;14137:11;14134:37;;;14151:18;;:::i;:::-;14134:37;13984:194;;;;:::o;14184:553::-;14361:4;14399:3;14388:9;14384:19;14376:27;;14413:71;14481:1;14470:9;14466:17;14457:6;14413:71;:::i;:::-;14494:72;14562:2;14551:9;14547:18;14538:6;14494:72;:::i;:::-;14576;14644:2;14633:9;14629:18;14620:6;14576:72;:::i;:::-;14658;14726:2;14715:9;14711:18;14702:6;14658:72;:::i;:::-;14184:553;;;;;;;:::o;14743:181::-;14883:33;14879:1;14871:6;14867:14;14860:57;14743:181;:::o;14930:366::-;15072:3;15093:67;15157:2;15152:3;15093:67;:::i;:::-;15086:74;;15169:93;15258:3;15169:93;:::i;:::-;15287:2;15282:3;15278:12;15271:19;;14930:366;;;:::o;15302:419::-;15468:4;15506:2;15495:9;15491:18;15483:26;;15555:9;15549:4;15545:20;15541:1;15530:9;15526:17;15519:47;15583:131;15709:4;15583:131;:::i;:::-;15575:139;;15302:419;;;:::o;15727:179::-;15867:31;15863:1;15855:6;15851:14;15844:55;15727:179;:::o;15912:366::-;16054:3;16075:67;16139:2;16134:3;16075:67;:::i;:::-;16068:74;;16151:93;16240:3;16151:93;:::i;:::-;16269:2;16264:3;16260:12;16253:19;;15912:366;;;:::o;16284:419::-;16450:4;16488:2;16477:9;16473:18;16465:26;;16537:9;16531:4;16527:20;16523:1;16512:9;16508:17;16501:47;16565:131;16691:4;16565:131;:::i;:::-;16557:139;;16284:419;;;:::o;16709:174::-;16849:26;16845:1;16837:6;16833:14;16826:50;16709:174;:::o;16889:366::-;17031:3;17052:67;17116:2;17111:3;17052:67;:::i;:::-;17045:74;;17128:93;17217:3;17128:93;:::i;:::-;17246:2;17241:3;17237:12;17230:19;;16889:366;;;:::o;17261:419::-;17427:4;17465:2;17454:9;17450:18;17442:26;;17514:9;17508:4;17504:20;17500:1;17489:9;17485:17;17478:47;17542:131;17668:4;17542:131;:::i;:::-;17534:139;;17261:419;;;:::o;17686:232::-;17826:34;17822:1;17814:6;17810:14;17803:58;17895:15;17890:2;17882:6;17878:15;17871:40;17686:232;:::o;17924:366::-;18066:3;18087:67;18151:2;18146:3;18087:67;:::i;:::-;18080:74;;18163:93;18252:3;18163:93;:::i;:::-;18281:2;18276:3;18272:12;18265:19;;17924:366;;;:::o;18296:419::-;18462:4;18500:2;18489:9;18485:18;18477:26;;18549:9;18543:4;18539:20;18535:1;18524:9;18520:17;18513:47;18577:131;18703:4;18577:131;:::i;:::-;18569:139;;18296:419;;;:::o;18721:442::-;18870:4;18908:2;18897:9;18893:18;18885:26;;18921:71;18989:1;18978:9;18974:17;18965:6;18921:71;:::i;:::-;19002:72;19070:2;19059:9;19055:18;19046:6;19002:72;:::i;:::-;19084;19152:2;19141:9;19137:18;19128:6;19084:72;:::i;:::-;18721:442;;;;;;:::o;19169:169::-;19309:21;19305:1;19297:6;19293:14;19286:45;19169:169;:::o;19344:366::-;19486:3;19507:67;19571:2;19566:3;19507:67;:::i;:::-;19500:74;;19583:93;19672:3;19583:93;:::i;:::-;19701:2;19696:3;19692:12;19685:19;;19344:366;;;:::o;19716:419::-;19882:4;19920:2;19909:9;19905:18;19897:26;;19969:9;19963:4;19959:20;19955:1;19944:9;19940:17;19933:47;19997:131;20123:4;19997:131;:::i;:::-;19989:139;;19716:419;;;:::o;20141:442::-;20290:4;20328:2;20317:9;20313:18;20305:26;;20341:71;20409:1;20398:9;20394:17;20385:6;20341:71;:::i;:::-;20422:72;20490:2;20479:9;20475:18;20466:6;20422:72;:::i;:::-;20504;20572:2;20561:9;20557:18;20548:6;20504:72;:::i;:::-;20141:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1852000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"decimals()": "449",
								"getReserves()": "infinite",
								"name()": "infinite",
								"owner()": "2575",
								"removeLiquidity(uint256)": "infinite",
								"reserveA()": "2513",
								"reserveB()": "2492",
								"swapAforB(uint256,uint256)": "infinite",
								"swapBforA(uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"tokenA()": "infinite",
								"tokenB()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"min(uint256,uint256)": "63",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 180,
									"end": 7880,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 180,
									"end": 7880,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 180,
									"end": 7880,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1176,
									"end": 1373,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1272,
									"end": 1277,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 1286,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1316,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1293,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1338,
									"end": 1345,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1328,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1328,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1359,
									"end": 1369,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1356,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1351,
									"end": 1356,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 180,
									"end": 7880,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 180,
									"end": 7880,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1067,
									"end": 1079,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1167,
									"end": 1172,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1163,
									"end": 1177,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1159,
									"end": 1187,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1091,
									"end": 1193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1247,
									"end": 1324,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1237,
									"end": 1325,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1334,
									"end": 1349,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1490,
									"end": 1494,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1468,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1456,
									"end": 1496,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1596,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1583,
									"end": 1605,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1580,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1547,
									"end": 1581,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1544,
									"end": 1606,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1609,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1428,
									"end": 1666,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1385,
									"end": 1666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1706,
									"end": 1712,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1733,
									"end": 1753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1790,
									"end": 1794,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1762,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1959,
									"end": 1977,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1951,
									"end": 1957,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1948,
									"end": 1978,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1981,
									"end": 1999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2019,
									"end": 2048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2097,
									"end": 2101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2093,
									"end": 2108,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1807,
									"end": 2115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2210,
									"end": 2216,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2205,
									"end": 2208,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2200,
									"end": 2203,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2217,
									"name": "MCOPY",
									"source": 6
								},
								{
									"begin": 2251,
									"end": 2252,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2242,
									"end": 2248,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2237,
									"end": 2240,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2233,
									"end": 2249,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2226,
									"end": 2253,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2121,
									"end": 2260,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2360,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2438,
									"end": 2444,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2396,
									"end": 2445,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2380,
									"end": 2446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2371,
									"end": 2446,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2371,
									"end": 2446,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2469,
									"end": 2475,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2467,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2455,
									"end": 2476,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2507,
									"end": 2511,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2500,
									"end": 2505,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2496,
									"end": 2512,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2545,
									"end": 2548,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2536,
									"end": 2542,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2531,
									"end": 2534,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2543,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2524,
									"end": 2549,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2552,
									"end": 2631,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2687,
									"end": 2693,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2682,
									"end": 2685,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 2680,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2642,
									"end": 2694,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2361,
									"end": 2700,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 2792,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2836,
									"end": 2839,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2829,
									"end": 2833,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2821,
									"end": 2827,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2817,
									"end": 2834,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2813,
									"end": 2840,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2844,
									"end": 2923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2948,
									"end": 2961,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3065,
									"end": 3068,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3057,
									"end": 3063,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3050,
									"end": 3054,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3042,
									"end": 3048,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3038,
									"end": 3055,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2979,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2970,
									"end": 3069,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2970,
									"end": 3069,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2793,
									"end": 3075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3198,
									"end": 3204,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3206,
									"end": 3212,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3214,
									"end": 3220,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3222,
									"end": 3228,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3259,
									"end": 3268,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3250,
									"end": 3257,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3246,
									"end": 3269,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3242,
									"end": 3275,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 3278,
									"end": 3357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3398,
									"end": 3399,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3423,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3479,
									"end": 3486,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3470,
									"end": 3476,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3459,
									"end": 3468,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3455,
									"end": 3477,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3423,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 3423,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3423,
									"end": 3487,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3423,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3413,
									"end": 3487,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3413,
									"end": 3487,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3369,
									"end": 3497,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3538,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3562,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 3618,
									"end": 3625,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3609,
									"end": 3615,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3598,
									"end": 3607,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3616,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 3562,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3626,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 3562,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3552,
									"end": 3626,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3552,
									"end": 3626,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3507,
									"end": 3636,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3696,
									"end": 3698,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3685,
									"end": 3694,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3681,
									"end": 3699,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3675,
									"end": 3700,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3719,
									"end": 3725,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3746,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3713,
									"end": 3830,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3713,
									"end": 3830,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3713,
									"end": 3830,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3749,
									"end": 3828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3749,
									"end": 3828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 3749,
									"end": 3828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3749,
									"end": 3828,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3749,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3713,
									"end": 3830,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3713,
									"end": 3830,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3854,
									"end": 3928,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 3920,
									"end": 3927,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3911,
									"end": 3917,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3900,
									"end": 3909,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3896,
									"end": 3918,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3854,
									"end": 3928,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3854,
									"end": 3928,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3854,
									"end": 3928,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 3854,
									"end": 3928,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3844,
									"end": 3928,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3844,
									"end": 3928,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3646,
									"end": 3938,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3998,
									"end": 4000,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 3987,
									"end": 3996,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3983,
									"end": 4001,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3977,
									"end": 4002,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4029,
									"end": 4047,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4021,
									"end": 4027,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4018,
									"end": 4048,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4132,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4132,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4015,
									"end": 4132,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4051,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4051,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 4051,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4051,
									"end": 4130,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4051,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4132,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4015,
									"end": 4132,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4222,
									"end": 4229,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4213,
									"end": 4219,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4202,
									"end": 4211,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4198,
									"end": 4220,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4156,
									"end": 4230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4146,
									"end": 4230,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4146,
									"end": 4230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3948,
									"end": 4240,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4305,
									"end": 4311,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4339,
									"end": 4344,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4333,
									"end": 4345,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4323,
									"end": 4345,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4323,
									"end": 4345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4253,
									"end": 4352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4358,
									"end": 4538,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 4358,
									"end": 4538,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4406,
									"end": 4483,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4403,
									"end": 4404,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4396,
									"end": 4484,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4503,
									"end": 4507,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 4500,
									"end": 4501,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4493,
									"end": 4508,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4527,
									"end": 4531,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4517,
									"end": 4532,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4588,
									"end": 4594,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4625,
									"end": 4626,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4619,
									"end": 4623,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4615,
									"end": 4627,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4605,
									"end": 4627,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4605,
									"end": 4627,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4672,
									"end": 4673,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4666,
									"end": 4670,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4662,
									"end": 4674,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4693,
									"end": 4711,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4749,
									"end": 4753,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 4741,
									"end": 4747,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4737,
									"end": 4754,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4727,
									"end": 4754,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4727,
									"end": 4754,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4811,
									"end": 4813,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4803,
									"end": 4809,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4800,
									"end": 4814,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4780,
									"end": 4798,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4815,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 4830,
									"end": 4848,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4595,
									"end": 4864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4544,
									"end": 4864,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4919,
									"end": 4923,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4942,
									"end": 4945,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4934,
									"end": 4945,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4934,
									"end": 4945,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 4968,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4962,
									"end": 4963,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4955,
									"end": 4969,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4996,
									"end": 4997,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4986,
									"end": 5004,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4978,
									"end": 5004,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4978,
									"end": 5004,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4870,
									"end": 5011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5054,
									"end": 5060,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5101,
									"end": 5103,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5096,
									"end": 5098,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5089,
									"end": 5094,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5085,
									"end": 5099,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5081,
									"end": 5104,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5071,
									"end": 5104,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5071,
									"end": 5104,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5017,
									"end": 5110,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5160,
									"end": 5168,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5210,
									"end": 5215,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5204,
									"end": 5208,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5200,
									"end": 5216,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 5179,
									"end": 5216,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5179,
									"end": 5216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5116,
									"end": 5223,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5298,
									"end": 5304,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5348,
									"end": 5349,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5336,
									"end": 5346,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5332,
									"end": 5350,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5401,
									"end": 5467,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5390,
									"end": 5399,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5371,
									"end": 5468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5519,
									"end": 5527,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5508,
									"end": 5517,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5489,
									"end": 5528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5477,
									"end": 5528,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 5477,
									"end": 5528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5561,
									"end": 5565,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5557,
									"end": 5566,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5550,
									"end": 5555,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5546,
									"end": 5567,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5537,
									"end": 5567,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5537,
									"end": 5567,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5610,
									"end": 5614,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5600,
									"end": 5608,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5596,
									"end": 5615,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5586,
									"end": 5616,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5576,
									"end": 5616,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5576,
									"end": 5616,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5305,
									"end": 5622,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5305,
									"end": 5622,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5229,
									"end": 5622,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5665,
									"end": 5672,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5694,
									"end": 5699,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5683,
									"end": 5699,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5683,
									"end": 5699,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5628,
									"end": 5705,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5739,
									"end": 5742,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5760,
									"end": 5765,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5753,
									"end": 5765,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5753,
									"end": 5765,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5711,
									"end": 5771,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5827,
									"end": 5836,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 5905,
									"end": 5910,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5887,
									"end": 5911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5878,
									"end": 5912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5860,
									"end": 5913,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5847,
									"end": 5913,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5847,
									"end": 5913,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5777,
									"end": 5919,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5968,
									"end": 5971,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5989,
									"end": 5994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5982,
									"end": 5994,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5982,
									"end": 5994,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5925,
									"end": 6000,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6147,
									"end": 6154,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 6116,
									"end": 6155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6250,
									"end": 6266,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 6226,
									"end": 6267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6218,
									"end": 6224,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6215,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6205,
									"end": 6216,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 6177,
									"end": 6268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6171,
									"end": 6175,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6164,
									"end": 6269,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6082,
									"end": 6275,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6006,
									"end": 6275,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6326,
									"end": 6329,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6281,
									"end": 6354,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 6437,
									"end": 6469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 6536,
									"end": 6542,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6528,
									"end": 6534,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6478,
									"end": 6543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "tag",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6413,
									"end": 6549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6360,
									"end": 6549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6632,
									"end": 6635,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6625,
									"end": 6630,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6622,
									"end": 6636,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 6723,
									"end": 6724,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6721,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 6686,
									"end": 6725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "tag",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6659,
									"end": 6660,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6652,
									"end": 6657,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6639,
									"end": 6661,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6639,
									"end": 6661,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6555,
									"end": 6741,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6848,
									"end": 6850,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6843,
									"end": 6846,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6840,
									"end": 6851,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 6914,
									"end": 6919,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 6882,
									"end": 6920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 6984,
									"end": 6994,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 6966,
									"end": 6995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6956,
									"end": 6964,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6952,
									"end": 6996,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7149,
									"end": 7151,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7137,
									"end": 7147,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7134,
									"end": 7152,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7170,
									"end": 7178,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7155,
									"end": 7178,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7155,
									"end": 7178,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 7267,
									"end": 7270,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 7249,
									"end": 7271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7239,
									"end": 7247,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7235,
									"end": 7272,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7222,
									"end": 7233,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 7193,
									"end": 7273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6852,
									"end": 7283,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6852,
									"end": 7283,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "tag",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6747,
									"end": 7290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7350,
									"end": 7358,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7400,
									"end": 7405,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7394,
									"end": 7398,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7390,
									"end": 7406,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 7369,
									"end": 7406,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7369,
									"end": 7406,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7296,
									"end": 7413,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7463,
									"end": 7469,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7540,
									"end": 7546,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7532,
									"end": 7537,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7529,
									"end": 7530,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7525,
									"end": 7538,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 7496,
									"end": 7547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7492,
									"end": 7548,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7577,
									"end": 7581,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7571,
									"end": 7575,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7567,
									"end": 7582,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7557,
									"end": 7582,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7557,
									"end": 7582,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7470,
									"end": 7588,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7588,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7669,
									"end": 7673,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 7840,
									"end": 7843,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7834,
									"end": 7838,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 7815,
									"end": 7844,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7807,
									"end": 7844,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7807,
									"end": 7844,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7877,
									"end": 7880,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7874,
									"end": 7875,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7870,
									"end": 7881,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7864,
									"end": 7868,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7861,
									"end": 7882,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 7882,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 7882,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7593,
									"end": 7888,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 8043,
									"end": 8046,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 8010,
									"end": 8047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8112,
									"end": 8130,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8104,
									"end": 8110,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8101,
									"end": 8131,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 8134,
									"end": 8152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "tag",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "tag",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 8210,
									"end": 8214,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8204,
									"end": 8215,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 8178,
									"end": 8216,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "tag",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 8323,
									"end": 8329,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8315,
									"end": 8321,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 8263,
									"end": 8330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8357,
									"end": 8358,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8381,
									"end": 8385,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8368,
									"end": 8385,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8368,
									"end": 8385,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8413,
									"end": 8415,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8405,
									"end": 8411,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8402,
									"end": 8416,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8430,
									"end": 8431,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9087,
									"end": 9088,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9104,
									"end": 9110,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9153,
									"end": 9162,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9148,
									"end": 9151,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 9144,
									"end": 9163,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9138,
									"end": 9164,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9129,
									"end": 9164,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9129,
									"end": 9164,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "tag",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 9264,
									"end": 9270,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9257,
									"end": 9262,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 9204,
									"end": 9271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "tag",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9198,
									"end": 9202,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9191,
									"end": 9272,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9060,
									"end": 9282,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "tag",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8477,
									"end": 8481,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8473,
									"end": 8482,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 8465,
									"end": 8471,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8461,
									"end": 8483,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 8543,
									"end": 8547,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 8511,
									"end": 8548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "tag",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8570,
									"end": 8571,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "tag",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8598,
									"end": 8605,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8595,
									"end": 8596,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8592,
									"end": 8606,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8677,
									"end": 8686,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8672,
									"end": 8675,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8668,
									"end": 8687,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8662,
									"end": 8688,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8654,
									"end": 8660,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8647,
									"end": 8689,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8728,
									"end": 8729,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8720,
									"end": 8726,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8716,
									"end": 8730,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8706,
									"end": 8730,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8706,
									"end": 8730,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8775,
									"end": 8777,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8764,
									"end": 8773,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8760,
									"end": 8778,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8747,
									"end": 8778,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 8747,
									"end": 8778,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8621,
									"end": 8625,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8618,
									"end": 8619,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8614,
									"end": 8626,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8609,
									"end": 8626,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8609,
									"end": 8626,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "tag",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8820,
									"end": 8826,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8811,
									"end": 8818,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8808,
									"end": 8827,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8878,
									"end": 8887,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8873,
									"end": 8876,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8869,
									"end": 8888,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8863,
									"end": 8889,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 8963,
									"end": 8967,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8955,
									"end": 8961,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8951,
									"end": 8968,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8940,
									"end": 8949,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 8921,
									"end": 8969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8913,
									"end": 8919,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8906,
									"end": 8970,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8828,
									"end": 8984,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9030,
									"end": 9031,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9026,
									"end": 9027,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 9018,
									"end": 9024,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 9014,
									"end": 9028,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 9010,
									"end": 9032,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9004,
									"end": 9008,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8997,
									"end": 9033,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "tag",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7893,
									"end": 9288,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 180,
									"end": 7880,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 180,
									"end": 7880,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 180,
									"end": 7880,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 7880,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 180,
									"end": 7880,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 7880,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 7880,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 180,
									"end": 7880,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 7880,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220346cedd78c8de6014a09f251cc8f0f95cd4d2bbc32d49f5c984ac0aad817508a64736f6c634300081a0033",
									".code": [
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "5F64B55B"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "9CD441DA"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "9CD441DA"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "C915CC24"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "DC5FA6C5"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "5F64B55B"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "9C8F9F23"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "140E6247"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "140E6247"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "19E36F3B"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "902F1AC"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "FC63D10"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 7880,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 7683,
											"end": 7864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 7683,
											"end": 7864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 230,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 230,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 5500,
											"end": 6675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 5500,
											"end": 6675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 624,
											"end": 647,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 624,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 624,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 257,
											"end": 277,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 257,
											"end": 277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 257,
											"end": 277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 656,
											"end": 676,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 656,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 656,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3888,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3888,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3888,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2488,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2488,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 6686,
											"end": 7675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 6686,
											"end": 7675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 594,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 594,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7729,
											"end": 7736,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7841,
											"end": 7849,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 7841,
											"end": 7849,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7851,
											"end": 7859,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7851,
											"end": 7859,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7833,
											"end": 7860,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7833,
											"end": 7860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7833,
											"end": 7860,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7833,
											"end": 7860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 230,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5634,
											"end": 5635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5631,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5622,
											"end": 5635,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 5614,
											"end": 5658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5614,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5742,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5730,
											"end": 5738,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5730,
											"end": 5738,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5742,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5758,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5730,
											"end": 5758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5754,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5746,
											"end": 5754,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5758,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5758,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5730,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5722,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5722,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5900,
											"end": 5904,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 5894,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 5882,
											"end": 5891,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5882,
											"end": 5897,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5882,
											"end": 5897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5897,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5882,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5882,
											"end": 5904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5855,
											"end": 5904,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5855,
											"end": 5904,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6037,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 6029,
											"end": 6037,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 6029,
											"end": 6056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6009,
											"end": 6025,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6006,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5998,
											"end": 6006,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5998,
											"end": 6025,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6025,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5998,
											"end": 6025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6025,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5998,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5998,
											"end": 6057,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5998,
											"end": 6057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6057,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5998,
											"end": 6057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 6057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 6057,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6169,
											"end": 6176,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6155,
											"end": 6165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6155,
											"end": 6176,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6155,
											"end": 6176,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 6147,
											"end": 6198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 6147,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6259,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6253,
											"end": 6259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6259,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6259,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6253,
											"end": 6259,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6259,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6259,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6253,
											"end": 6259,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6272,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6253,
											"end": 6272,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6272,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 6273,
											"end": 6283,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6297,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 6300,
											"end": 6309,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 6253,
											"end": 6310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 6253,
											"end": 6310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6361,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 6355,
											"end": 6361,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6361,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6361,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6355,
											"end": 6361,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6361,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6361,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6355,
											"end": 6361,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6370,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6355,
											"end": 6370,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6370,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 6371,
											"end": 6381,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6383,
											"end": 6393,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 6355,
											"end": 6394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 6355,
											"end": 6394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6491,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 6483,
											"end": 6491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 6483,
											"end": 6511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6511,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6530,
											"end": 6540,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6526,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 6518,
											"end": 6526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6518,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6613,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "631FB37DBA9BBCB8B2F3BE2D669E365AE9F1BD850CC57DFE8B7CCD7D979A2BBA"
										},
										{
											"begin": 6623,
											"end": 6629,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6623,
											"end": 6629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6623,
											"end": 6629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6623,
											"end": 6629,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6623,
											"end": 6629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6623,
											"end": 6629,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6623,
											"end": 6629,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6623,
											"end": 6629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6623,
											"end": 6629,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6623,
											"end": 6629,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6623,
											"end": 6629,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6632,
											"end": 6641,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6660,
											"end": 6670,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 6589,
											"end": 6671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6671,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 5564,
											"end": 6675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5564,
											"end": 6675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 6675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 624,
											"end": 647,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 277,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 676,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 3976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 3996,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4094,
											"end": 4095,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4091,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4074,
											"end": 4095,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 4066,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4066,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4268,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4236,
											"end": 4246,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 4226,
											"end": 4247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4247,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4226,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4268,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4268,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 4218,
											"end": 4302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 4218,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4366,
											"end": 4388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 4391,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4391,
											"end": 4404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4391,
											"end": 4404,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 4391,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4366,
											"end": 4404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4366,
											"end": 4404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4437,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 4411,
											"end": 4466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 4411,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4599,
											"end": 4607,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4599,
											"end": 4607,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4579,
											"end": 4596,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4579,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 4579,
											"end": 4607,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4579,
											"end": 4607,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4579,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4579,
											"end": 4607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4579,
											"end": 4607,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 4579,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 4578,
											"end": 4625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4578,
											"end": 4625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4625,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 4578,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4565,
											"end": 4625,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4565,
											"end": 4625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4692,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4666,
											"end": 4674,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4666,
											"end": 4674,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4663,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4646,
											"end": 4674,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4646,
											"end": 4674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4674,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4646,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4645,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4645,
											"end": 4692,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4645,
											"end": 4692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4645,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4645,
											"end": 4692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4645,
											"end": 4692,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4645,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4692,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4800,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4804,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4822,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4822,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 4790,
											"end": 4822,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4808,
											"end": 4822,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4822,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 4790,
											"end": 4822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 4782,
											"end": 4872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 4782,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4956,
											"end": 4966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4944,
											"end": 4966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 4995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4981,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4973,
											"end": 4981,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4973,
											"end": 4995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 5082,
											"end": 5092,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5111,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5076,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 5076,
											"end": 5112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 5193,
											"end": 5203,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5205,
											"end": 5215,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5177,
											"end": 5216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5177,
											"end": 5216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5229,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5223,
											"end": 5229,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5229,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5229,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5223,
											"end": 5229,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5229,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5229,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5223,
											"end": 5229,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5238,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5223,
											"end": 5238,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5238,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 5239,
											"end": 5249,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5251,
											"end": 5261,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5223,
											"end": 5262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5223,
											"end": 5262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5347,
											"end": 5357,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "PUSH",
											"source": 5,
											"value": "1DC8BB69DF2B8E91FBDCBFCF93D951B3F0000F085A95FE3F7946D6161439245D"
										},
										{
											"begin": 5359,
											"end": 5369,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5371,
											"end": 5381,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5400,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 5330,
											"end": 5401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5401,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 5457,
											"end": 5488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 5492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2633,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2637,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2651,
											"end": 2652,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2648,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2652,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2618,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2775,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2756,
											"end": 2775,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2775,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2776,
											"end": 2786,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2800,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2810,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2756,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2756,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2818,
											"end": 2837,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2838,
											"end": 2848,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 2862,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2872,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2818,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2818,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 2971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3072,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3054,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 3054,
											"end": 3067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3067,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3054,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3171,
											"end": 3178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3168,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3161,
											"end": 3178,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3161,
											"end": 3178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3178,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3161,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 3156,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3179,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3156,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3300,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3344,
											"end": 3352,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3344,
											"end": 3352,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3328,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 3328,
											"end": 3341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3341,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3328,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3325,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3318,
											"end": 3341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3318,
											"end": 3341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3341,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3318,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3318,
											"end": 3352,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3318,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3352,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3318,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3444,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3436,
											"end": 3444,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 3420,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3433,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3420,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3417,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3410,
											"end": 3433,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3433,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3410,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3433,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3410,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3410,
											"end": 3444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3300,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 3300,
											"end": 3499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3300,
											"end": 3499,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3300,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 3592,
											"end": 3602,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3604,
											"end": 3613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3586,
											"end": 3614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3718,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3710,
											"end": 3718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3710,
											"end": 3729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3744,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3736,
											"end": 3744,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3736,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3846,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E"
										},
										{
											"begin": 3848,
											"end": 3855,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3857,
											"end": 3864,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3875,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3821,
											"end": 3876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2553,
											"end": 3880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6808,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6795,
											"end": 6804,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6795,
											"end": 6808,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6787,
											"end": 6831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 6787,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 6890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6878,
											"end": 6886,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 6878,
											"end": 6886,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6878,
											"end": 6890,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6878,
											"end": 6906,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6878,
											"end": 6906,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6878,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 6878,
											"end": 6906,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6878,
											"end": 6906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6905,
											"end": 6906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6894,
											"end": 6902,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 6894,
											"end": 6902,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6894,
											"end": 6906,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6878,
											"end": 6906,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 6878,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6870,
											"end": 6932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 6870,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6973,
											"end": 6997,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 7012,
											"end": 7015,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 7000,
											"end": 7009,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7000,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 7000,
											"end": 7015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7000,
											"end": 7015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7000,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7000,
											"end": 7015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7000,
											"end": 7015,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 7000,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7000,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 7000,
											"end": 7022,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7000,
											"end": 7022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7000,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 7000,
											"end": 7022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7000,
											"end": 7022,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 7000,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6973,
											"end": 7022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6973,
											"end": 7022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7173,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7154,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7146,
											"end": 7154,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 7146,
											"end": 7173,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 7146,
											"end": 7173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7173,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 7146,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7126,
											"end": 7142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7123,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 7115,
											"end": 7123,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7115,
											"end": 7142,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7115,
											"end": 7142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7142,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7115,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 7115,
											"end": 7174,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 7115,
											"end": 7174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7174,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 7115,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7244,
											"end": 7251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7240,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7251,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7251,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7222,
											"end": 7273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7222,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7320,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 7314,
											"end": 7320,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7314,
											"end": 7320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7320,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7320,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7314,
											"end": 7320,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7320,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7320,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7314,
											"end": 7320,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7333,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7314,
											"end": 7333,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7333,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 7334,
											"end": 7344,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7354,
											"end": 7358,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 7361,
											"end": 7370,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 7314,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 7314,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7416,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 7410,
											"end": 7416,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7410,
											"end": 7416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7416,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7416,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7410,
											"end": 7416,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7416,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7416,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7410,
											"end": 7416,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7425,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7410,
											"end": 7425,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7425,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 7426,
											"end": 7436,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7438,
											"end": 7448,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 7410,
											"end": 7449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 7410,
											"end": 7449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7506,
											"end": 7522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7502,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7494,
											"end": 7502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 7494,
											"end": 7522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7541,
											"end": 7551,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7537,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 7529,
											"end": 7537,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 7529,
											"end": 7551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7603,
											"end": 7613,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "PUSH",
											"source": 5,
											"value": "631FB37DBA9BBCB8B2F3BE2D669E365AE9F1BD850CC57DFE8B7CCD7D979A2BBA"
										},
										{
											"begin": 7623,
											"end": 7629,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 7623,
											"end": 7629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7623,
											"end": 7629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7623,
											"end": 7629,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7623,
											"end": 7629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7623,
											"end": 7629,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7623,
											"end": 7629,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 7623,
											"end": 7629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7623,
											"end": 7629,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7623,
											"end": 7629,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7623,
											"end": 7629,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7632,
											"end": 7641,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7660,
											"end": 7670,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 7589,
											"end": 7671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7671,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 6750,
											"end": 7675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6750,
											"end": 7675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 8079,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 2408,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1677,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1827,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1891,
											"end": 1892,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1957,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1964,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1960,
											"end": 1961,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1960,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1960,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2101,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2101,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2123,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2123,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2123,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2224,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 2210,
											"end": 2215,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2210,
											"end": 2215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2215,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 2210,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2210,
											"end": 2219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2209,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2205,
											"end": 2224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2205,
											"end": 2224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 2243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2316,
											"end": 2317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2312,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2311,
											"end": 2317,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2307,
											"end": 2343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2330,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2343,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2307,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1595,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1431,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1496,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1579,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1583,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1591,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1595,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1319,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 1242,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1313,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1319,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1443,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 1325,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 1430,
											"end": 1435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 1412,
											"end": 1436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1410,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1781,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1449,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1610,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1606,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1687,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 1671,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 1621,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 1692,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 1621,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 1770,
											"end": 1772,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1768,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1752,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 1702,
											"end": 1774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1774,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 1702,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1781,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1781,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1868,
											"end": 1985,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 1868,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1967,
											"end": 1979,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2240,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 2114,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2233,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2234,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2234,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2240,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2342,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 2246,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 2330,
											"end": 2335,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 2312,
											"end": 2336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2336,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 2312,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2342,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2342,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2470,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 2348,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2421,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 2439,
											"end": 2444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2421,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 2421,
											"end": 2445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2421,
											"end": 2445,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 2421,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2446,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 2401,
											"end": 2464,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2462,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2464,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 2401,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2615,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 2476,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2567,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2538,
											"end": 2567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2538,
											"end": 2567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 2603,
											"end": 2608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 2576,
											"end": 2609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2609,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 2576,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2615,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2615,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2743,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 2621,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 2712,
											"end": 2717,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 2694,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2718,
											"name": "tag",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 2694,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2692,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2719,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 2674,
											"end": 2737,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2735,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2737,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 2674,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2888,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 2749,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2800,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2840,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 2876,
											"end": 2881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 2849,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2882,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 2849,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2888,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 3368,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2894,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 2976,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3021,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3016,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3017,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2990,
											"end": 3022,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 3106,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 2987,
											"end": 3106,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3025,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 3025,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 3025,
											"end": 3104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3025,
											"end": 3104,
											"name": "tag",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 3025,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 3106,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 2987,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3145,
											"end": 3146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 3215,
											"end": 3222,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3212,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3213,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 3170,
											"end": 3223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3160,
											"end": 3223,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3160,
											"end": 3223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 3343,
											"end": 3350,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3340,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3341,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 3298,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3351,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 3298,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 3368,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 3368,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 3368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 3368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3464,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 3374,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3456,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3458,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3464,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3464,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3579,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 3470,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 3566,
											"end": 3571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 3551,
											"end": 3572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3572,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 3551,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3573,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3795,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3585,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3672,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3712,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3699,
											"end": 3708,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 3785,
											"end": 3786,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3783,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 3723,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3795,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3861,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 3801,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 4009,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 3867,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 3968,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 3977,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 3995,
											"end": 4000,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 3977,
											"end": 4001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4001,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 3977,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3968,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 3968,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3968,
											"end": 4002,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 3968,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 3950,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 4003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 4003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 4009,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 4009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 4009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 4009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4141,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 4015,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4065,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 4129,
											"end": 4134,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4098,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 4098,
											"end": 4135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4098,
											"end": 4135,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 4098,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4085,
											"end": 4135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4085,
											"end": 4135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4141,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4147,
											"end": 4287,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 4147,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4211,
											"end": 4220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 4275,
											"end": 4280,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 4244,
											"end": 4281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4281,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 4244,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4231,
											"end": 4281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4231,
											"end": 4281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4147,
											"end": 4287,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4147,
											"end": 4287,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4147,
											"end": 4287,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4147,
											"end": 4287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4452,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 4293,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4394,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 4439,
											"end": 4444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4394,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 4394,
											"end": 4445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4394,
											"end": 4445,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 4394,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4446,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4452,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4452,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4708,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4458,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4603,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4592,
											"end": 4601,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4588,
											"end": 4606,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4606,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 4698,
											"end": 4699,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4687,
											"end": 4696,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4683,
											"end": 4700,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 4616,
											"end": 4701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 4701,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 4616,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4708,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4708,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4708,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4708,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4714,
											"end": 5188,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4714,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 4788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4839,
											"end": 4841,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4827,
											"end": 4836,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4825,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4837,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 4842,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4807,
											"end": 4926,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4807,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 4807,
											"end": 4926,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 4845,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 4845,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4924,
											"name": "tag",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 4845,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4807,
											"end": 4926,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 4807,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 4966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 5035,
											"end": 5042,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5032,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4990,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 4990,
											"end": 5043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4990,
											"end": 5043,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 4990,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5043,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 5053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5094,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5118,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 5163,
											"end": 5170,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5143,
											"end": 5152,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 5118,
											"end": 5171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5171,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 5118,
											"end": 5171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5171,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5063,
											"end": 5181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4714,
											"end": 5188,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4714,
											"end": 5188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4714,
											"end": 5188,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4714,
											"end": 5188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4714,
											"end": 5188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4714,
											"end": 5188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5194,
											"end": 5416,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 5194,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5327,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5323,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5310,
											"end": 5328,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5338,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 5406,
											"end": 5407,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5395,
											"end": 5404,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5391,
											"end": 5408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5388,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5338,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 5338,
											"end": 5409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5338,
											"end": 5409,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 5338,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5194,
											"end": 5416,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5194,
											"end": 5416,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5194,
											"end": 5416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5194,
											"end": 5416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5194,
											"end": 5416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 6041,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 5422,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5507,
											"end": 5513,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5515,
											"end": 5521,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5566,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5552,
											"end": 5561,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5550,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5562,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5567,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5532,
											"end": 5651,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5532,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 5532,
											"end": 5651,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 5570,
											"end": 5649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5532,
											"end": 5651,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 5532,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 5760,
											"end": 5767,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5740,
											"end": 5749,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5758,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 5715,
											"end": 5768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 5768,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 5715,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5705,
											"end": 5768,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5705,
											"end": 5768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5661,
											"end": 5778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5843,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 5888,
											"end": 5895,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5879,
											"end": 5885,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5877,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 5886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5843,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 5843,
											"end": 5896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5843,
											"end": 5896,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 5843,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5833,
											"end": 5896,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5833,
											"end": 5896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 5947,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5971,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 6016,
											"end": 6023,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6007,
											"end": 6013,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5996,
											"end": 6005,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5992,
											"end": 6014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 5971,
											"end": 6024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 6024,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 5971,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 6024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 6024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5916,
											"end": 6034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 6041,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 6041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 6041,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 6041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 6041,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 6041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6133,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 6047,
											"end": 6133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6122,
											"end": 6126,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6115,
											"end": 6120,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6111,
											"end": 6127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6100,
											"end": 6127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6100,
											"end": 6127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6139,
											"end": 6251,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 6139,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6222,
											"end": 6244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 6238,
											"end": 6243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6222,
											"end": 6244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 6222,
											"end": 6244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6222,
											"end": 6244,
											"name": "tag",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 6222,
											"end": 6244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6217,
											"end": 6220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6210,
											"end": 6245,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6139,
											"end": 6251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6139,
											"end": 6251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6139,
											"end": 6251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6471,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 6257,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6384,
											"end": 6386,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6373,
											"end": 6382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6361,
											"end": 6387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6361,
											"end": 6387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 6461,
											"end": 6462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6450,
											"end": 6459,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6446,
											"end": 6463,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6437,
											"end": 6443,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 6397,
											"end": 6464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6464,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 6397,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6471,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6471,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6806,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 6477,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6806,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6812,
											"end": 6930,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 6812,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6899,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 6917,
											"end": 6922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6899,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 6899,
											"end": 6923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6899,
											"end": 6923,
											"name": "tag",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 6899,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6924,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6812,
											"end": 6930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6812,
											"end": 6930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6812,
											"end": 6930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6936,
											"end": 7158,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6936,
											"end": 7158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7029,
											"end": 7033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7069,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7056,
											"end": 7065,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7044,
											"end": 7070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7044,
											"end": 7070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 7148,
											"end": 7149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7137,
											"end": 7146,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7133,
											"end": 7150,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7130,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 7080,
											"end": 7151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7151,
											"name": "tag",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 7080,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6936,
											"end": 7158,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6936,
											"end": 7158,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6936,
											"end": 7158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6936,
											"end": 7158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6936,
											"end": 7158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7493,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7164,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7223,
											"end": 7229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7272,
											"end": 7274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7260,
											"end": 7269,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7258,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7270,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7243,
											"end": 7275,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7359,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 7240,
											"end": 7359,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7278,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 7278,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 7278,
											"end": 7357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7278,
											"end": 7357,
											"name": "tag",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 7278,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7359,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 7240,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7398,
											"end": 7399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7423,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 7468,
											"end": 7475,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7465,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7448,
											"end": 7457,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7444,
											"end": 7466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7423,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 7423,
											"end": 7476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7423,
											"end": 7476,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 7423,
											"end": 7476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7413,
											"end": 7476,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7413,
											"end": 7476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7369,
											"end": 7486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7493,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7973,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 7499,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7575,
											"end": 7581,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7624,
											"end": 7626,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7612,
											"end": 7621,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7603,
											"end": 7610,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7599,
											"end": 7622,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7627,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7592,
											"end": 7711,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7592,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 7592,
											"end": 7711,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 7630,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 7630,
											"end": 7709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7709,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 7630,
											"end": 7709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7592,
											"end": 7711,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 7592,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7750,
											"end": 7751,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 7820,
											"end": 7827,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7811,
											"end": 7817,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7809,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7796,
											"end": 7818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 7775,
											"end": 7828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 7828,
											"name": "tag",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 7775,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7828,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7721,
											"end": 7838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7877,
											"end": 7879,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 7948,
											"end": 7955,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 7945,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 7937,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7924,
											"end": 7946,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7903,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 7903,
											"end": 7956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7903,
											"end": 7956,
											"name": "tag",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 7903,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7893,
											"end": 7956,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7893,
											"end": 7956,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 7966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7973,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7973,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8159,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 7979,
											"end": 8159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8027,
											"end": 8104,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8024,
											"end": 8025,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8017,
											"end": 8105,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8128,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8121,
											"end": 8122,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8114,
											"end": 8129,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8152,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8145,
											"end": 8146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8485,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 8165,
											"end": 8485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8209,
											"end": 8215,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8246,
											"end": 8247,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8240,
											"end": 8244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8236,
											"end": 8248,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8293,
											"end": 8294,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8287,
											"end": 8291,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8283,
											"end": 8295,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8332,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 8304,
											"end": 8385,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 8362,
											"end": 8368,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8375,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8348,
											"end": 8375,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8348,
											"end": 8375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8385,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 8304,
											"end": 8385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8432,
											"end": 8434,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8424,
											"end": 8430,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8421,
											"end": 8435,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8398,
											"end": 8436,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8395,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 8395,
											"end": 8479,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 8451,
											"end": 8469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "tag",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8395,
											"end": 8479,
											"name": "tag",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 8395,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8216,
											"end": 8485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8485,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8491,
											"end": 8659,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 8491,
											"end": 8659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8631,
											"end": 8651,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E74206D757374206265203E20300000000000000000000000000000"
										},
										{
											"begin": 8627,
											"end": 8628,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8619,
											"end": 8625,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8615,
											"end": 8629,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8608,
											"end": 8652,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8491,
											"end": 8659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8491,
											"end": 8659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8665,
											"end": 9031,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 8665,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8828,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 8892,
											"end": 8894,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 8887,
											"end": 8890,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8828,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 8828,
											"end": 8895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8828,
											"end": 8895,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 8828,
											"end": 8895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 8895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 8895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8904,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 8993,
											"end": 8996,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8904,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 8904,
											"end": 8997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8904,
											"end": 8997,
											"name": "tag",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 8904,
											"end": 8997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9022,
											"end": 9024,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9020,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9013,
											"end": 9025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9006,
											"end": 9025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9006,
											"end": 9025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8665,
											"end": 9031,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8665,
											"end": 9031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8665,
											"end": 9031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8665,
											"end": 9031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9037,
											"end": 9456,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 9037,
											"end": 9456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9203,
											"end": 9207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9241,
											"end": 9243,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9230,
											"end": 9239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9226,
											"end": 9244,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9218,
											"end": 9244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9218,
											"end": 9244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9290,
											"end": 9299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9284,
											"end": 9288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9280,
											"end": 9300,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9265,
											"end": 9274,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9261,
											"end": 9278,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9254,
											"end": 9301,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9318,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 9444,
											"end": 9448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9318,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 9318,
											"end": 9449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9318,
											"end": 9449,
											"name": "tag",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 9318,
											"end": 9449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9310,
											"end": 9449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9310,
											"end": 9449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9037,
											"end": 9456,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9037,
											"end": 9456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9037,
											"end": 9456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9037,
											"end": 9456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9633,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 9462,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9602,
											"end": 9625,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742072657365727665730000000000000000000000"
										},
										{
											"begin": 9598,
											"end": 9599,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9590,
											"end": 9596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9586,
											"end": 9600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9579,
											"end": 9626,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 10005,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 9639,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9781,
											"end": 9784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9802,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 9866,
											"end": 9868,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 9861,
											"end": 9864,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9802,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 9802,
											"end": 9869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9802,
											"end": 9869,
											"name": "tag",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 9802,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9795,
											"end": 9869,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9795,
											"end": 9869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9878,
											"end": 9971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 9967,
											"end": 9970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9878,
											"end": 9971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 9878,
											"end": 9971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9878,
											"end": 9971,
											"name": "tag",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 9878,
											"end": 9971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9996,
											"end": 9998,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9991,
											"end": 9994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9987,
											"end": 9999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 9999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 9999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 10005,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 10005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 10005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 10005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10011,
											"end": 10430,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 10011,
											"end": 10430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10177,
											"end": 10181,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10215,
											"end": 10217,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10204,
											"end": 10213,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10192,
											"end": 10218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10192,
											"end": 10218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10264,
											"end": 10273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10258,
											"end": 10262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10254,
											"end": 10274,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10239,
											"end": 10248,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10235,
											"end": 10252,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10228,
											"end": 10275,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10292,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 10418,
											"end": 10422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10292,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 10292,
											"end": 10423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10292,
											"end": 10423,
											"name": "tag",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 10292,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10284,
											"end": 10423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10284,
											"end": 10423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10011,
											"end": 10430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10011,
											"end": 10430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10011,
											"end": 10430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10011,
											"end": 10430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10436,
											"end": 10616,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 10436,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10484,
											"end": 10561,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10481,
											"end": 10482,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10474,
											"end": 10562,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10581,
											"end": 10585,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 10578,
											"end": 10579,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10571,
											"end": 10586,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10605,
											"end": 10609,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10602,
											"end": 10603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10595,
											"end": 10610,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 11032,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 10622,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10662,
											"end": 10669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10685,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 10703,
											"end": 10704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10685,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 10685,
											"end": 10705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10685,
											"end": 10705,
											"name": "tag",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 10685,
											"end": 10705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10680,
											"end": 10705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10680,
											"end": 10705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10719,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "473"
										},
										{
											"begin": 10737,
											"end": 10738,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10719,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 10719,
											"end": 10739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10719,
											"end": 10739,
											"name": "tag",
											"source": 6,
											"value": "473"
										},
										{
											"begin": 10719,
											"end": 10739,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 10739,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 10739,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10774,
											"end": 10775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10771,
											"end": 10772,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10767,
											"end": 10776,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 10814,
											"end": 10825,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 10796,
											"end": 10826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10826,
											"name": "tag",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 10796,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10785,
											"end": 10826,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10785,
											"end": 10826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10975,
											"end": 10976,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10966,
											"end": 10973,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10962,
											"end": 10977,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10959,
											"end": 10960,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10956,
											"end": 10978,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10936,
											"end": 10937,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10929,
											"end": 10938,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10909,
											"end": 10992,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10886,
											"end": 11025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 10886,
											"end": 11025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11005,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 11005,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 11005,
											"end": 11023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11005,
											"end": 11023,
											"name": "tag",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 11005,
											"end": 11023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10886,
											"end": 11025,
											"name": "tag",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 10886,
											"end": 11025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10670,
											"end": 11032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 11032,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 11032,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 11032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 11032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 11032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11038,
											"end": 11218,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 11038,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11086,
											"end": 11163,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11083,
											"end": 11084,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11076,
											"end": 11164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11187,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 11180,
											"end": 11181,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11173,
											"end": 11188,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11207,
											"end": 11211,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11204,
											"end": 11205,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11197,
											"end": 11212,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11409,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 11224,
											"end": 11409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11264,
											"end": 11265,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11281,
											"end": 11301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 11299,
											"end": 11300,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11281,
											"end": 11301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 11281,
											"end": 11301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11281,
											"end": 11301,
											"name": "tag",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 11281,
											"end": 11301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11276,
											"end": 11301,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11276,
											"end": 11301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 11333,
											"end": 11334,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 11315,
											"end": 11335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "tag",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11310,
											"end": 11335,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11310,
											"end": 11335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11355,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 11344,
											"end": 11379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11359,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 11359,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 11359,
											"end": 11377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11359,
											"end": 11377,
											"name": "tag",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 11359,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11379,
											"name": "tag",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 11344,
											"end": 11379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11401,
											"end": 11402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11394,
											"end": 11403,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11389,
											"end": 11403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11389,
											"end": 11403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11409,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11409,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11415,
											"end": 11606,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 11415,
											"end": 11606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11455,
											"end": 11458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "484"
										},
										{
											"begin": 11492,
											"end": 11493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11474,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 11474,
											"end": 11494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11474,
											"end": 11494,
											"name": "tag",
											"source": 6,
											"value": "484"
										},
										{
											"begin": 11474,
											"end": 11494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11469,
											"end": 11494,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11469,
											"end": 11494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "485"
										},
										{
											"begin": 11526,
											"end": 11527,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 11508,
											"end": 11528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11528,
											"name": "tag",
											"source": 6,
											"value": "485"
										},
										{
											"begin": 11508,
											"end": 11528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11503,
											"end": 11528,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11503,
											"end": 11528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11551,
											"end": 11552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11548,
											"end": 11549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11544,
											"end": 11553,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11537,
											"end": 11553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11537,
											"end": 11553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11572,
											"end": 11575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11569,
											"end": 11570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11566,
											"end": 11576,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11563,
											"end": 11599,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11563,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 11563,
											"end": 11599,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11579,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 11579,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 11579,
											"end": 11597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11579,
											"end": 11597,
											"name": "tag",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 11579,
											"end": 11597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11563,
											"end": 11599,
											"name": "tag",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 11563,
											"end": 11599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11415,
											"end": 11606,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11415,
											"end": 11606,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11415,
											"end": 11606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11415,
											"end": 11606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11415,
											"end": 11606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11612,
											"end": 11779,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 11612,
											"end": 11779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11752,
											"end": 11771,
											"name": "PUSH",
											"source": 6,
											"value": "536C69707061676520746F6F2068696768000000000000000000000000000000"
										},
										{
											"begin": 11748,
											"end": 11749,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11740,
											"end": 11746,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11736,
											"end": 11750,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11729,
											"end": 11772,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11612,
											"end": 11779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11612,
											"end": 11779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11785,
											"end": 12151,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 11785,
											"end": 12151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11927,
											"end": 11930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11948,
											"end": 12015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 12012,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 12007,
											"end": 12010,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11948,
											"end": 12015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 11948,
											"end": 12015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11948,
											"end": 12015,
											"name": "tag",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 11948,
											"end": 12015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11941,
											"end": 12015,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11941,
											"end": 12015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12024,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 12113,
											"end": 12116,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12024,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 12024,
											"end": 12117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12024,
											"end": 12117,
											"name": "tag",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 12024,
											"end": 12117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12142,
											"end": 12144,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12137,
											"end": 12140,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12133,
											"end": 12145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12126,
											"end": 12145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12126,
											"end": 12145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11785,
											"end": 12151,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11785,
											"end": 12151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11785,
											"end": 12151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11785,
											"end": 12151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12157,
											"end": 12576,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 12157,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12323,
											"end": 12327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12361,
											"end": 12363,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12350,
											"end": 12359,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12346,
											"end": 12364,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12338,
											"end": 12364,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12338,
											"end": 12364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12410,
											"end": 12419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12404,
											"end": 12408,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12400,
											"end": 12420,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12396,
											"end": 12397,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12385,
											"end": 12394,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12381,
											"end": 12398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12374,
											"end": 12421,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12438,
											"end": 12569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 12564,
											"end": 12568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12438,
											"end": 12569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 12438,
											"end": 12569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12438,
											"end": 12569,
											"name": "tag",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 12438,
											"end": 12569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12430,
											"end": 12569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12430,
											"end": 12569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12157,
											"end": 12576,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12157,
											"end": 12576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12157,
											"end": 12576,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12157,
											"end": 12576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 13024,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 12582,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12731,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12769,
											"end": 12771,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 12758,
											"end": 12767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12754,
											"end": 12772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12746,
											"end": 12772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12746,
											"end": 12772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12782,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 12850,
											"end": 12851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12839,
											"end": 12848,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12835,
											"end": 12852,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12826,
											"end": 12832,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12782,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 12782,
											"end": 12853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12782,
											"end": 12853,
											"name": "tag",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 12782,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12863,
											"end": 12935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 12931,
											"end": 12933,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12920,
											"end": 12929,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12916,
											"end": 12934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12907,
											"end": 12913,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12863,
											"end": 12935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 12863,
											"end": 12935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12863,
											"end": 12935,
											"name": "tag",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 12863,
											"end": 12935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12945,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "497"
										},
										{
											"begin": 13013,
											"end": 13015,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13002,
											"end": 13011,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12998,
											"end": 13016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12989,
											"end": 12995,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12945,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 12945,
											"end": 13017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12945,
											"end": 13017,
											"name": "tag",
											"source": 6,
											"value": "497"
										},
										{
											"begin": 12945,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 13024,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 13024,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 13024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 13024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 13024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 13024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 13024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13030,
											"end": 13146,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 13030,
											"end": 13146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13100,
											"end": 13121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 13115,
											"end": 13120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13100,
											"end": 13121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 13100,
											"end": 13121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13100,
											"end": 13121,
											"name": "tag",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 13100,
											"end": 13121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13093,
											"end": 13098,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13090,
											"end": 13122,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 13080,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 13080,
											"end": 13140,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13136,
											"end": 13137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13133,
											"end": 13134,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13126,
											"end": 13138,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13080,
											"end": 13140,
											"name": "tag",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 13080,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13030,
											"end": 13146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13030,
											"end": 13146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13152,
											"end": 13289,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 13152,
											"end": 13289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13206,
											"end": 13211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13237,
											"end": 13243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13231,
											"end": 13244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13222,
											"end": 13244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13222,
											"end": 13244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13253,
											"end": 13283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 13277,
											"end": 13282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13253,
											"end": 13283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 13253,
											"end": 13283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13253,
											"end": 13283,
											"name": "tag",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 13253,
											"end": 13283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13152,
											"end": 13289,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13152,
											"end": 13289,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13152,
											"end": 13289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13152,
											"end": 13289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13152,
											"end": 13289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13295,
											"end": 13640,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 13295,
											"end": 13640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13362,
											"end": 13368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13411,
											"end": 13413,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13399,
											"end": 13408,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13390,
											"end": 13397,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13386,
											"end": 13409,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13382,
											"end": 13414,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 13379,
											"end": 13498,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13379,
											"end": 13498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 13379,
											"end": 13498,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13417,
											"end": 13496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 13417,
											"end": 13496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 13417,
											"end": 13496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13417,
											"end": 13496,
											"name": "tag",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 13417,
											"end": 13496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13379,
											"end": 13498,
											"name": "tag",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 13379,
											"end": 13498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13537,
											"end": 13538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13562,
											"end": 13623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 13615,
											"end": 13622,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13606,
											"end": 13612,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13595,
											"end": 13604,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13591,
											"end": 13613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13562,
											"end": 13623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 13562,
											"end": 13623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13562,
											"end": 13623,
											"name": "tag",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 13562,
											"end": 13623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13552,
											"end": 13623,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13552,
											"end": 13623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13508,
											"end": 13633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13295,
											"end": 13640,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13295,
											"end": 13640,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13295,
											"end": 13640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13295,
											"end": 13640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13295,
											"end": 13640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13646,
											"end": 13978,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 13646,
											"end": 13978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13767,
											"end": 13771,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13805,
											"end": 13807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13794,
											"end": 13803,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13782,
											"end": 13808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13782,
											"end": 13808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13818,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 13886,
											"end": 13887,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13875,
											"end": 13884,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13871,
											"end": 13888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13862,
											"end": 13868,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13818,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 13818,
											"end": 13889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13818,
											"end": 13889,
											"name": "tag",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 13818,
											"end": 13889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13899,
											"end": 13971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13956,
											"end": 13965,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13952,
											"end": 13970,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13943,
											"end": 13949,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13899,
											"end": 13971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 13899,
											"end": 13971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13899,
											"end": 13971,
											"name": "tag",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 13899,
											"end": 13971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13646,
											"end": 13978,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13646,
											"end": 13978,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13646,
											"end": 13978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13646,
											"end": 13978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13646,
											"end": 13978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13646,
											"end": 13978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13984,
											"end": 14178,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 13984,
											"end": 14178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14024,
											"end": 14028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14044,
											"end": 14064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 14062,
											"end": 14063,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14044,
											"end": 14064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 14044,
											"end": 14064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14044,
											"end": 14064,
											"name": "tag",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 14044,
											"end": 14064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14039,
											"end": 14064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14039,
											"end": 14064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14078,
											"end": 14098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 14096,
											"end": 14097,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14078,
											"end": 14098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 14078,
											"end": 14098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14078,
											"end": 14098,
											"name": "tag",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 14078,
											"end": 14098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14073,
											"end": 14098,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14073,
											"end": 14098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14122,
											"end": 14123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14119,
											"end": 14120,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14115,
											"end": 14124,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14107,
											"end": 14124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14107,
											"end": 14124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14146,
											"end": 14147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14140,
											"end": 14144,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14137,
											"end": 14148,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 14134,
											"end": 14171,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14134,
											"end": 14171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "513"
										},
										{
											"begin": 14134,
											"end": 14171,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14151,
											"end": 14169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 14151,
											"end": 14169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 14151,
											"end": 14169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14151,
											"end": 14169,
											"name": "tag",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 14151,
											"end": 14169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14134,
											"end": 14171,
											"name": "tag",
											"source": 6,
											"value": "513"
										},
										{
											"begin": 14134,
											"end": 14171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13984,
											"end": 14178,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13984,
											"end": 14178,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13984,
											"end": 14178,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13984,
											"end": 14178,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13984,
											"end": 14178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14184,
											"end": 14737,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 14184,
											"end": 14737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14361,
											"end": 14365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14399,
											"end": 14402,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 14388,
											"end": 14397,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14384,
											"end": 14403,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14376,
											"end": 14403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14376,
											"end": 14403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14413,
											"end": 14484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 14481,
											"end": 14482,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14470,
											"end": 14479,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14466,
											"end": 14483,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14457,
											"end": 14463,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 14413,
											"end": 14484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 14413,
											"end": 14484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14413,
											"end": 14484,
											"name": "tag",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 14413,
											"end": 14484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14494,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 14562,
											"end": 14564,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14551,
											"end": 14560,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14547,
											"end": 14565,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14538,
											"end": 14544,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 14494,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 14494,
											"end": 14566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14494,
											"end": 14566,
											"name": "tag",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 14494,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14576,
											"end": 14648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 14644,
											"end": 14646,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14633,
											"end": 14642,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14629,
											"end": 14647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14620,
											"end": 14626,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 14576,
											"end": 14648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 14576,
											"end": 14648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14576,
											"end": 14648,
											"name": "tag",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 14576,
											"end": 14648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14658,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 14726,
											"end": 14728,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 14715,
											"end": 14724,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14711,
											"end": 14729,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14702,
											"end": 14708,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14658,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 14658,
											"end": 14730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14658,
											"end": 14730,
											"name": "tag",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 14658,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14184,
											"end": 14737,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 14184,
											"end": 14737,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 14184,
											"end": 14737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14184,
											"end": 14737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14184,
											"end": 14737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14184,
											"end": 14737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14184,
											"end": 14737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14184,
											"end": 14737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14743,
											"end": 14924,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 14743,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14883,
											"end": 14916,
											"name": "PUSH",
											"source": 6,
											"value": "4C697175696469747920746F2072656D6F7665206D757374206265203E203000"
										},
										{
											"begin": 14879,
											"end": 14880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14871,
											"end": 14877,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14867,
											"end": 14881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14860,
											"end": 14917,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14743,
											"end": 14924,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14743,
											"end": 14924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14930,
											"end": 15296,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 14930,
											"end": 15296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15072,
											"end": 15075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 15157,
											"end": 15159,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 15152,
											"end": 15155,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 15093,
											"end": 15160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15093,
											"end": 15160,
											"name": "tag",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 15093,
											"end": 15160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15086,
											"end": 15160,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15086,
											"end": 15160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15169,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 15258,
											"end": 15261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15169,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 15169,
											"end": 15262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15169,
											"end": 15262,
											"name": "tag",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 15169,
											"end": 15262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15287,
											"end": 15289,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15282,
											"end": 15285,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15278,
											"end": 15290,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15271,
											"end": 15290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15271,
											"end": 15290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14930,
											"end": 15296,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14930,
											"end": 15296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14930,
											"end": 15296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14930,
											"end": 15296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15302,
											"end": 15721,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 15302,
											"end": 15721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15468,
											"end": 15472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15506,
											"end": 15508,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15495,
											"end": 15504,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15491,
											"end": 15509,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15483,
											"end": 15509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15483,
											"end": 15509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15555,
											"end": 15564,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15549,
											"end": 15553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15545,
											"end": 15565,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15541,
											"end": 15542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15530,
											"end": 15539,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15526,
											"end": 15543,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15519,
											"end": 15566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15583,
											"end": 15714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 15709,
											"end": 15713,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15583,
											"end": 15714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 15583,
											"end": 15714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15583,
											"end": 15714,
											"name": "tag",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 15583,
											"end": 15714,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15575,
											"end": 15714,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15575,
											"end": 15714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15302,
											"end": 15721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15302,
											"end": 15721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15302,
											"end": 15721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15302,
											"end": 15721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15727,
											"end": 15906,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 15727,
											"end": 15906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15867,
											"end": 15898,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E74206C697175696469747920746F6B656E73000000"
										},
										{
											"begin": 15863,
											"end": 15864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15855,
											"end": 15861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15851,
											"end": 15865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15844,
											"end": 15899,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15727,
											"end": 15906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15727,
											"end": 15906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15912,
											"end": 16278,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 15912,
											"end": 16278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16054,
											"end": 16057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16075,
											"end": 16142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 16139,
											"end": 16141,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 16134,
											"end": 16137,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16075,
											"end": 16142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 16075,
											"end": 16142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16075,
											"end": 16142,
											"name": "tag",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 16075,
											"end": 16142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16068,
											"end": 16142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16068,
											"end": 16142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16151,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 16240,
											"end": 16243,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16151,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 16151,
											"end": 16244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16151,
											"end": 16244,
											"name": "tag",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 16151,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16269,
											"end": 16271,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16264,
											"end": 16267,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16260,
											"end": 16272,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15912,
											"end": 16278,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15912,
											"end": 16278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15912,
											"end": 16278,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15912,
											"end": 16278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16284,
											"end": 16703,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 16284,
											"end": 16703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16450,
											"end": 16454,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16488,
											"end": 16490,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16473,
											"end": 16491,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16465,
											"end": 16491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16465,
											"end": 16491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16537,
											"end": 16546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16531,
											"end": 16535,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16527,
											"end": 16547,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16523,
											"end": 16524,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16512,
											"end": 16521,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16508,
											"end": 16525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16501,
											"end": 16548,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16565,
											"end": 16696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 16691,
											"end": 16695,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16565,
											"end": 16696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 16565,
											"end": 16696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16565,
											"end": 16696,
											"name": "tag",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 16565,
											"end": 16696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16557,
											"end": 16696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16557,
											"end": 16696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16284,
											"end": 16703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16284,
											"end": 16703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16284,
											"end": 16703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16284,
											"end": 16703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16709,
											"end": 16883,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 16709,
											"end": 16883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16849,
											"end": 16875,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F206C697175696469747920696E2074686520706F6F6C0000000000000000"
										},
										{
											"begin": 16845,
											"end": 16846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16837,
											"end": 16843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16833,
											"end": 16847,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16826,
											"end": 16876,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16709,
											"end": 16883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16709,
											"end": 16883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16889,
											"end": 17255,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 16889,
											"end": 17255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17031,
											"end": 17034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17052,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "534"
										},
										{
											"begin": 17116,
											"end": 17118,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 17111,
											"end": 17114,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17052,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 17052,
											"end": 17119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17052,
											"end": 17119,
											"name": "tag",
											"source": 6,
											"value": "534"
										},
										{
											"begin": 17052,
											"end": 17119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17045,
											"end": 17119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17045,
											"end": 17119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17128,
											"end": 17221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 17217,
											"end": 17220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17128,
											"end": 17221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 17128,
											"end": 17221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17128,
											"end": 17221,
											"name": "tag",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 17128,
											"end": 17221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17246,
											"end": 17248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17241,
											"end": 17244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17237,
											"end": 17249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17230,
											"end": 17249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17230,
											"end": 17249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16889,
											"end": 17255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16889,
											"end": 17255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16889,
											"end": 17255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16889,
											"end": 17255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17261,
											"end": 17680,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 17261,
											"end": 17680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17427,
											"end": 17431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17465,
											"end": 17467,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17454,
											"end": 17463,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17450,
											"end": 17468,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17442,
											"end": 17468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17442,
											"end": 17468,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17514,
											"end": 17523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17508,
											"end": 17512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17504,
											"end": 17524,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17500,
											"end": 17501,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17489,
											"end": 17498,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17485,
											"end": 17502,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17478,
											"end": 17525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17542,
											"end": 17673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "537"
										},
										{
											"begin": 17668,
											"end": 17672,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17542,
											"end": 17673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 17542,
											"end": 17673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17542,
											"end": 17673,
											"name": "tag",
											"source": 6,
											"value": "537"
										},
										{
											"begin": 17542,
											"end": 17673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17534,
											"end": 17673,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17534,
											"end": 17673,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17261,
											"end": 17680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17261,
											"end": 17680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17261,
											"end": 17680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17261,
											"end": 17680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17686,
											"end": 17918,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 17686,
											"end": 17918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17826,
											"end": 17860,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E7420726573657276657320666F7220726571756573"
										},
										{
											"begin": 17822,
											"end": 17823,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17814,
											"end": 17820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17810,
											"end": 17824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17803,
											"end": 17861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17895,
											"end": 17910,
											"name": "PUSH",
											"source": 6,
											"value": "746564206C697175696469747900000000000000000000000000000000000000"
										},
										{
											"begin": 17890,
											"end": 17892,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17882,
											"end": 17888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17878,
											"end": 17893,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17871,
											"end": 17911,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17686,
											"end": 17918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17686,
											"end": 17918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17924,
											"end": 18290,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 17924,
											"end": 18290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18066,
											"end": 18069,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18087,
											"end": 18154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "540"
										},
										{
											"begin": 18151,
											"end": 18153,
											"name": "PUSH",
											"source": 6,
											"value": "2D"
										},
										{
											"begin": 18146,
											"end": 18149,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18087,
											"end": 18154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 18087,
											"end": 18154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18087,
											"end": 18154,
											"name": "tag",
											"source": 6,
											"value": "540"
										},
										{
											"begin": 18087,
											"end": 18154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18080,
											"end": 18154,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18080,
											"end": 18154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18163,
											"end": 18256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "541"
										},
										{
											"begin": 18252,
											"end": 18255,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18163,
											"end": 18256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 18163,
											"end": 18256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18163,
											"end": 18256,
											"name": "tag",
											"source": 6,
											"value": "541"
										},
										{
											"begin": 18163,
											"end": 18256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18281,
											"end": 18283,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 18276,
											"end": 18279,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18272,
											"end": 18284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18265,
											"end": 18284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18265,
											"end": 18284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17924,
											"end": 18290,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17924,
											"end": 18290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17924,
											"end": 18290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17924,
											"end": 18290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18296,
											"end": 18715,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 18296,
											"end": 18715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18462,
											"end": 18466,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18500,
											"end": 18502,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18489,
											"end": 18498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18485,
											"end": 18503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18477,
											"end": 18503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18477,
											"end": 18503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18549,
											"end": 18558,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18543,
											"end": 18547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18539,
											"end": 18559,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 18535,
											"end": 18536,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18524,
											"end": 18533,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18520,
											"end": 18537,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18513,
											"end": 18560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18577,
											"end": 18708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "543"
										},
										{
											"begin": 18703,
											"end": 18707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18577,
											"end": 18708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 18577,
											"end": 18708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18577,
											"end": 18708,
											"name": "tag",
											"source": 6,
											"value": "543"
										},
										{
											"begin": 18577,
											"end": 18708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18569,
											"end": 18708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18569,
											"end": 18708,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18296,
											"end": 18715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18296,
											"end": 18715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18296,
											"end": 18715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18296,
											"end": 18715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 19163,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 18721,
											"end": 19163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18870,
											"end": 18874,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18908,
											"end": 18910,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 18897,
											"end": 18906,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18893,
											"end": 18911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18885,
											"end": 18911,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18885,
											"end": 18911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18921,
											"end": 18992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "545"
										},
										{
											"begin": 18989,
											"end": 18990,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18978,
											"end": 18987,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18974,
											"end": 18991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18965,
											"end": 18971,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 18921,
											"end": 18992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 18921,
											"end": 18992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18921,
											"end": 18992,
											"name": "tag",
											"source": 6,
											"value": "545"
										},
										{
											"begin": 18921,
											"end": 18992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19002,
											"end": 19074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "546"
										},
										{
											"begin": 19070,
											"end": 19072,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19059,
											"end": 19068,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19055,
											"end": 19073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19046,
											"end": 19052,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 19002,
											"end": 19074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 19002,
											"end": 19074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19002,
											"end": 19074,
											"name": "tag",
											"source": 6,
											"value": "546"
										},
										{
											"begin": 19002,
											"end": 19074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19084,
											"end": 19156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "547"
										},
										{
											"begin": 19152,
											"end": 19154,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19141,
											"end": 19150,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19137,
											"end": 19155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19128,
											"end": 19134,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 19084,
											"end": 19156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 19084,
											"end": 19156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19084,
											"end": 19156,
											"name": "tag",
											"source": 6,
											"value": "547"
										},
										{
											"begin": 19084,
											"end": 19156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 19163,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 19163,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 19163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 19163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 19163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 19163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 19163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19169,
											"end": 19338,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 19169,
											"end": 19338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19309,
											"end": 19330,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E7473206D757374206265203E203000000000000000000000000000"
										},
										{
											"begin": 19305,
											"end": 19306,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19297,
											"end": 19303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19293,
											"end": 19307,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19286,
											"end": 19331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19169,
											"end": 19338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19169,
											"end": 19338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19344,
											"end": 19710,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 19344,
											"end": 19710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19486,
											"end": 19489,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19507,
											"end": 19574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "550"
										},
										{
											"begin": 19571,
											"end": 19573,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 19566,
											"end": 19569,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19507,
											"end": 19574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 19507,
											"end": 19574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19507,
											"end": 19574,
											"name": "tag",
											"source": 6,
											"value": "550"
										},
										{
											"begin": 19507,
											"end": 19574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19500,
											"end": 19574,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19500,
											"end": 19574,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19583,
											"end": 19676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "551"
										},
										{
											"begin": 19672,
											"end": 19675,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19583,
											"end": 19676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 19583,
											"end": 19676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19583,
											"end": 19676,
											"name": "tag",
											"source": 6,
											"value": "551"
										},
										{
											"begin": 19583,
											"end": 19676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19701,
											"end": 19703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19696,
											"end": 19699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19692,
											"end": 19704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19685,
											"end": 19704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19685,
											"end": 19704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19344,
											"end": 19710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19344,
											"end": 19710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19344,
											"end": 19710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19344,
											"end": 19710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19716,
											"end": 20135,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 19716,
											"end": 20135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19882,
											"end": 19886,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19920,
											"end": 19922,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19909,
											"end": 19918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19905,
											"end": 19923,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19897,
											"end": 19923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19897,
											"end": 19923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19969,
											"end": 19978,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19963,
											"end": 19967,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19959,
											"end": 19979,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 19955,
											"end": 19956,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19944,
											"end": 19953,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19940,
											"end": 19957,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19933,
											"end": 19980,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19997,
											"end": 20128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "553"
										},
										{
											"begin": 20123,
											"end": 20127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19997,
											"end": 20128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 19997,
											"end": 20128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19997,
											"end": 20128,
											"name": "tag",
											"source": 6,
											"value": "553"
										},
										{
											"begin": 19997,
											"end": 20128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19989,
											"end": 20128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19989,
											"end": 20128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19716,
											"end": 20135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19716,
											"end": 20135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19716,
											"end": 20135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19716,
											"end": 20135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20141,
											"end": 20583,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 20141,
											"end": 20583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20290,
											"end": 20294,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20328,
											"end": 20330,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 20317,
											"end": 20326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20313,
											"end": 20331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20305,
											"end": 20331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20341,
											"end": 20412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "555"
										},
										{
											"begin": 20409,
											"end": 20410,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20398,
											"end": 20407,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20394,
											"end": 20411,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20385,
											"end": 20391,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 20341,
											"end": 20412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 20341,
											"end": 20412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20341,
											"end": 20412,
											"name": "tag",
											"source": 6,
											"value": "555"
										},
										{
											"begin": 20341,
											"end": 20412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20422,
											"end": 20494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 20490,
											"end": 20492,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20479,
											"end": 20488,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20475,
											"end": 20493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20466,
											"end": 20472,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 20422,
											"end": 20494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 20422,
											"end": 20494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20422,
											"end": 20494,
											"name": "tag",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 20422,
											"end": 20494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20504,
											"end": 20576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "557"
										},
										{
											"begin": 20572,
											"end": 20574,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 20561,
											"end": 20570,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20557,
											"end": 20575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20548,
											"end": 20554,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 20504,
											"end": 20576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 20504,
											"end": 20576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20504,
											"end": 20576,
											"name": "tag",
											"source": 6,
											"value": "557"
										},
										{
											"begin": 20504,
											"end": 20576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20141,
											"end": 20583,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 20141,
											"end": 20583,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 20141,
											"end": 20583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20141,
											"end": 20583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20141,
											"end": 20583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20141,
											"end": 20583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20141,
											"end": 20583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/AutomatedMarketMaker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getReserves()": "0902f1ac",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"removeLiquidity(uint256)": "9c8f9f23",
							"reserveA()": "dc5fa6c5",
							"reserveB()": "19e36f3b",
							"swapAforB(uint256,uint256)": "140e6247",
							"swapBforA(uint256,uint256)": "c915cc24",
							"symbol()": "95d89b41",
							"tokenA()": "0fc63d10",
							"tokenB()": "5f64b55b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"TokensSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityToRemove\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountAOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountAIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBOut\",\"type\":\"uint256\"}],\"name\":\"swapAforB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountBIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAOut\",\"type\":\"uint256\"}],\"name\":\"swapBforA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"Automated Market Maker with Liquidity Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AutomatedMarketMaker.sol\":\"AutomatedMarketMaker\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/AutomatedMarketMaker.sol\":{\"keccak256\":\"0xc73719444b1fde78a68b6d92f314a9581d20ac4aff4edbcaec61b9db37726712\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://578d4dbdb5fb73bcda8c453b158bcc6ead5923cfcd32802db53cec68f2642b10\",\"dweb:/ipfs/Qma8naGcLW7hLKh8dhPLUjKXWxaqChFwb7wmXeDQRFCCQb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 794,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "tokenA",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)729"
							},
							{
								"astId": 797,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "tokenB",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)729"
							},
							{
								"astId": 799,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "reserveA",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 801,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "reserveB",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 803,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "owner",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)729": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2891:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2908:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2901:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:1"
									},
									"scope": 651,
									"src": "2830:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3059:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3076:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3069:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3004:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3050:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:1"
									},
									"scope": 651,
									"src": "2985:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3371:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3381:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3397:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3436:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3419:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3456:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3314:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3326:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3365:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:1"
									},
									"scope": 651,
									"src": "3296:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3621:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3638:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3650:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3657:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3631:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3551:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3566:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:1"
									},
									"scope": 651,
									"src": "3532:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4058:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4068:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4084:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4115:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4106:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4147:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3996:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4013:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4052:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:1"
									},
									"scope": 651,
									"src": "3979:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4850:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4860:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4878:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4900:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4957:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4963:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4967:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4947:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4983:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4779:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4805:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:1"
									},
									"scope": 651,
									"src": "4757:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5443:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5457:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5453:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5477:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5498:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5491:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5552:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5548:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5570:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5591:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5584:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5651:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5657:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5661:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5643:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5393:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5407:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5419:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:1"
									},
									"scope": 651,
									"src": "5374:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6064:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6078:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6252:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6266:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6288:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6298:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6321:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6335:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6317:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6342:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6392:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6398:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6411:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6367:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6552:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6562:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6570:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6584:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6074:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6098:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6214:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6230:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6628:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6843:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7002:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7012:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7019:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6624:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6646:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6791:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6807:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7073:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7079:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7083:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7064:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7059:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6006:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6020:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:1"
									},
									"scope": 651,
									"src": "5989:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7495:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7509:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7505:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7532:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7553:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7546:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7625:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7634:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7454:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:1"
									},
									"scope": 651,
									"src": "7439:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8021:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8035:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8031:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8058:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8079:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8072:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8158:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8129:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7980:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7997:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:1"
									},
									"scope": 651,
									"src": "7965:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8781:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8800:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8807:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8816:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8791:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8725:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8740:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8757:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:1"
									},
									"scope": 651,
									"src": "8707:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9780:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9794:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9790:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9815:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9836:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9829:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9892:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9888:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9915:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9936:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9929:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9987:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9999:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10017:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10036:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10032:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10047:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10075:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10082:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10091:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10066:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10061:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9700:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9715:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9732:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9747:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:1"
									},
									"scope": 651,
									"src": "9682:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10485:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10495:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10532:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10522:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10561:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10557:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10599:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10617:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10636:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10613:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10643:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10695:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10704:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10722:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10668:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10793:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10800:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10809:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10828:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10784:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10421:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10436:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:1"
									},
									"scope": 651,
									"src": "10396:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9768:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10770:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/AutomatedMarketMaker.sol": {
				"ast": {
					"absolutePath": "contracts/AutomatedMarketMaker.sol",
					"exportedSymbols": {
						"AutomatedMarketMaker": [
							1352
						],
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 1353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 652,
							"src": "65:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 790,
										"name": "ERC20",
										"nameLocations": [
											"213:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "213:5:5"
									},
									"id": 791,
									"nodeType": "InheritanceSpecifier",
									"src": "213:5:5"
								}
							],
							"canonicalName": "AutomatedMarketMaker",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 789,
								"nodeType": "StructuredDocumentation",
								"src": "124:56:5",
								"text": "@title Automated Market Maker with Liquidity Token"
							},
							"fullyImplemented": true,
							"id": 1352,
							"linearizedBaseContracts": [
								1352,
								651,
								41,
								755,
								729,
								785
							],
							"name": "AutomatedMarketMaker",
							"nameLocation": "189:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0fc63d10",
									"id": 794,
									"mutability": "mutable",
									"name": "tokenA",
									"nameLocation": "244:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "230:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 793,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 792,
											"name": "IERC20",
											"nameLocations": [
												"230:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "230:6:5"
										},
										"referencedDeclaration": 729,
										"src": "230:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f64b55b",
									"id": 797,
									"mutability": "mutable",
									"name": "tokenB",
									"nameLocation": "271:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "257:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 796,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 795,
											"name": "IERC20",
											"nameLocations": [
												"257:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "257:6:5"
										},
										"referencedDeclaration": 729,
										"src": "257:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dc5fa6c5",
									"id": 799,
									"mutability": "mutable",
									"name": "reserveA",
									"nameLocation": "609:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "594:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 798,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "594:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "19e36f3b",
									"id": 801,
									"mutability": "mutable",
									"name": "reserveB",
									"nameLocation": "639:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "624:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 800,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "624:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 803,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "671:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "656:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 802,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "656:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e",
									"id": 813,
									"name": "LiquidityAdded",
									"nameLocation": "848:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "879:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "863:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "897:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "889:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "914:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "906:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "931:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "923:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:79:5"
									},
									"src": "842:100:5"
								},
								{
									"anonymous": false,
									"eventSelector": "1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d",
									"id": 823,
									"name": "LiquidityRemoved",
									"nameLocation": "950:16:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "983:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "967:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1001:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "993:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1018:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1010:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1035:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1027:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:79:5"
									},
									"src": "944:102:5"
								},
								{
									"anonymous": false,
									"eventSelector": "631fb37dba9bbcb8b2f3be2d669e365ae9f1bd850cc57dfe8b7ccd7d979a2bba",
									"id": 835,
									"name": "TokensSwapped",
									"nameLocation": "1054:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"indexed": true,
												"mutability": "mutable",
												"name": "trader",
												"nameLocation": "1084:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1068:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "1100:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1092:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1117:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1109:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "1135:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1127:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1153:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1145:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1067:96:5"
									},
									"src": "1048:116:5"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "1288:85:5",
										"statements": [
											{
												"expression": {
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 850,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "1293:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 852,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "1309:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 851,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1302:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1302:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "1293:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "1293:24:5"
											},
											{
												"expression": {
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 856,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "1322:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 858,
																"name": "_tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "1338:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 857,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1331:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1331:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "1322:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "1322:24:5"
											},
											{
												"expression": {
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 862,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "1351:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 863,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1359:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1363:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1359:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1351:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "1351:18:5"
											}
										]
									},
									"id": 868,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 846,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 841,
													"src": "1272:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 847,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 843,
													"src": "1279:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 848,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 845,
												"name": "ERC20",
												"nameLocations": [
													"1266:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "1266:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1266:21:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "1196:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1188:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "1213:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1205:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1236:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1222:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 840,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1222:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1257:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1243:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 842,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1243:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:78:5"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:0:5"
									},
									"scope": 1352,
									"src": "1176:197:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "1498:97:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 877,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "1578:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 878,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "1582:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1578:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 881,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "1590:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1578:13:5",
													"trueExpression": {
														"id": 880,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "1586:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 876,
												"id": 883,
												"nodeType": "Return",
												"src": "1571:20:5"
											}
										]
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "1440:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1452:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "1444:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1463:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "1455:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1443:22:5"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "1489:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1488:9:5"
									},
									"scope": 1352,
									"src": "1431:164:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "1736:672:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 892,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "1822:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1826:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1822:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 928,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "2311:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2316:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2311:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 936,
													"nodeType": "IfStatement",
													"src": "2307:36:5",
													"trueBody": {
														"id": 935,
														"nodeType": "Block",
														"src": "2319:24:5",
														"statements": [
															{
																"expression": {
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 931,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "2330:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2334:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2330:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 934,
																"nodeType": "ExpressionStatement",
																"src": "2330:5:5"
															}
														]
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "1818:525:5",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "1829:414:5",
													"statements": [
														{
															"expression": {
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 895,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "1887:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 896,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "1891:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1887:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 898,
															"nodeType": "ExpressionStatement",
															"src": "1887:5:5"
														},
														{
															"assignments": [
																900
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 900,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "1956:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 927,
																	"src": "1948:9:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 899,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1948:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 906,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 901,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 887,
																		"src": "1960:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1964:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1960:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1968:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1960:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1948:21:5"
														},
														{
															"body": {
																"id": 925,
																"nodeType": "Block",
																"src": "2103:133:5",
																"statements": [
																	{
																		"expression": {
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 910,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 890,
																				"src": "2118:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 911,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 900,
																				"src": "2122:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2118:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 913,
																		"nodeType": "ExpressionStatement",
																		"src": "2118:5:5"
																	},
																	{
																		"expression": {
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 914,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 900,
																				"src": "2205:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 919,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 917,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 915,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 887,
																									"src": "2210:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 916,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 900,
																									"src": "2214:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "2210:5:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 918,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 900,
																								"src": "2218:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2210:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 920,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2209:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 921,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2223:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2209:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2205:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 924,
																		"nodeType": "ExpressionStatement",
																		"src": "2205:19:5"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 907,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "2096:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 908,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "2100:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2096:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 926,
															"nodeType": "WhileStatement",
															"src": "2089:147:5"
														}
													]
												}
											}
										]
									},
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "1686:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1699:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "1691:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1691:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1690:11:5"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1733:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "1725:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1724:11:5"
									},
									"scope": 1352,
									"src": "1677:731:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "2553:1327:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "amountA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "2626:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2636:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2626:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 950,
																	"name": "amountB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "2641:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2651:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2641:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2626:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e7473206d757374206265203e2030",
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2654:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0",
																"typeString": "literal_string \"Amounts must be > 0\""
															},
															"value": "Amounts must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0",
																"typeString": "literal_string \"Amounts must be > 0\""
															}
														],
														"id": 946,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2618:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2618:58:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "2618:58:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 960,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2776:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2780:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2776:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 964,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2796:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AutomatedMarketMaker_$1352",
																		"typeString": "contract AutomatedMarketMaker"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AutomatedMarketMaker_$1352",
																		"typeString": "contract AutomatedMarketMaker"
																	}
																],
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2788:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2788:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2788:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "2803:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 957,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2756:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2763:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "2756:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2756:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "2756:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 972,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2838:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2842:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2838:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 976,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2858:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AutomatedMarketMaker_$1352",
																		"typeString": "contract AutomatedMarketMaker"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AutomatedMarketMaker_$1352",
																		"typeString": "contract AutomatedMarketMaker"
																	}
																],
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2850:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 974,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2850:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2850:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "2865:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 969,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "2818:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2825:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "2818:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2818:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "2818:55:5"
											},
											{
												"assignments": [
													982
												],
												"declarations": [
													{
														"constant": false,
														"id": 982,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "2962:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 1038,
														"src": "2954:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 981,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2954:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 983,
												"nodeType": "VariableDeclarationStatement",
												"src": "2954:17:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 984,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "3054:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3054:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3071:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3054:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1014,
													"nodeType": "Block",
													"src": "3193:314:5",
													"statements": [
														{
															"expression": {
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 997,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "3288:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 999,
																					"name": "amountA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 941,
																					"src": "3318:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1000,
																						"name": "totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 224,
																						"src": "3328:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 1001,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3328:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3318:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1003,
																				"name": "reserveA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 799,
																				"src": "3344:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3318:34:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1005,
																					"name": "amountB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 943,
																					"src": "3410:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1006,
																						"name": "totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 224,
																						"src": "3420:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 1007,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3420:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3410:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1009,
																				"name": "reserveB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "3436:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3410:34:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 998,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "3300:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3300:199:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3288:211:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1013,
															"nodeType": "ExpressionStatement",
															"src": "3288:211:5"
														}
													]
												},
												"id": 1015,
												"nodeType": "IfStatement",
												"src": "3050:457:5",
												"trueBody": {
													"id": 996,
													"nodeType": "Block",
													"src": "3074:113:5",
													"statements": [
														{
															"expression": {
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 988,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "3144:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 990,
																				"name": "amountA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 941,
																				"src": "3161:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 991,
																				"name": "amountB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 943,
																				"src": "3171:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3161:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 989,
																		"name": "sqrt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "3156:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3156:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3144:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 995,
															"nodeType": "ExpressionStatement",
															"src": "3144:35:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1017,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3592:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3596:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3592:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "3604:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1016,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "3586:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3586:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "3586:28:5"
											},
											{
												"expression": {
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1022,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "3710:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1023,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "3722:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3710:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "3710:19:5"
											},
											{
												"expression": {
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1026,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "3736:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1027,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "3748:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3736:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "3736:19:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1031,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3836:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3840:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3836:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1033,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "3848:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1034,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "3857:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1035,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "3866:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1030,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "3821:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3821:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1037,
												"nodeType": "EmitStatement",
												"src": "3816:60:5"
											}
										]
									},
									"functionSelector": "9cd441da",
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "2497:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2518:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2510:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "2535:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2527:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2527:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2509:34:5"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2553:0:5"
									},
									"scope": 1352,
									"src": "2488:1392:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "3998:1494:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1049,
																"name": "liquidityToRemove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "4074:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4094:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4074:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697175696469747920746f2072656d6f7665206d757374206265203e2030",
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4097:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a9c83bafacef6ef6297d2828f5147ae7f728142720de4d4634224a8e1ff199b0",
																"typeString": "literal_string \"Liquidity to remove must be > 0\""
															},
															"value": "Liquidity to remove must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a9c83bafacef6ef6297d2828f5147ae7f728142720de4d4634224a8e1ff199b0",
																"typeString": "literal_string \"Liquidity to remove must be > 0\""
															}
														],
														"id": 1048,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4066:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4066:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "4066:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1057,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4236:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4240:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4236:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1056,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "4226:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4226:21:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1060,
																"name": "liquidityToRemove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "4251:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4226:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c697175696469747920746f6b656e73",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4270:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9c9101c444262e115f62faf22d3889bc6446fade1d31fd0a7de72247e37a28bb",
																"typeString": "literal_string \"Insufficient liquidity tokens\""
															},
															"value": "Insufficient liquidity tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9c9101c444262e115f62faf22d3889bc6446fade1d31fd0a7de72247e37a28bb",
																"typeString": "literal_string \"Insufficient liquidity tokens\""
															}
														],
														"id": 1055,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4218:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4218:84:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "4218:84:5"
											},
											{
												"assignments": [
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "totalLiquidity",
														"nameLocation": "4374:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "4366:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1065,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4366:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1069,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1067,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4391:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4391:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4366:38:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1071,
																"name": "totalLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "4419:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4436:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4419:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206c697175696469747920696e2074686520706f6f6c",
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4439:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cfe0029f7857ad1c3481fab3a86ac656b33b4cb8a7347f26a2f197d2cca210be",
																"typeString": "literal_string \"No liquidity in the pool\""
															},
															"value": "No liquidity in the pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cfe0029f7857ad1c3481fab3a86ac656b33b4cb8a7347f26a2f197d2cca210be",
																"typeString": "literal_string \"No liquidity in the pool\""
															}
														],
														"id": 1070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4411:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4411:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "4411:55:5"
											},
											{
												"expression": {
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1077,
														"name": "amountAOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "4565:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1078,
																		"name": "liquidityToRemove",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1041,
																		"src": "4579:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1079,
																		"name": "reserveA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "4599:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4579:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1081,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4578:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1082,
															"name": "totalLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "4611:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4578:47:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4565:60:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "4565:60:5"
											},
											{
												"expression": {
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1086,
														"name": "amountBOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "4632:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1087,
																		"name": "liquidityToRemove",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1041,
																		"src": "4646:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1088,
																		"name": "reserveB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "4666:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4646:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1090,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4645:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1091,
															"name": "totalLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "4678:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4645:47:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4632:60:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "4632:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1096,
																	"name": "amountAOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "4790:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4803:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4790:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1099,
																	"name": "amountBOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "4808:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4821:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4808:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4790:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420726573657276657320666f7220726571756573746564206c6971756964697479",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4824:47:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b45f5068ac78a5208b0aaf17980c0e44d31143f89240a8f501ef739f25f76130",
																"typeString": "literal_string \"Insufficient reserves for requested liquidity\""
															},
															"value": "Insufficient reserves for requested liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b45f5068ac78a5208b0aaf17980c0e44d31143f89240a8f501ef739f25f76130",
																"typeString": "literal_string \"Insufficient reserves for requested liquidity\""
															}
														],
														"id": 1095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4782:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4782:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "4782:90:5"
											},
											{
												"expression": {
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1106,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "4944:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1107,
														"name": "amountAOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "4956:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4944:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "4944:22:5"
											},
											{
												"expression": {
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1110,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "4973:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1111,
														"name": "amountBOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "4985:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4973:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "4973:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1115,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5082:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5086:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5082:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "liquidityToRemove",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "5094:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1114,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "5076:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5076:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "5076:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1123,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5193:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5197:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5193:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "amountAOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "5205:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1120,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "5177:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5184:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "5177:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5177:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "5177:39:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1131,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5239:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5243:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5239:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "amountBOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "5251:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1128,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "5223:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5230:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "5223:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5223:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "5223:39:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1137,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5347:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5351:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5347:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1139,
															"name": "amountAOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "5359:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1140,
															"name": "amountBOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "5371:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1141,
															"name": "liquidityToRemove",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "5383:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1136,
														"name": "LiquidityRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "5330:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1143,
												"nodeType": "EmitStatement",
												"src": "5325:76:5"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1144,
															"name": "amountAOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "5465:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1145,
															"name": "amountBOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "5477:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1146,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5464:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1047,
												"id": 1147,
												"nodeType": "Return",
												"src": "5457:31:5"
											}
										]
									},
									"functionSelector": "9c8f9f23",
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "3897:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "liquidityToRemove",
												"nameLocation": "3921:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "3913:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3913:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3912:27:5"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "amountAOut",
												"nameLocation": "3966:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "3958:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3958:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "amountBOut",
												"nameLocation": "3986:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "3978:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3978:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3957:40:5"
									},
									"scope": 1352,
									"src": "3888:1604:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "5564:1111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1157,
																"name": "amountAIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "5622:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5634:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5622:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5637:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5614:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5614:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "5614:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1164,
																	"name": "reserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "5730:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5741:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5730:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1167,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "5746:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5757:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5746:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5730:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207265736572766573",
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5760:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674",
																"typeString": "literal_string \"Insufficient reserves\""
															},
															"value": "Insufficient reserves"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674",
																"typeString": "literal_string \"Insufficient reserves\""
															}
														],
														"id": 1163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5722:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5722:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "5722:62:5"
											},
											{
												"assignments": [
													1175
												],
												"declarations": [
													{
														"constant": false,
														"id": 1175,
														"mutability": "mutable",
														"name": "amountAInWithFee",
														"nameLocation": "5863:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1243,
														"src": "5855:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1174,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5855:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1181,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1176,
															"name": "amountAIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "5882:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "393937",
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5894:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_997_by_1",
																"typeString": "int_const 997"
															},
															"value": "997"
														},
														"src": "5882:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5900:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "5882:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5855:49:5"
											},
											{
												"assignments": [
													1183
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"mutability": "mutable",
														"name": "amountBOut",
														"nameLocation": "5985:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1243,
														"src": "5977:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1182,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5977:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1192,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1184,
															"name": "reserveB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "5998:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1185,
															"name": "amountAInWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "6009:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5998:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1187,
																	"name": "reserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "6029:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1188,
																	"name": "amountAInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "6040:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6029:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1190,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6028:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5998:59:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:80:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1194,
																"name": "amountBOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "6155:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1195,
																"name": "minBOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "6169:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6155:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69707061676520746f6f2068696768",
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6178:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb",
																"typeString": "literal_string \"Slippage too high\""
															},
															"value": "Slippage too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb",
																"typeString": "literal_string \"Slippage too high\""
															}
														],
														"id": 1193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6147:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6147:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "6147:51:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1203,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6273:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6277:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6273:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6293:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AutomatedMarketMaker_$1352",
																		"typeString": "contract AutomatedMarketMaker"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AutomatedMarketMaker_$1352",
																		"typeString": "contract AutomatedMarketMaker"
																	}
																],
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6285:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6285:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6285:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1209,
															"name": "amountAIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "6300:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1200,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "6253:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6260:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "6253:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6253:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "6253:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1215,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6371:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6375:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6371:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1217,
															"name": "amountBOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "6383:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1212,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "6355:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6362:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "6355:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6355:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "6355:39:5"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "6483:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1221,
														"name": "amountAInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "6495:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6483:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "6483:28:5"
											},
											{
												"expression": {
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "6518:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1225,
														"name": "amountBOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "6530:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6518:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "6518:22:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1229,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6603:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6607:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6603:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1233,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "6623:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6615:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1231,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6615:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6615:15:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1235,
															"name": "amountAIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "6632:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1238,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "6651:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6643:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1236,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6643:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6643:15:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1240,
															"name": "amountBOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "6660:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1228,
														"name": "TokensSwapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "6589:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,address,uint256)"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6589:82:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1242,
												"nodeType": "EmitStatement",
												"src": "6584:87:5"
											}
										]
									},
									"functionSelector": "140e6247",
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapAforB",
									"nameLocation": "5509:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "amountAIn",
												"nameLocation": "5527:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "5519:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5519:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "minBOut",
												"nameLocation": "5546:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "5538:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5538:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5518:36:5"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5564:0:5"
									},
									"scope": 1352,
									"src": "5500:1175:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "6750:925:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1252,
																"name": "amountBIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "6795:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6807:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6795:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6810:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6787:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6787:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "6787:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1259,
																	"name": "reserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "6878:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6889:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6878:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1262,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "6894:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6905:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6894:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6878:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207265736572766573",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6908:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674",
																"typeString": "literal_string \"Insufficient reserves\""
															},
															"value": "Insufficient reserves"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674",
																"typeString": "literal_string \"Insufficient reserves\""
															}
														],
														"id": 1258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6870:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6870:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "6870:62:5"
											},
											{
												"assignments": [
													1270
												],
												"declarations": [
													{
														"constant": false,
														"id": 1270,
														"mutability": "mutable",
														"name": "amountBInWithFee",
														"nameLocation": "6981:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "6973:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1269,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6973:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1276,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1271,
															"name": "amountBIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "7000:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "393937",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7012:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_997_by_1",
																"typeString": "int_const 997"
															},
															"value": "997"
														},
														"src": "7000:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7018:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "7000:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6973:49:5"
											},
											{
												"assignments": [
													1278
												],
												"declarations": [
													{
														"constant": false,
														"id": 1278,
														"mutability": "mutable",
														"name": "amountAOut",
														"nameLocation": "7102:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "7094:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1277,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7094:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1287,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1279,
															"name": "reserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "7115:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1280,
															"name": "amountBInWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "7126:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7115:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1282,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "7146:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1283,
																	"name": "amountBInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1270,
																	"src": "7157:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7146:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1285,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7145:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7115:59:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7094:80:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1289,
																"name": "amountAOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "7230:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1290,
																"name": "minAOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "7244:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7230:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69707061676520746f6f2068696768",
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7253:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb",
																"typeString": "literal_string \"Slippage too high\""
															},
															"value": "Slippage too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb",
																"typeString": "literal_string \"Slippage too high\""
															}
														],
														"id": 1288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7222:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7222:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "7222:51:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1298,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7334:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7338:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7334:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1302,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7354:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AutomatedMarketMaker_$1352",
																		"typeString": "contract AutomatedMarketMaker"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AutomatedMarketMaker_$1352",
																		"typeString": "contract AutomatedMarketMaker"
																	}
																],
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7346:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1300,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7346:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7346:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1304,
															"name": "amountBIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "7361:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1295,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "7314:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7321:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "7314:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7314:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "7314:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1310,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7426:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7430:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7426:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1312,
															"name": "amountAOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "7438:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1307,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "7410:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7417:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "7410:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7410:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "7410:39:5"
											},
											{
												"expression": {
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1315,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "7494:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1316,
														"name": "amountBInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "7506:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7494:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1318,
												"nodeType": "ExpressionStatement",
												"src": "7494:28:5"
											},
											{
												"expression": {
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1319,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "7529:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1320,
														"name": "amountAOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "7541:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7529:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "7529:22:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1324,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7603:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7607:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7603:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1328,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "7623:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7615:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1326,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7615:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7615:15:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1330,
															"name": "amountBIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "7632:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1333,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "7651:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7643:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1331,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7643:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7643:15:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1335,
															"name": "amountAOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "7660:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1323,
														"name": "TokensSwapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "7589:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,address,uint256)"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7589:82:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1337,
												"nodeType": "EmitStatement",
												"src": "7584:87:5"
											}
										]
									},
									"functionSelector": "c915cc24",
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapBforA",
									"nameLocation": "6695:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "amountBIn",
												"nameLocation": "6713:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "6705:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6705:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "minAOut",
												"nameLocation": "6732:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "6724:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6724:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6704:36:5"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6750:0:5"
									},
									"scope": 1352,
									"src": "6686:989:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "7747:117:5",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 1346,
															"name": "reserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "7841:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1347,
															"name": "reserveB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "7851:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1348,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7840:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1345,
												"id": 1349,
												"nodeType": "Return",
												"src": "7833:27:5"
											}
										]
									},
									"functionSelector": "0902f1ac",
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "7692:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7703:2:5"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "7729:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7729:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "7738:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7728:18:5"
									},
									"scope": 1352,
									"src": "7683:181:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1353,
							"src": "180:7700:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672,
								813,
								823,
								835
							]
						}
					],
					"src": "37:7847:5"
				},
				"id": 5
			}
		}
	}
}