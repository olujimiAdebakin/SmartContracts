{
	"id": "6c9bf2c89627463798f6a83fc1ea6f33",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AutomatedMarketMaker.sol": {
				"content": "\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n/// @title Automated Market Maker with Liquidity Token\r\ncontract AutomatedMarketMaker is ERC20 {\r\n\r\n      IERC20 public tokenA;\r\n    IERC20 public tokenB;\r\n\r\n    // track the number of token in the reserve\r\n    // These two numbers track how much of each token is currently locked inside the AMM contract.\r\n    // Why do we need this?\r\n\r\n// Because the **entire AMM logic — swaps, prices, LP shares — depends on knowing how much of each token is in the pool.**\r\n    uint256 public reserveA;\r\n    uint256 public reserveB;\r\n\r\n    address public owner;\r\n\r\n\r\n// These are events, and while they don’t affect how the contract works under the hood, they play a huge role in how apps and users interact with it.\r\n    \r\nevent LiquidityAdded(address indexed provider, uint256 amountA, uint256 amountB, uint256 liquidity);\r\nevent LiquidityRemoved(address indexed provider, uint256 amountA, uint256 amountB, uint256 liquidity);\r\nevent TokensSwapped(address indexed trader, address tokenIn, uint256 amountIn, address tokenOut, uint256 amountOut);\r\n\r\n\r\n      constructor(address _tokenA, address _tokenB, string memory _name, string memory _symbol) ERC20(_name, _symbol) {\r\n  tokenA = IERC20(_tokenA);\r\n  tokenB = IERC20(_tokenB);\r\n  owner = msg.sender;\r\n}\r\n\r\n\r\n \r\n// Returns the smaller of two unsigned integers\r\nfunction min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Use a ternary operator: if a < b, return a; else return b\r\n    return a < b ? a : b;\r\n}\r\n\r\n\r\n// Returns the integer square root of a number using the Babylonian method\r\nfunction sqrt(uint256 y) internal pure returns (uint256 z) {\r\n    // If y > 3, use the Babylonian method to approximate the square root\r\n    if (y > 3) {\r\n        // Start with an initial guess: z = y\r\n        z = y;\r\n\r\n        // Another guess: x = (y / 2) + 1\r\n        uint256 x = y / 2 + 1;\r\n\r\n        // Repeat approximation until x >= z\r\n        // The loop stops when the estimate stops improving\r\n        while (x < z) {\r\n            z = x;\r\n            // Average of x and y / x — classic Babylonian step\r\n            x = (y / x + x) / 2;\r\n        }\r\n    } \r\n    // Handle small values of y (1 to 3): return 1\r\n    else if (y != 0) {\r\n        z = 1;\r\n    }\r\n    // If y == 0, z stays as default 0 (implicitly returned)\r\n}\r\n\r\n\r\n// Main function to allow users to add liquidity to a tokenA/tokenB pool\r\nfunction addLiquidity(uint256 amountA, uint256 amountB) external {\r\n    // Ensure that both input amounts are greater than 0\r\n    require(amountA > 0 && amountB > 0, \"Amounts must be > 0\");\r\n\r\n    // Transfer tokens from the user to the contract (liquidity pool)\r\n    tokenA.transferFrom(msg.sender, address(this), amountA);\r\n    tokenB.transferFrom(msg.sender, address(this), amountB);\r\n\r\n    // Declare a variable to hold the amount of LP tokens to be minted\r\n    uint256 liquidity;\r\n\r\n    // If this is the first liquidity being added, total supply is 0\r\n    if (totalSupply() == 0) {\r\n        // Use geometric mean for initial LP token supply\r\n        liquidity = sqrt(amountA * amountB);\r\n    } else {\r\n        // For subsequent adds, calculate LP tokens based on current reserve ratio\r\n        liquidity = min(\r\n            amountA * totalSupply() / reserveA,  // LP tokens based on tokenA contribution\r\n            amountB * totalSupply() / reserveB   // LP tokens based on tokenB contribution\r\n        );\r\n    }\r\n\r\n    // Mint LP tokens to the user as proof of their share in the pool\r\n    _mint(msg.sender, liquidity);\r\n\r\n    // Update internal reserves to match the actual token amounts now in the contract\r\n    reserveA += amountA;\r\n    reserveB += amountB;\r\n\r\n    // Emit an event to log the liquidity addition\r\n    emit LiquidityAdded(msg.sender, amountA, amountB, liquidity);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          \r\n\r\n}\r\n  "
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/AutomatedMarketMaker.sol": {
				"AutomatedMarketMaker": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenB",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trader",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "TokensSwapped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"title": "Automated Market Maker with Liquidity Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AutomatedMarketMaker.sol\":180:3913  contract AutomatedMarketMaker is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/AutomatedMarketMaker.sol\":1176:1373  constructor(address _tokenA, address _tokenB, string memory _name, string memory _symbol) ERC20(_name, _symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/AutomatedMarketMaker.sol\":1272:1277  _name */\n  dup2\n    /* \"contracts/AutomatedMarketMaker.sol\":1279:1286  _symbol */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/AutomatedMarketMaker.sol\":1309:1316  _tokenA */\n  dup4\n    /* \"contracts/AutomatedMarketMaker.sol\":1293:1299  tokenA */\n  0x05\n  0x00\n    /* \"contracts/AutomatedMarketMaker.sol\":1293:1317  tokenA = IERC20(_tokenA) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AutomatedMarketMaker.sol\":1338:1345  _tokenB */\n  dup3\n    /* \"contracts/AutomatedMarketMaker.sol\":1322:1328  tokenB */\n  0x06\n  0x00\n    /* \"contracts/AutomatedMarketMaker.sol\":1322:1346  tokenB = IERC20(_tokenB) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AutomatedMarketMaker.sol\":1359:1369  msg.sender */\n  caller\n    /* \"contracts/AutomatedMarketMaker.sol\":1351:1356  owner */\n  0x09\n  0x00\n    /* \"contracts/AutomatedMarketMaker.sol\":1351:1369  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AutomatedMarketMaker.sol\":1176:1373  constructor(address _tokenA, address _tokenB, string memory _name, string memory _symbol) ERC20(_name, _symbol) {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/AutomatedMarketMaker.sol\":180:3913  contract AutomatedMarketMaker is ERC20 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_17:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_16\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_18:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_17\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_19:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  dup1\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1085   */\ntag_20:\n    /* \"#utility.yul\":1077:1078   */\n  0x00\n    /* \"#utility.yul\":1074:1075   */\n  dup1\n    /* \"#utility.yul\":1067:1079   */\n  revert\n    /* \"#utility.yul\":1091:1193   */\ntag_21:\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1183:1185   */\n  0x1f\n    /* \"#utility.yul\":1179:1186   */\n  not\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1167:1172   */\n  dup4\n    /* \"#utility.yul\":1163:1177   */\n  add\n    /* \"#utility.yul\":1159:1187   */\n  and\n    /* \"#utility.yul\":1149:1187   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1199:1379   */\ntag_22:\n    /* \"#utility.yul\":1247:1324   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1237:1325   */\n  mstore\n    /* \"#utility.yul\":1344:1348   */\n  0x41\n    /* \"#utility.yul\":1341:1342   */\n  0x04\n    /* \"#utility.yul\":1334:1349   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1385:1666   */\ntag_23:\n    /* \"#utility.yul\":1468:1495   */\n  tag_65\n    /* \"#utility.yul\":1490:1494   */\n  dup3\n    /* \"#utility.yul\":1468:1495   */\n  tag_21\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1460:1466   */\n  dup2\n    /* \"#utility.yul\":1456:1496   */\n  add\n    /* \"#utility.yul\":1598:1604   */\n  dup2\n    /* \"#utility.yul\":1586:1596   */\n  dup2\n    /* \"#utility.yul\":1583:1605   */\n  lt\n    /* \"#utility.yul\":1562:1580   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1550:1560   */\n  dup3\n    /* \"#utility.yul\":1547:1581   */\n  gt\n    /* \"#utility.yul\":1544:1606   */\n  or\n    /* \"#utility.yul\":1541:1629   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1609:1627   */\n  tag_67\n  tag_22\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1541:1629   */\ntag_66:\n    /* \"#utility.yul\":1649:1659   */\n  dup1\n    /* \"#utility.yul\":1645:1647   */\n  0x40\n    /* \"#utility.yul\":1638:1660   */\n  mstore\n    /* \"#utility.yul\":1428:1666   */\n  pop\n    /* \"#utility.yul\":1385:1666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:1801   */\ntag_24:\n    /* \"#utility.yul\":1706:1712   */\n  0x00\n    /* \"#utility.yul\":1733:1753   */\n  tag_69\n  tag_12\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1723:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_70\n    /* \"#utility.yul\":1790:1794   */\n  dup3\n    /* \"#utility.yul\":1782:1788   */\n  dup3\n    /* \"#utility.yul\":1762:1795   */\n  tag_23\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1672:1801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:2115   */\ntag_25:\n    /* \"#utility.yul\":1869:1873   */\n  0x00\n    /* \"#utility.yul\":1959:1977   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1951:1957   */\n  dup3\n    /* \"#utility.yul\":1948:1978   */\n  gt\n    /* \"#utility.yul\":1945:2001   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1981:1999   */\n  tag_73\n  tag_22\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1945:2001   */\ntag_72:\n    /* \"#utility.yul\":2019:2048   */\n  tag_74\n    /* \"#utility.yul\":2041:2047   */\n  dup3\n    /* \"#utility.yul\":2019:2048   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2011:2048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2097:2101   */\n  dup2\n    /* \"#utility.yul\":2093:2108   */\n  add\n    /* \"#utility.yul\":2085:2108   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:2115   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2121:2260   */\ntag_26:\n    /* \"#utility.yul\":2210:2216   */\n  dup3\n    /* \"#utility.yul\":2205:2208   */\n  dup2\n    /* \"#utility.yul\":2200:2203   */\n  dup4\n    /* \"#utility.yul\":2194:2217   */\n  mcopy\n    /* \"#utility.yul\":2251:2252   */\n  0x00\n    /* \"#utility.yul\":2242:2248   */\n  dup4\n    /* \"#utility.yul\":2237:2240   */\n  dup4\n    /* \"#utility.yul\":2233:2249   */\n  add\n    /* \"#utility.yul\":2226:2253   */\n  mstore\n    /* \"#utility.yul\":2121:2260   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2266:2700   */\ntag_27:\n    /* \"#utility.yul\":2355:2360   */\n  0x00\n    /* \"#utility.yul\":2380:2446   */\n  tag_77\n    /* \"#utility.yul\":2396:2445   */\n  tag_78\n    /* \"#utility.yul\":2438:2444   */\n  dup5\n    /* \"#utility.yul\":2396:2445   */\n  tag_25\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2380:2446   */\n  tag_24\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2371:2446   */\n  swap1\n  pop\n    /* \"#utility.yul\":2469:2475   */\n  dup3\n    /* \"#utility.yul\":2462:2467   */\n  dup2\n    /* \"#utility.yul\":2455:2476   */\n  mstore\n    /* \"#utility.yul\":2507:2511   */\n  0x20\n    /* \"#utility.yul\":2500:2505   */\n  dup2\n    /* \"#utility.yul\":2496:2512   */\n  add\n    /* \"#utility.yul\":2545:2548   */\n  dup5\n    /* \"#utility.yul\":2536:2542   */\n  dup5\n    /* \"#utility.yul\":2531:2534   */\n  dup5\n    /* \"#utility.yul\":2527:2543   */\n  add\n    /* \"#utility.yul\":2524:2549   */\n  gt\n    /* \"#utility.yul\":2521:2633   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2552:2631   */\n  tag_80\n  tag_20\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2521:2633   */\ntag_79:\n    /* \"#utility.yul\":2642:2694   */\n  tag_81\n    /* \"#utility.yul\":2687:2693   */\n  dup5\n    /* \"#utility.yul\":2682:2685   */\n  dup3\n    /* \"#utility.yul\":2677:2680   */\n  dup6\n    /* \"#utility.yul\":2642:2694   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2361:2700   */\n  pop\n    /* \"#utility.yul\":2266:2700   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2720:3075   */\ntag_28:\n    /* \"#utility.yul\":2787:2792   */\n  0x00\n    /* \"#utility.yul\":2836:2839   */\n  dup3\n    /* \"#utility.yul\":2829:2833   */\n  0x1f\n    /* \"#utility.yul\":2821:2827   */\n  dup4\n    /* \"#utility.yul\":2817:2834   */\n  add\n    /* \"#utility.yul\":2813:2840   */\n  slt\n    /* \"#utility.yul\":2803:2925   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2844:2923   */\n  tag_84\n  tag_19\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2803:2925   */\ntag_83:\n    /* \"#utility.yul\":2954:2960   */\n  dup2\n    /* \"#utility.yul\":2948:2961   */\n  mload\n    /* \"#utility.yul\":2979:3069   */\n  tag_85\n    /* \"#utility.yul\":3065:3068   */\n  dup5\n    /* \"#utility.yul\":3057:3063   */\n  dup3\n    /* \"#utility.yul\":3050:3054   */\n  0x20\n    /* \"#utility.yul\":3042:3048   */\n  dup7\n    /* \"#utility.yul\":3038:3055   */\n  add\n    /* \"#utility.yul\":2979:3069   */\n  tag_27\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2970:3069   */\n  swap2\n  pop\n    /* \"#utility.yul\":2793:3075   */\n  pop\n    /* \"#utility.yul\":2720:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:4247   */\ntag_3:\n    /* \"#utility.yul\":3198:3204   */\n  0x00\n    /* \"#utility.yul\":3206:3212   */\n  dup1\n    /* \"#utility.yul\":3214:3220   */\n  0x00\n    /* \"#utility.yul\":3222:3228   */\n  dup1\n    /* \"#utility.yul\":3271:3274   */\n  0x80\n    /* \"#utility.yul\":3259:3268   */\n  dup6\n    /* \"#utility.yul\":3250:3257   */\n  dup8\n    /* \"#utility.yul\":3246:3269   */\n  sub\n    /* \"#utility.yul\":3242:3275   */\n  slt\n    /* \"#utility.yul\":3239:3359   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3278:3357   */\n  tag_88\n  tag_13\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3239:3359   */\ntag_87:\n    /* \"#utility.yul\":3398:3399   */\n  0x00\n    /* \"#utility.yul\":3423:3487   */\n  tag_89\n    /* \"#utility.yul\":3479:3486   */\n  dup8\n    /* \"#utility.yul\":3470:3476   */\n  dup3\n    /* \"#utility.yul\":3459:3468   */\n  dup9\n    /* \"#utility.yul\":3455:3477   */\n  add\n    /* \"#utility.yul\":3423:3487   */\n  tag_18\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3413:3487   */\n  swap5\n  pop\n    /* \"#utility.yul\":3369:3497   */\n  pop\n    /* \"#utility.yul\":3536:3538   */\n  0x20\n    /* \"#utility.yul\":3562:3626   */\n  tag_90\n    /* \"#utility.yul\":3618:3625   */\n  dup8\n    /* \"#utility.yul\":3609:3615   */\n  dup3\n    /* \"#utility.yul\":3598:3607   */\n  dup9\n    /* \"#utility.yul\":3594:3616   */\n  add\n    /* \"#utility.yul\":3562:3626   */\n  tag_18\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3552:3626   */\n  swap4\n  pop\n    /* \"#utility.yul\":3507:3636   */\n  pop\n    /* \"#utility.yul\":3696:3698   */\n  0x40\n    /* \"#utility.yul\":3685:3694   */\n  dup6\n    /* \"#utility.yul\":3681:3699   */\n  add\n    /* \"#utility.yul\":3675:3700   */\n  mload\n    /* \"#utility.yul\":3727:3745   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3719:3725   */\n  dup2\n    /* \"#utility.yul\":3716:3746   */\n  gt\n    /* \"#utility.yul\":3713:3830   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3749:3828   */\n  tag_92\n  tag_14\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3713:3830   */\ntag_91:\n    /* \"#utility.yul\":3854:3928   */\n  tag_93\n    /* \"#utility.yul\":3920:3927   */\n  dup8\n    /* \"#utility.yul\":3911:3917   */\n  dup3\n    /* \"#utility.yul\":3900:3909   */\n  dup9\n    /* \"#utility.yul\":3896:3918   */\n  add\n    /* \"#utility.yul\":3854:3928   */\n  tag_28\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3844:3928   */\n  swap3\n  pop\n    /* \"#utility.yul\":3646:3938   */\n  pop\n    /* \"#utility.yul\":3998:4000   */\n  0x60\n    /* \"#utility.yul\":3987:3996   */\n  dup6\n    /* \"#utility.yul\":3983:4001   */\n  add\n    /* \"#utility.yul\":3977:4002   */\n  mload\n    /* \"#utility.yul\":4029:4047   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4021:4027   */\n  dup2\n    /* \"#utility.yul\":4018:4048   */\n  gt\n    /* \"#utility.yul\":4015:4132   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":4051:4130   */\n  tag_95\n  tag_14\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4015:4132   */\ntag_94:\n    /* \"#utility.yul\":4156:4230   */\n  tag_96\n    /* \"#utility.yul\":4222:4229   */\n  dup8\n    /* \"#utility.yul\":4213:4219   */\n  dup3\n    /* \"#utility.yul\":4202:4211   */\n  dup9\n    /* \"#utility.yul\":4198:4220   */\n  add\n    /* \"#utility.yul\":4156:4230   */\n  tag_28\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4146:4230   */\n  swap2\n  pop\n    /* \"#utility.yul\":3948:4240   */\n  pop\n    /* \"#utility.yul\":3081:4247   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4253:4352   */\ntag_29:\n    /* \"#utility.yul\":4305:4311   */\n  0x00\n    /* \"#utility.yul\":4339:4344   */\n  dup2\n    /* \"#utility.yul\":4333:4345   */\n  mload\n    /* \"#utility.yul\":4323:4345   */\n  swap1\n  pop\n    /* \"#utility.yul\":4253:4352   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4358:4538   */\ntag_30:\n    /* \"#utility.yul\":4406:4483   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4403:4404   */\n  0x00\n    /* \"#utility.yul\":4396:4484   */\n  mstore\n    /* \"#utility.yul\":4503:4507   */\n  0x22\n    /* \"#utility.yul\":4500:4501   */\n  0x04\n    /* \"#utility.yul\":4493:4508   */\n  mstore\n    /* \"#utility.yul\":4527:4531   */\n  0x24\n    /* \"#utility.yul\":4524:4525   */\n  0x00\n    /* \"#utility.yul\":4517:4532   */\n  revert\n    /* \"#utility.yul\":4544:4864   */\ntag_31:\n    /* \"#utility.yul\":4588:4594   */\n  0x00\n    /* \"#utility.yul\":4625:4626   */\n  0x02\n    /* \"#utility.yul\":4619:4623   */\n  dup3\n    /* \"#utility.yul\":4615:4627   */\n  div\n    /* \"#utility.yul\":4605:4627   */\n  swap1\n  pop\n    /* \"#utility.yul\":4672:4673   */\n  0x01\n    /* \"#utility.yul\":4666:4670   */\n  dup3\n    /* \"#utility.yul\":4662:4674   */\n  and\n    /* \"#utility.yul\":4693:4711   */\n  dup1\n    /* \"#utility.yul\":4683:4764   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4749:4753   */\n  0x7f\n    /* \"#utility.yul\":4741:4747   */\n  dup3\n    /* \"#utility.yul\":4737:4754   */\n  and\n    /* \"#utility.yul\":4727:4754   */\n  swap2\n  pop\n    /* \"#utility.yul\":4683:4764   */\ntag_100:\n    /* \"#utility.yul\":4811:4813   */\n  0x20\n    /* \"#utility.yul\":4803:4809   */\n  dup3\n    /* \"#utility.yul\":4800:4814   */\n  lt\n    /* \"#utility.yul\":4780:4798   */\n  dup2\n    /* \"#utility.yul\":4777:4815   */\n  sub\n    /* \"#utility.yul\":4774:4858   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4830:4848   */\n  tag_102\n  tag_30\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4774:4858   */\ntag_101:\n    /* \"#utility.yul\":4595:4864   */\n  pop\n    /* \"#utility.yul\":4544:4864   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4870:5011   */\ntag_32:\n    /* \"#utility.yul\":4919:4923   */\n  0x00\n    /* \"#utility.yul\":4942:4945   */\n  dup2\n    /* \"#utility.yul\":4934:4945   */\n  swap1\n  pop\n    /* \"#utility.yul\":4965:4968   */\n  dup2\n    /* \"#utility.yul\":4962:4963   */\n  0x00\n    /* \"#utility.yul\":4955:4969   */\n  mstore\n    /* \"#utility.yul\":4999:5003   */\n  0x20\n    /* \"#utility.yul\":4996:4997   */\n  0x00\n    /* \"#utility.yul\":4986:5004   */\n  keccak256\n    /* \"#utility.yul\":4978:5004   */\n  swap1\n  pop\n    /* \"#utility.yul\":4870:5011   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5017:5110   */\ntag_33:\n    /* \"#utility.yul\":5054:5060   */\n  0x00\n    /* \"#utility.yul\":5101:5103   */\n  0x20\n    /* \"#utility.yul\":5096:5098   */\n  0x1f\n    /* \"#utility.yul\":5089:5094   */\n  dup4\n    /* \"#utility.yul\":5085:5099   */\n  add\n    /* \"#utility.yul\":5081:5104   */\n  div\n    /* \"#utility.yul\":5071:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5017:5110   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5116:5223   */\ntag_34:\n    /* \"#utility.yul\":5160:5168   */\n  0x00\n    /* \"#utility.yul\":5210:5215   */\n  dup3\n    /* \"#utility.yul\":5204:5208   */\n  dup3\n    /* \"#utility.yul\":5200:5216   */\n  shl\n    /* \"#utility.yul\":5179:5216   */\n  swap1\n  pop\n    /* \"#utility.yul\":5116:5223   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5229:5622   */\ntag_35:\n    /* \"#utility.yul\":5298:5304   */\n  0x00\n    /* \"#utility.yul\":5348:5349   */\n  0x08\n    /* \"#utility.yul\":5336:5346   */\n  dup4\n    /* \"#utility.yul\":5332:5350   */\n  mul\n    /* \"#utility.yul\":5371:5468   */\n  tag_107\n    /* \"#utility.yul\":5401:5467   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5390:5399   */\n  dup3\n    /* \"#utility.yul\":5371:5468   */\n  tag_34\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5489:5528   */\n  tag_108\n    /* \"#utility.yul\":5519:5527   */\n  dup7\n    /* \"#utility.yul\":5508:5517   */\n  dup4\n    /* \"#utility.yul\":5489:5528   */\n  tag_34\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5477:5528   */\n  swap6\n  pop\n    /* \"#utility.yul\":5561:5565   */\n  dup1\n    /* \"#utility.yul\":5557:5566   */\n  not\n    /* \"#utility.yul\":5550:5555   */\n  dup5\n    /* \"#utility.yul\":5546:5567   */\n  and\n    /* \"#utility.yul\":5537:5567   */\n  swap4\n  pop\n    /* \"#utility.yul\":5610:5614   */\n  dup1\n    /* \"#utility.yul\":5600:5608   */\n  dup7\n    /* \"#utility.yul\":5596:5615   */\n  and\n    /* \"#utility.yul\":5589:5594   */\n  dup5\n    /* \"#utility.yul\":5586:5616   */\n  or\n    /* \"#utility.yul\":5576:5616   */\n  swap3\n  pop\n    /* \"#utility.yul\":5305:5622   */\n  pop\n  pop\n    /* \"#utility.yul\":5229:5622   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5628:5705   */\ntag_36:\n    /* \"#utility.yul\":5665:5672   */\n  0x00\n    /* \"#utility.yul\":5694:5699   */\n  dup2\n    /* \"#utility.yul\":5683:5699   */\n  swap1\n  pop\n    /* \"#utility.yul\":5628:5705   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5711:5771   */\ntag_37:\n    /* \"#utility.yul\":5739:5742   */\n  0x00\n    /* \"#utility.yul\":5760:5765   */\n  dup2\n    /* \"#utility.yul\":5753:5765   */\n  swap1\n  pop\n    /* \"#utility.yul\":5711:5771   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5777:5919   */\ntag_38:\n    /* \"#utility.yul\":5827:5836   */\n  0x00\n    /* \"#utility.yul\":5860:5913   */\n  tag_112\n    /* \"#utility.yul\":5878:5912   */\n  tag_113\n    /* \"#utility.yul\":5887:5911   */\n  tag_114\n    /* \"#utility.yul\":5905:5910   */\n  dup5\n    /* \"#utility.yul\":5887:5911   */\n  tag_36\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5878:5912   */\n  tag_37\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5860:5913   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5847:5913   */\n  swap1\n  pop\n    /* \"#utility.yul\":5777:5919   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5925:6000   */\ntag_39:\n    /* \"#utility.yul\":5968:5971   */\n  0x00\n    /* \"#utility.yul\":5989:5994   */\n  dup2\n    /* \"#utility.yul\":5982:5994   */\n  swap1\n  pop\n    /* \"#utility.yul\":5925:6000   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6006:6275   */\ntag_40:\n    /* \"#utility.yul\":6116:6155   */\n  tag_117\n    /* \"#utility.yul\":6147:6154   */\n  dup4\n    /* \"#utility.yul\":6116:6155   */\n  tag_38\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":6177:6268   */\n  tag_118\n    /* \"#utility.yul\":6226:6267   */\n  tag_119\n    /* \"#utility.yul\":6250:6266   */\n  dup3\n    /* \"#utility.yul\":6226:6267   */\n  tag_39\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6218:6224   */\n  dup5\n    /* \"#utility.yul\":6211:6215   */\n  dup5\n    /* \"#utility.yul\":6205:6216   */\n  sload\n    /* \"#utility.yul\":6177:6268   */\n  tag_35\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6171:6175   */\n  dup3\n    /* \"#utility.yul\":6164:6269   */\n  sstore\n    /* \"#utility.yul\":6082:6275   */\n  pop\n    /* \"#utility.yul\":6006:6275   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6281:6354   */\ntag_41:\n    /* \"#utility.yul\":6326:6329   */\n  0x00\n    /* \"#utility.yul\":6281:6354   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6360:6549   */\ntag_42:\n    /* \"#utility.yul\":6437:6469   */\n  tag_122\n  tag_41\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6478:6543   */\n  tag_123\n    /* \"#utility.yul\":6536:6542   */\n  dup2\n    /* \"#utility.yul\":6528:6534   */\n  dup5\n    /* \"#utility.yul\":6522:6526   */\n  dup5\n    /* \"#utility.yul\":6478:6543   */\n  tag_40\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6413:6549   */\n  pop\n    /* \"#utility.yul\":6360:6549   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6555:6741   */\ntag_43:\n    /* \"#utility.yul\":6615:6735   */\ntag_125:\n    /* \"#utility.yul\":6632:6635   */\n  dup2\n    /* \"#utility.yul\":6625:6630   */\n  dup2\n    /* \"#utility.yul\":6622:6636   */\n  lt\n    /* \"#utility.yul\":6615:6735   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":6686:6725   */\n  tag_128\n    /* \"#utility.yul\":6723:6724   */\n  0x00\n    /* \"#utility.yul\":6716:6721   */\n  dup3\n    /* \"#utility.yul\":6686:6725   */\n  tag_42\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6659:6660   */\n  0x01\n    /* \"#utility.yul\":6652:6657   */\n  dup2\n    /* \"#utility.yul\":6648:6661   */\n  add\n    /* \"#utility.yul\":6639:6661   */\n  swap1\n  pop\n    /* \"#utility.yul\":6615:6735   */\n  jump(tag_125)\ntag_127:\n    /* \"#utility.yul\":6555:6741   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6747:7290   */\ntag_44:\n    /* \"#utility.yul\":6848:6850   */\n  0x1f\n    /* \"#utility.yul\":6843:6846   */\n  dup3\n    /* \"#utility.yul\":6840:6851   */\n  gt\n    /* \"#utility.yul\":6837:7283   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":6882:6920   */\n  tag_131\n    /* \"#utility.yul\":6914:6919   */\n  dup2\n    /* \"#utility.yul\":6882:6920   */\n  tag_32\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6966:6995   */\n  tag_132\n    /* \"#utility.yul\":6984:6994   */\n  dup5\n    /* \"#utility.yul\":6966:6995   */\n  tag_33\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6956:6964   */\n  dup2\n    /* \"#utility.yul\":6952:6996   */\n  add\n    /* \"#utility.yul\":7149:7151   */\n  0x20\n    /* \"#utility.yul\":7137:7147   */\n  dup6\n    /* \"#utility.yul\":7134:7152   */\n  lt\n    /* \"#utility.yul\":7131:7180   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":7170:7178   */\n  dup2\n    /* \"#utility.yul\":7155:7178   */\n  swap1\n  pop\n    /* \"#utility.yul\":7131:7180   */\ntag_133:\n    /* \"#utility.yul\":7193:7273   */\n  tag_134\n    /* \"#utility.yul\":7249:7271   */\n  tag_135\n    /* \"#utility.yul\":7267:7270   */\n  dup6\n    /* \"#utility.yul\":7249:7271   */\n  tag_33\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7239:7247   */\n  dup4\n    /* \"#utility.yul\":7235:7272   */\n  add\n    /* \"#utility.yul\":7222:7233   */\n  dup3\n    /* \"#utility.yul\":7193:7273   */\n  tag_43\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6852:7283   */\n  pop\n  pop\n    /* \"#utility.yul\":6837:7283   */\ntag_130:\n    /* \"#utility.yul\":6747:7290   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7296:7413   */\ntag_45:\n    /* \"#utility.yul\":7350:7358   */\n  0x00\n    /* \"#utility.yul\":7400:7405   */\n  dup3\n    /* \"#utility.yul\":7394:7398   */\n  dup3\n    /* \"#utility.yul\":7390:7406   */\n  shr\n    /* \"#utility.yul\":7369:7406   */\n  swap1\n  pop\n    /* \"#utility.yul\":7296:7413   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7419:7588   */\ntag_46:\n    /* \"#utility.yul\":7463:7469   */\n  0x00\n    /* \"#utility.yul\":7496:7547   */\n  tag_138\n    /* \"#utility.yul\":7544:7545   */\n  0x00\n    /* \"#utility.yul\":7540:7546   */\n  not\n    /* \"#utility.yul\":7532:7537   */\n  dup5\n    /* \"#utility.yul\":7529:7530   */\n  0x08\n    /* \"#utility.yul\":7525:7538   */\n  mul\n    /* \"#utility.yul\":7496:7547   */\n  tag_45\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7492:7548   */\n  not\n    /* \"#utility.yul\":7577:7581   */\n  dup1\n    /* \"#utility.yul\":7571:7575   */\n  dup4\n    /* \"#utility.yul\":7567:7582   */\n  and\n    /* \"#utility.yul\":7557:7582   */\n  swap2\n  pop\n    /* \"#utility.yul\":7470:7588   */\n  pop\n    /* \"#utility.yul\":7419:7588   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7593:7888   */\ntag_47:\n    /* \"#utility.yul\":7669:7673   */\n  0x00\n    /* \"#utility.yul\":7815:7844   */\n  tag_140\n    /* \"#utility.yul\":7840:7843   */\n  dup4\n    /* \"#utility.yul\":7834:7838   */\n  dup4\n    /* \"#utility.yul\":7815:7844   */\n  tag_46\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7807:7844   */\n  swap2\n  pop\n    /* \"#utility.yul\":7877:7880   */\n  dup3\n    /* \"#utility.yul\":7874:7875   */\n  0x02\n    /* \"#utility.yul\":7870:7881   */\n  mul\n    /* \"#utility.yul\":7864:7868   */\n  dup3\n    /* \"#utility.yul\":7861:7882   */\n  or\n    /* \"#utility.yul\":7853:7882   */\n  swap1\n  pop\n    /* \"#utility.yul\":7593:7888   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7893:9288   */\ntag_8:\n    /* \"#utility.yul\":8010:8047   */\n  tag_142\n    /* \"#utility.yul\":8043:8046   */\n  dup3\n    /* \"#utility.yul\":8010:8047   */\n  tag_29\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":8112:8130   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8104:8110   */\n  dup2\n    /* \"#utility.yul\":8101:8131   */\n  gt\n    /* \"#utility.yul\":8098:8154   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":8134:8152   */\n  tag_144\n  tag_22\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":8098:8154   */\ntag_143:\n    /* \"#utility.yul\":8178:8216   */\n  tag_145\n    /* \"#utility.yul\":8210:8214   */\n  dup3\n    /* \"#utility.yul\":8204:8215   */\n  sload\n    /* \"#utility.yul\":8178:8216   */\n  tag_31\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8263:8330   */\n  tag_146\n    /* \"#utility.yul\":8323:8329   */\n  dup3\n    /* \"#utility.yul\":8315:8321   */\n  dup3\n    /* \"#utility.yul\":8309:8313   */\n  dup6\n    /* \"#utility.yul\":8263:8330   */\n  tag_44\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":8357:8358   */\n  0x00\n    /* \"#utility.yul\":8381:8385   */\n  0x20\n    /* \"#utility.yul\":8368:8385   */\n  swap1\n  pop\n    /* \"#utility.yul\":8413:8415   */\n  0x1f\n    /* \"#utility.yul\":8405:8411   */\n  dup4\n    /* \"#utility.yul\":8402:8416   */\n  gt\n    /* \"#utility.yul\":8430:8431   */\n  0x01\n    /* \"#utility.yul\":8425:9043   */\n  dup2\n  eq\n  tag_148\n  jumpi\n    /* \"#utility.yul\":9087:9088   */\n  0x00\n    /* \"#utility.yul\":9104:9110   */\n  dup5\n    /* \"#utility.yul\":9101:9178   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":9153:9162   */\n  dup3\n    /* \"#utility.yul\":9148:9151   */\n  dup8\n    /* \"#utility.yul\":9144:9163   */\n  add\n    /* \"#utility.yul\":9138:9164   */\n  mload\n    /* \"#utility.yul\":9129:9164   */\n  swap1\n  pop\n    /* \"#utility.yul\":9101:9178   */\ntag_149:\n    /* \"#utility.yul\":9204:9271   */\n  tag_150\n    /* \"#utility.yul\":9264:9270   */\n  dup6\n    /* \"#utility.yul\":9257:9262   */\n  dup3\n    /* \"#utility.yul\":9204:9271   */\n  tag_47\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":9198:9202   */\n  dup7\n    /* \"#utility.yul\":9191:9272   */\n  sstore\n    /* \"#utility.yul\":9060:9282   */\n  pop\n    /* \"#utility.yul\":8395:9282   */\n  jump(tag_147)\n    /* \"#utility.yul\":8425:9043   */\ntag_148:\n    /* \"#utility.yul\":8477:8481   */\n  0x1f\n    /* \"#utility.yul\":8473:8482   */\n  not\n    /* \"#utility.yul\":8465:8471   */\n  dup5\n    /* \"#utility.yul\":8461:8483   */\n  and\n    /* \"#utility.yul\":8511:8548   */\n  tag_151\n    /* \"#utility.yul\":8543:8547   */\n  dup7\n    /* \"#utility.yul\":8511:8548   */\n  tag_32\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":8570:8571   */\n  0x00\n    /* \"#utility.yul\":8584:8792   */\ntag_152:\n    /* \"#utility.yul\":8598:8605   */\n  dup3\n    /* \"#utility.yul\":8595:8596   */\n  dup2\n    /* \"#utility.yul\":8592:8606   */\n  lt\n    /* \"#utility.yul\":8584:8792   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":8677:8686   */\n  dup5\n    /* \"#utility.yul\":8672:8675   */\n  dup10\n    /* \"#utility.yul\":8668:8687   */\n  add\n    /* \"#utility.yul\":8662:8688   */\n  mload\n    /* \"#utility.yul\":8654:8660   */\n  dup3\n    /* \"#utility.yul\":8647:8689   */\n  sstore\n    /* \"#utility.yul\":8728:8729   */\n  0x01\n    /* \"#utility.yul\":8720:8726   */\n  dup3\n    /* \"#utility.yul\":8716:8730   */\n  add\n    /* \"#utility.yul\":8706:8730   */\n  swap2\n  pop\n    /* \"#utility.yul\":8775:8777   */\n  0x20\n    /* \"#utility.yul\":8764:8773   */\n  dup6\n    /* \"#utility.yul\":8760:8778   */\n  add\n    /* \"#utility.yul\":8747:8778   */\n  swap5\n  pop\n    /* \"#utility.yul\":8621:8625   */\n  0x20\n    /* \"#utility.yul\":8618:8619   */\n  dup2\n    /* \"#utility.yul\":8614:8626   */\n  add\n    /* \"#utility.yul\":8609:8626   */\n  swap1\n  pop\n    /* \"#utility.yul\":8584:8792   */\n  jump(tag_152)\ntag_154:\n    /* \"#utility.yul\":8820:8826   */\n  dup7\n    /* \"#utility.yul\":8811:8818   */\n  dup4\n    /* \"#utility.yul\":8808:8827   */\n  lt\n    /* \"#utility.yul\":8805:8984   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":8878:8887   */\n  dup5\n    /* \"#utility.yul\":8873:8876   */\n  dup10\n    /* \"#utility.yul\":8869:8888   */\n  add\n    /* \"#utility.yul\":8863:8889   */\n  mload\n    /* \"#utility.yul\":8921:8969   */\n  tag_156\n    /* \"#utility.yul\":8963:8967   */\n  0x1f\n    /* \"#utility.yul\":8955:8961   */\n  dup10\n    /* \"#utility.yul\":8951:8968   */\n  and\n    /* \"#utility.yul\":8940:8949   */\n  dup3\n    /* \"#utility.yul\":8921:8969   */\n  tag_46\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":8913:8919   */\n  dup4\n    /* \"#utility.yul\":8906:8970   */\n  sstore\n    /* \"#utility.yul\":8828:8984   */\n  pop\n    /* \"#utility.yul\":8805:8984   */\ntag_155:\n    /* \"#utility.yul\":9030:9031   */\n  0x01\n    /* \"#utility.yul\":9026:9027   */\n  0x02\n    /* \"#utility.yul\":9018:9024   */\n  dup9\n    /* \"#utility.yul\":9014:9028   */\n  mul\n    /* \"#utility.yul\":9010:9032   */\n  add\n    /* \"#utility.yul\":9004:9008   */\n  dup9\n    /* \"#utility.yul\":8997:9033   */\n  sstore\n    /* \"#utility.yul\":8432:9043   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8395:9282   */\ntag_147:\n  pop\n    /* \"#utility.yul\":7985:9288   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7893:9288   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/AutomatedMarketMaker.sol\":180:3913  contract AutomatedMarketMaker is ERC20 {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/AutomatedMarketMaker.sol\":180:3913  contract AutomatedMarketMaker is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5f64b55b\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x9cd441da\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdc5fa6c5\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x5f64b55b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x18160ddd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x19e36f3b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0fc63d10\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AutomatedMarketMaker.sol\":230:250  IERC20 public tokenA */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AutomatedMarketMaker.sol\":624:647  uint256 public reserveB */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AutomatedMarketMaker.sol\":257:277  IERC20 public tokenB */\n    tag_10:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AutomatedMarketMaker.sol\":656:676  address public owner */\n    tag_12:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AutomatedMarketMaker.sol\":2488:3880  function addLiquidity(uint256 amountA, uint256 amountB) external {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AutomatedMarketMaker.sol\":594:617  uint256 public reserveA */\n    tag_16:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_84\n      jump\t// in\n    tag_85:\n      dup1\n      iszero\n      tag_86\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_87\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_86)\n    tag_87:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_88:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_88\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":230:250  IERC20 public tokenA */\n    tag_32:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":624:647  uint256 public reserveB */\n    tag_40:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":257:277  IERC20 public tokenB */\n    tag_52:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":656:676  address public owner */\n    tag_60:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_84\n      jump\t// in\n    tag_104:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_84\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_106)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":2488:3880  function addLiquidity(uint256 amountA, uint256 amountB) external {... */\n    tag_69:\n        /* \"contracts/AutomatedMarketMaker.sol\":2636:2637  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":2626:2633  amountA */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":2626:2637  amountA > 0 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":2626:2652  amountA > 0 && amountB > 0 */\n      dup1\n      iszero\n      tag_110\n      jumpi\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2651:2652  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":2641:2648  amountB */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":2641:2652  amountB > 0 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":2626:2652  amountA > 0 && amountB > 0 */\n    tag_110:\n        /* \"contracts/AutomatedMarketMaker.sol\":2618:2676  require(amountA > 0 && amountB > 0, \"Amounts must be > 0\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/AutomatedMarketMaker.sol\":2756:2762  tokenA */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AutomatedMarketMaker.sol\":2756:2775  tokenA.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/AutomatedMarketMaker.sol\":2776:2786  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":2796:2800  this */\n      address\n        /* \"contracts/AutomatedMarketMaker.sol\":2803:2810  amountA */\n      dup6\n        /* \"contracts/AutomatedMarketMaker.sol\":2756:2811  tokenA.transferFrom(msg.sender, address(this), amountA) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2818:2824  tokenB */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AutomatedMarketMaker.sol\":2818:2837  tokenB.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/AutomatedMarketMaker.sol\":2838:2848  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":2858:2862  this */\n      address\n        /* \"contracts/AutomatedMarketMaker.sol\":2865:2872  amountB */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":2818:2873  tokenB.transferFrom(msg.sender, address(this), amountB) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_120:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_123:\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2954:2971  uint256 liquidity */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":3071:3072  0 */\n      dup1\n        /* \"contracts/AutomatedMarketMaker.sol\":3054:3067  totalSupply() */\n      tag_124\n        /* \"contracts/AutomatedMarketMaker.sol\":3054:3065  totalSupply */\n      tag_36\n        /* \"contracts/AutomatedMarketMaker.sol\":3054:3067  totalSupply() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/AutomatedMarketMaker.sol\":3054:3072  totalSupply() == 0 */\n      sub\n        /* \"contracts/AutomatedMarketMaker.sol\":3050:3507  if (totalSupply() == 0) {... */\n      tag_125\n      jumpi\n        /* \"contracts/AutomatedMarketMaker.sol\":3156:3179  sqrt(amountA * amountB) */\n      tag_126\n        /* \"contracts/AutomatedMarketMaker.sol\":3171:3178  amountB */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":3161:3168  amountA */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":3161:3178  amountA * amountB */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"contracts/AutomatedMarketMaker.sol\":3156:3160  sqrt */\n      tag_129\n        /* \"contracts/AutomatedMarketMaker.sol\":3156:3179  sqrt(amountA * amountB) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/AutomatedMarketMaker.sol\":3144:3179  liquidity = sqrt(amountA * amountB) */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":3050:3507  if (totalSupply() == 0) {... */\n      jump(tag_130)\n    tag_125:\n        /* \"contracts/AutomatedMarketMaker.sol\":3300:3499  min(... */\n      tag_131\n        /* \"contracts/AutomatedMarketMaker.sol\":3344:3352  reserveA */\n      sload(0x07)\n        /* \"contracts/AutomatedMarketMaker.sol\":3328:3341  totalSupply() */\n      tag_132\n        /* \"contracts/AutomatedMarketMaker.sol\":3328:3339  totalSupply */\n      tag_36\n        /* \"contracts/AutomatedMarketMaker.sol\":3328:3341  totalSupply() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/AutomatedMarketMaker.sol\":3318:3325  amountA */\n      dup6\n        /* \"contracts/AutomatedMarketMaker.sol\":3318:3341  amountA * totalSupply() */\n      tag_133\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_133:\n        /* \"contracts/AutomatedMarketMaker.sol\":3318:3352  amountA * totalSupply() / reserveA */\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"contracts/AutomatedMarketMaker.sol\":3436:3444  reserveB */\n      sload(0x08)\n        /* \"contracts/AutomatedMarketMaker.sol\":3420:3433  totalSupply() */\n      tag_136\n        /* \"contracts/AutomatedMarketMaker.sol\":3420:3431  totalSupply */\n      tag_36\n        /* \"contracts/AutomatedMarketMaker.sol\":3420:3433  totalSupply() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/AutomatedMarketMaker.sol\":3410:3417  amountB */\n      dup6\n        /* \"contracts/AutomatedMarketMaker.sol\":3410:3433  amountB * totalSupply() */\n      tag_137\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_137:\n        /* \"contracts/AutomatedMarketMaker.sol\":3410:3444  amountB * totalSupply() / reserveB */\n      tag_138\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_138:\n        /* \"contracts/AutomatedMarketMaker.sol\":3300:3303  min */\n      tag_139\n        /* \"contracts/AutomatedMarketMaker.sol\":3300:3499  min(... */\n      jump\t// in\n    tag_131:\n        /* \"contracts/AutomatedMarketMaker.sol\":3288:3499  liquidity = min(... */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":3050:3507  if (totalSupply() == 0) {... */\n    tag_130:\n        /* \"contracts/AutomatedMarketMaker.sol\":3586:3614  _mint(msg.sender, liquidity) */\n      tag_140\n        /* \"contracts/AutomatedMarketMaker.sol\":3592:3602  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":3604:3613  liquidity */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":3586:3591  _mint */\n      tag_141\n        /* \"contracts/AutomatedMarketMaker.sol\":3586:3614  _mint(msg.sender, liquidity) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/AutomatedMarketMaker.sol\":3722:3729  amountA */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":3710:3718  reserveA */\n      0x07\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":3710:3729  reserveA += amountA */\n      dup3\n      dup3\n      sload\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":3748:3755  amountB */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":3736:3744  reserveB */\n      0x08\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":3736:3755  reserveB += amountB */\n      dup3\n      dup3\n      sload\n      tag_144\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_144:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":3836:3846  msg.sender */\n      caller\n        /* \"contracts/AutomatedMarketMaker.sol\":3821:3876  LiquidityAdded(msg.sender, amountA, amountB, liquidity) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e\n        /* \"contracts/AutomatedMarketMaker.sol\":3848:3855  amountA */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":3857:3864  amountB */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":3866:3875  liquidity */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":3821:3876  LiquidityAdded(msg.sender, amountA, amountB, liquidity) */\n      mload(0x40)\n      tag_145\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/AutomatedMarketMaker.sol\":2553:3880  {... */\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2488:3880  function addLiquidity(uint256 amountA, uint256 amountB) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":594:617  uint256 public reserveA */\n    tag_75:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":1677:2408  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n    tag_129:\n        /* \"contracts/AutomatedMarketMaker.sol\":1725:1734  uint256 z */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":1826:1827  3 */\n      0x03\n        /* \"contracts/AutomatedMarketMaker.sol\":1822:1823  y */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":1822:1827  y > 3 */\n      gt\n        /* \"contracts/AutomatedMarketMaker.sol\":1818:2343  if (y > 3) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"contracts/AutomatedMarketMaker.sol\":1891:1892  y */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":1887:1892  z = y */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":1948:1957  uint256 x */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":1968:1969  1 */\n      0x01\n        /* \"contracts/AutomatedMarketMaker.sol\":1964:1965  2 */\n      0x02\n        /* \"contracts/AutomatedMarketMaker.sol\":1960:1961  y */\n      dup5\n        /* \"contracts/AutomatedMarketMaker.sol\":1960:1965  y / 2 */\n      tag_171\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_171:\n        /* \"contracts/AutomatedMarketMaker.sol\":1960:1969  y / 2 + 1 */\n      tag_172\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_172:\n        /* \"contracts/AutomatedMarketMaker.sol\":1948:1969  uint256 x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2089:2236  while (x < z) {... */\n    tag_173:\n        /* \"contracts/AutomatedMarketMaker.sol\":2100:2101  z */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":2096:2097  x */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":2096:2101  x < z */\n      lt\n        /* \"contracts/AutomatedMarketMaker.sol\":2089:2236  while (x < z) {... */\n      iszero\n      tag_174\n      jumpi\n        /* \"contracts/AutomatedMarketMaker.sol\":2122:2123  x */\n      dup1\n        /* \"contracts/AutomatedMarketMaker.sol\":2118:2123  z = x */\n      swap2\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2223:2224  2 */\n      0x02\n        /* \"contracts/AutomatedMarketMaker.sol\":2218:2219  x */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":2214:2215  x */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":2210:2211  y */\n      dup6\n        /* \"contracts/AutomatedMarketMaker.sol\":2210:2215  y / x */\n      tag_175\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_175:\n        /* \"contracts/AutomatedMarketMaker.sol\":2210:2219  y / x + x */\n      tag_176\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_176:\n        /* \"contracts/AutomatedMarketMaker.sol\":2209:2224  (y / x + x) / 2 */\n      tag_177\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_177:\n        /* \"contracts/AutomatedMarketMaker.sol\":2205:2224  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2089:2236  while (x < z) {... */\n      jump(tag_173)\n    tag_174:\n        /* \"contracts/AutomatedMarketMaker.sol\":1829:2243  {... */\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":1818:2343  if (y > 3) {... */\n      jump(tag_178)\n    tag_170:\n        /* \"contracts/AutomatedMarketMaker.sol\":2316:2317  0 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":2311:2312  y */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":2311:2317  y != 0 */\n      eq\n        /* \"contracts/AutomatedMarketMaker.sol\":2307:2343  if (y != 0) {... */\n      tag_179\n      jumpi\n        /* \"contracts/AutomatedMarketMaker.sol\":2334:2335  1 */\n      0x01\n        /* \"contracts/AutomatedMarketMaker.sol\":2330:2335  z = 1 */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":2307:2343  if (y != 0) {... */\n    tag_179:\n        /* \"contracts/AutomatedMarketMaker.sol\":1818:2343  if (y > 3) {... */\n    tag_178:\n        /* \"contracts/AutomatedMarketMaker.sol\":1677:2408  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/AutomatedMarketMaker.sol\":1431:1595  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_139:\n        /* \"contracts/AutomatedMarketMaker.sol\":1489:1496  uint256 */\n      0x00\n        /* \"contracts/AutomatedMarketMaker.sol\":1582:1583  b */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":1578:1579  a */\n      dup4\n        /* \"contracts/AutomatedMarketMaker.sol\":1578:1583  a < b */\n      lt\n        /* \"contracts/AutomatedMarketMaker.sol\":1578:1591  a < b ? a : b */\n      tag_181\n      jumpi\n        /* \"contracts/AutomatedMarketMaker.sol\":1590:1591  b */\n      dup2\n        /* \"contracts/AutomatedMarketMaker.sol\":1578:1591  a < b ? a : b */\n      jump(tag_182)\n    tag_181:\n        /* \"contracts/AutomatedMarketMaker.sol\":1586:1587  a */\n      dup3\n        /* \"contracts/AutomatedMarketMaker.sol\":1578:1591  a < b ? a : b */\n    tag_182:\n        /* \"contracts/AutomatedMarketMaker.sol\":1571:1591  return a < b ? a : b */\n      swap1\n      pop\n        /* \"contracts/AutomatedMarketMaker.sol\":1431:1595  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_193\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_196\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_196:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_197)\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_201)\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_202\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_203:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_204:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_205:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_206:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_207:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_242\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_203\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":711:782   */\n      tag_243\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_204\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_244\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_205\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":881:910   */\n      tag_245\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_206\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_24:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_247\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_207\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_209:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_211:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_212:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_253\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_211\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_213:\n        /* \"#utility.yul\":1876:1900   */\n      tag_255\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_212\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_256:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_214:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_258\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_213\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_215:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_216:\n        /* \"#utility.yul\":2232:2256   */\n      tag_261\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_215\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_262:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_217:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_264\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_216\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_27:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_267\n      tag_209\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2525:2644   */\n    tag_266:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_268\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_214\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_269\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_217\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_218:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_219:\n        /* \"#utility.yul\":3089:3110   */\n      tag_272\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_218\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_30:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_274\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_219\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3399   */\n    tag_220:\n        /* \"#utility.yul\":3367:3370   */\n      0x00\n        /* \"#utility.yul\":3388:3393   */\n      dup2\n        /* \"#utility.yul\":3381:3393   */\n      swap1\n      pop\n        /* \"#utility.yul\":3339:3399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3405:3547   */\n    tag_221:\n        /* \"#utility.yul\":3455:3464   */\n      0x00\n        /* \"#utility.yul\":3488:3541   */\n      tag_277\n        /* \"#utility.yul\":3506:3540   */\n      tag_278\n        /* \"#utility.yul\":3515:3539   */\n      tag_279\n        /* \"#utility.yul\":3533:3538   */\n      dup5\n        /* \"#utility.yul\":3515:3539   */\n      tag_211\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":3506:3540   */\n      tag_220\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":3488:3541   */\n      tag_211\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":3475:3541   */\n      swap1\n      pop\n        /* \"#utility.yul\":3405:3547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3553:3679   */\n    tag_222:\n        /* \"#utility.yul\":3603:3612   */\n      0x00\n        /* \"#utility.yul\":3636:3673   */\n      tag_281\n        /* \"#utility.yul\":3667:3672   */\n      dup3\n        /* \"#utility.yul\":3636:3673   */\n      tag_221\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3623:3673   */\n      swap1\n      pop\n        /* \"#utility.yul\":3553:3679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3685:3825   */\n    tag_223:\n        /* \"#utility.yul\":3749:3758   */\n      0x00\n        /* \"#utility.yul\":3782:3819   */\n      tag_283\n        /* \"#utility.yul\":3813:3818   */\n      dup3\n        /* \"#utility.yul\":3782:3819   */\n      tag_222\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3769:3819   */\n      swap1\n      pop\n        /* \"#utility.yul\":3685:3825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3831:3990   */\n    tag_224:\n        /* \"#utility.yul\":3932:3983   */\n      tag_285\n        /* \"#utility.yul\":3977:3982   */\n      dup2\n        /* \"#utility.yul\":3932:3983   */\n      tag_223\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3927:3930   */\n      dup3\n        /* \"#utility.yul\":3920:3984   */\n      mstore\n        /* \"#utility.yul\":3831:3990   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3996:4246   */\n    tag_34:\n        /* \"#utility.yul\":4103:4107   */\n      0x00\n        /* \"#utility.yul\":4141:4143   */\n      0x20\n        /* \"#utility.yul\":4130:4139   */\n      dup3\n        /* \"#utility.yul\":4126:4144   */\n      add\n        /* \"#utility.yul\":4118:4144   */\n      swap1\n      pop\n        /* \"#utility.yul\":4154:4239   */\n      tag_287\n        /* \"#utility.yul\":4236:4237   */\n      0x00\n        /* \"#utility.yul\":4225:4234   */\n      dup4\n        /* \"#utility.yul\":4221:4238   */\n      add\n        /* \"#utility.yul\":4212:4218   */\n      dup5\n        /* \"#utility.yul\":4154:4239   */\n      tag_224\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3996:4246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4252:4370   */\n    tag_225:\n        /* \"#utility.yul\":4339:4363   */\n      tag_289\n        /* \"#utility.yul\":4357:4362   */\n      dup2\n        /* \"#utility.yul\":4339:4363   */\n      tag_215\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4334:4337   */\n      dup3\n        /* \"#utility.yul\":4327:4364   */\n      mstore\n        /* \"#utility.yul\":4252:4370   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4376:4598   */\n    tag_38:\n        /* \"#utility.yul\":4469:4473   */\n      0x00\n        /* \"#utility.yul\":4507:4509   */\n      0x20\n        /* \"#utility.yul\":4496:4505   */\n      dup3\n        /* \"#utility.yul\":4492:4510   */\n      add\n        /* \"#utility.yul\":4484:4510   */\n      swap1\n      pop\n        /* \"#utility.yul\":4520:4591   */\n      tag_291\n        /* \"#utility.yul\":4588:4589   */\n      0x00\n        /* \"#utility.yul\":4577:4586   */\n      dup4\n        /* \"#utility.yul\":4573:4590   */\n      add\n        /* \"#utility.yul\":4564:4570   */\n      dup5\n        /* \"#utility.yul\":4520:4591   */\n      tag_225\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":4376:4598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4604:5223   */\n    tag_44:\n        /* \"#utility.yul\":4681:4687   */\n      0x00\n        /* \"#utility.yul\":4689:4695   */\n      dup1\n        /* \"#utility.yul\":4697:4703   */\n      0x00\n        /* \"#utility.yul\":4746:4748   */\n      0x60\n        /* \"#utility.yul\":4734:4743   */\n      dup5\n        /* \"#utility.yul\":4725:4732   */\n      dup7\n        /* \"#utility.yul\":4721:4744   */\n      sub\n        /* \"#utility.yul\":4717:4749   */\n      slt\n        /* \"#utility.yul\":4714:4833   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":4752:4831   */\n      tag_294\n      tag_209\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4714:4833   */\n    tag_293:\n        /* \"#utility.yul\":4872:4873   */\n      0x00\n        /* \"#utility.yul\":4897:4950   */\n      tag_295\n        /* \"#utility.yul\":4942:4949   */\n      dup7\n        /* \"#utility.yul\":4933:4939   */\n      dup3\n        /* \"#utility.yul\":4922:4931   */\n      dup8\n        /* \"#utility.yul\":4918:4940   */\n      add\n        /* \"#utility.yul\":4897:4950   */\n      tag_214\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4887:4950   */\n      swap4\n      pop\n        /* \"#utility.yul\":4843:4960   */\n      pop\n        /* \"#utility.yul\":4999:5001   */\n      0x20\n        /* \"#utility.yul\":5025:5078   */\n      tag_296\n        /* \"#utility.yul\":5070:5077   */\n      dup7\n        /* \"#utility.yul\":5061:5067   */\n      dup3\n        /* \"#utility.yul\":5050:5059   */\n      dup8\n        /* \"#utility.yul\":5046:5068   */\n      add\n        /* \"#utility.yul\":5025:5078   */\n      tag_214\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":5015:5078   */\n      swap3\n      pop\n        /* \"#utility.yul\":4970:5088   */\n      pop\n        /* \"#utility.yul\":5127:5129   */\n      0x40\n        /* \"#utility.yul\":5153:5206   */\n      tag_297\n        /* \"#utility.yul\":5198:5205   */\n      dup7\n        /* \"#utility.yul\":5189:5195   */\n      dup3\n        /* \"#utility.yul\":5178:5187   */\n      dup8\n        /* \"#utility.yul\":5174:5196   */\n      add\n        /* \"#utility.yul\":5153:5206   */\n      tag_217\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5143:5206   */\n      swap2\n      pop\n        /* \"#utility.yul\":5098:5216   */\n      pop\n        /* \"#utility.yul\":4604:5223   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5229:5315   */\n    tag_226:\n        /* \"#utility.yul\":5264:5271   */\n      0x00\n        /* \"#utility.yul\":5304:5308   */\n      0xff\n        /* \"#utility.yul\":5297:5302   */\n      dup3\n        /* \"#utility.yul\":5293:5309   */\n      and\n        /* \"#utility.yul\":5282:5309   */\n      swap1\n      pop\n        /* \"#utility.yul\":5229:5315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5321:5433   */\n    tag_227:\n        /* \"#utility.yul\":5404:5426   */\n      tag_300\n        /* \"#utility.yul\":5420:5425   */\n      dup2\n        /* \"#utility.yul\":5404:5426   */\n      tag_226\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":5399:5402   */\n      dup3\n        /* \"#utility.yul\":5392:5427   */\n      mstore\n        /* \"#utility.yul\":5321:5433   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5439:5653   */\n    tag_50:\n        /* \"#utility.yul\":5528:5532   */\n      0x00\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5555:5564   */\n      dup3\n        /* \"#utility.yul\":5551:5569   */\n      add\n        /* \"#utility.yul\":5543:5569   */\n      swap1\n      pop\n        /* \"#utility.yul\":5579:5646   */\n      tag_302\n        /* \"#utility.yul\":5643:5644   */\n      0x00\n        /* \"#utility.yul\":5632:5641   */\n      dup4\n        /* \"#utility.yul\":5628:5645   */\n      add\n        /* \"#utility.yul\":5619:5625   */\n      dup5\n        /* \"#utility.yul\":5579:5646   */\n      tag_227\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5439:5653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5659:5988   */\n    tag_56:\n        /* \"#utility.yul\":5718:5724   */\n      0x00\n        /* \"#utility.yul\":5767:5769   */\n      0x20\n        /* \"#utility.yul\":5755:5764   */\n      dup3\n        /* \"#utility.yul\":5746:5753   */\n      dup5\n        /* \"#utility.yul\":5742:5765   */\n      sub\n        /* \"#utility.yul\":5738:5770   */\n      slt\n        /* \"#utility.yul\":5735:5854   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":5773:5852   */\n      tag_305\n      tag_209\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":5735:5854   */\n    tag_304:\n        /* \"#utility.yul\":5893:5894   */\n      0x00\n        /* \"#utility.yul\":5918:5971   */\n      tag_306\n        /* \"#utility.yul\":5963:5970   */\n      dup5\n        /* \"#utility.yul\":5954:5960   */\n      dup3\n        /* \"#utility.yul\":5943:5952   */\n      dup6\n        /* \"#utility.yul\":5939:5961   */\n      add\n        /* \"#utility.yul\":5918:5971   */\n      tag_214\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":5908:5971   */\n      swap2\n      pop\n        /* \"#utility.yul\":5864:5981   */\n      pop\n        /* \"#utility.yul\":5659:5988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5994:6112   */\n    tag_228:\n        /* \"#utility.yul\":6081:6105   */\n      tag_308\n        /* \"#utility.yul\":6099:6104   */\n      dup2\n        /* \"#utility.yul\":6081:6105   */\n      tag_212\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":6076:6079   */\n      dup3\n        /* \"#utility.yul\":6069:6106   */\n      mstore\n        /* \"#utility.yul\":5994:6112   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6118:6340   */\n    tag_62:\n        /* \"#utility.yul\":6211:6215   */\n      0x00\n        /* \"#utility.yul\":6249:6251   */\n      0x20\n        /* \"#utility.yul\":6238:6247   */\n      dup3\n        /* \"#utility.yul\":6234:6252   */\n      add\n        /* \"#utility.yul\":6226:6252   */\n      swap1\n      pop\n        /* \"#utility.yul\":6262:6333   */\n      tag_310\n        /* \"#utility.yul\":6330:6331   */\n      0x00\n        /* \"#utility.yul\":6319:6328   */\n      dup4\n        /* \"#utility.yul\":6315:6332   */\n      add\n        /* \"#utility.yul\":6306:6312   */\n      dup5\n        /* \"#utility.yul\":6262:6333   */\n      tag_228\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":6118:6340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6346:6820   */\n    tag_68:\n        /* \"#utility.yul\":6414:6420   */\n      0x00\n        /* \"#utility.yul\":6422:6428   */\n      dup1\n        /* \"#utility.yul\":6471:6473   */\n      0x40\n        /* \"#utility.yul\":6459:6468   */\n      dup4\n        /* \"#utility.yul\":6450:6457   */\n      dup6\n        /* \"#utility.yul\":6446:6469   */\n      sub\n        /* \"#utility.yul\":6442:6474   */\n      slt\n        /* \"#utility.yul\":6439:6558   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":6477:6556   */\n      tag_313\n      tag_209\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6439:6558   */\n    tag_312:\n        /* \"#utility.yul\":6597:6598   */\n      0x00\n        /* \"#utility.yul\":6622:6675   */\n      tag_314\n        /* \"#utility.yul\":6667:6674   */\n      dup6\n        /* \"#utility.yul\":6658:6664   */\n      dup3\n        /* \"#utility.yul\":6647:6656   */\n      dup7\n        /* \"#utility.yul\":6643:6665   */\n      add\n        /* \"#utility.yul\":6622:6675   */\n      tag_217\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":6612:6675   */\n      swap3\n      pop\n        /* \"#utility.yul\":6568:6685   */\n      pop\n        /* \"#utility.yul\":6724:6726   */\n      0x20\n        /* \"#utility.yul\":6750:6803   */\n      tag_315\n        /* \"#utility.yul\":6795:6802   */\n      dup6\n        /* \"#utility.yul\":6786:6792   */\n      dup3\n        /* \"#utility.yul\":6775:6784   */\n      dup7\n        /* \"#utility.yul\":6771:6793   */\n      add\n        /* \"#utility.yul\":6750:6803   */\n      tag_217\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":6740:6803   */\n      swap2\n      pop\n        /* \"#utility.yul\":6695:6813   */\n      pop\n        /* \"#utility.yul\":6346:6820   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6826:7300   */\n    tag_79:\n        /* \"#utility.yul\":6894:6900   */\n      0x00\n        /* \"#utility.yul\":6902:6908   */\n      dup1\n        /* \"#utility.yul\":6951:6953   */\n      0x40\n        /* \"#utility.yul\":6939:6948   */\n      dup4\n        /* \"#utility.yul\":6930:6937   */\n      dup6\n        /* \"#utility.yul\":6926:6949   */\n      sub\n        /* \"#utility.yul\":6922:6954   */\n      slt\n        /* \"#utility.yul\":6919:7038   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":6957:7036   */\n      tag_318\n      tag_209\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6919:7038   */\n    tag_317:\n        /* \"#utility.yul\":7077:7078   */\n      0x00\n        /* \"#utility.yul\":7102:7155   */\n      tag_319\n        /* \"#utility.yul\":7147:7154   */\n      dup6\n        /* \"#utility.yul\":7138:7144   */\n      dup3\n        /* \"#utility.yul\":7127:7136   */\n      dup7\n        /* \"#utility.yul\":7123:7145   */\n      add\n        /* \"#utility.yul\":7102:7155   */\n      tag_214\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":7092:7155   */\n      swap3\n      pop\n        /* \"#utility.yul\":7048:7165   */\n      pop\n        /* \"#utility.yul\":7204:7206   */\n      0x20\n        /* \"#utility.yul\":7230:7283   */\n      tag_320\n        /* \"#utility.yul\":7275:7282   */\n      dup6\n        /* \"#utility.yul\":7266:7272   */\n      dup3\n        /* \"#utility.yul\":7255:7264   */\n      dup7\n        /* \"#utility.yul\":7251:7273   */\n      add\n        /* \"#utility.yul\":7230:7283   */\n      tag_214\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":7220:7283   */\n      swap2\n      pop\n        /* \"#utility.yul\":7175:7293   */\n      pop\n        /* \"#utility.yul\":6826:7300   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7306:7486   */\n    tag_229:\n        /* \"#utility.yul\":7354:7431   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7351:7352   */\n      0x00\n        /* \"#utility.yul\":7344:7432   */\n      mstore\n        /* \"#utility.yul\":7451:7455   */\n      0x22\n        /* \"#utility.yul\":7448:7449   */\n      0x04\n        /* \"#utility.yul\":7441:7456   */\n      mstore\n        /* \"#utility.yul\":7475:7479   */\n      0x24\n        /* \"#utility.yul\":7472:7473   */\n      0x00\n        /* \"#utility.yul\":7465:7480   */\n      revert\n        /* \"#utility.yul\":7492:7812   */\n    tag_84:\n        /* \"#utility.yul\":7536:7542   */\n      0x00\n        /* \"#utility.yul\":7573:7574   */\n      0x02\n        /* \"#utility.yul\":7567:7571   */\n      dup3\n        /* \"#utility.yul\":7563:7575   */\n      div\n        /* \"#utility.yul\":7553:7575   */\n      swap1\n      pop\n        /* \"#utility.yul\":7620:7621   */\n      0x01\n        /* \"#utility.yul\":7614:7618   */\n      dup3\n        /* \"#utility.yul\":7610:7622   */\n      and\n        /* \"#utility.yul\":7641:7659   */\n      dup1\n        /* \"#utility.yul\":7631:7712   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":7697:7701   */\n      0x7f\n        /* \"#utility.yul\":7689:7695   */\n      dup3\n        /* \"#utility.yul\":7685:7702   */\n      and\n        /* \"#utility.yul\":7675:7702   */\n      swap2\n      pop\n        /* \"#utility.yul\":7631:7712   */\n    tag_323:\n        /* \"#utility.yul\":7759:7761   */\n      0x20\n        /* \"#utility.yul\":7751:7757   */\n      dup3\n        /* \"#utility.yul\":7748:7762   */\n      lt\n        /* \"#utility.yul\":7728:7746   */\n      dup2\n        /* \"#utility.yul\":7725:7763   */\n      sub\n        /* \"#utility.yul\":7722:7806   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":7778:7796   */\n      tag_325\n      tag_229\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":7722:7806   */\n    tag_324:\n        /* \"#utility.yul\":7543:7812   */\n      pop\n        /* \"#utility.yul\":7492:7812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7818:7987   */\n    tag_230:\n        /* \"#utility.yul\":7958:7979   */\n      0x416d6f756e7473206d757374206265203e203000000000000000000000000000\n        /* \"#utility.yul\":7954:7955   */\n      0x00\n        /* \"#utility.yul\":7946:7952   */\n      dup3\n        /* \"#utility.yul\":7942:7956   */\n      add\n        /* \"#utility.yul\":7935:7980   */\n      mstore\n        /* \"#utility.yul\":7818:7987   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7993:8359   */\n    tag_231:\n        /* \"#utility.yul\":8135:8138   */\n      0x00\n        /* \"#utility.yul\":8156:8223   */\n      tag_328\n        /* \"#utility.yul\":8220:8222   */\n      0x13\n        /* \"#utility.yul\":8215:8218   */\n      dup4\n        /* \"#utility.yul\":8156:8223   */\n      tag_204\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":8149:8223   */\n      swap2\n      pop\n        /* \"#utility.yul\":8232:8325   */\n      tag_329\n        /* \"#utility.yul\":8321:8324   */\n      dup3\n        /* \"#utility.yul\":8232:8325   */\n      tag_230\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":8350:8352   */\n      0x20\n        /* \"#utility.yul\":8345:8348   */\n      dup3\n        /* \"#utility.yul\":8341:8353   */\n      add\n        /* \"#utility.yul\":8334:8353   */\n      swap1\n      pop\n        /* \"#utility.yul\":7993:8359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8365:8784   */\n    tag_113:\n        /* \"#utility.yul\":8531:8535   */\n      0x00\n        /* \"#utility.yul\":8569:8571   */\n      0x20\n        /* \"#utility.yul\":8558:8567   */\n      dup3\n        /* \"#utility.yul\":8554:8572   */\n      add\n        /* \"#utility.yul\":8546:8572   */\n      swap1\n      pop\n        /* \"#utility.yul\":8618:8627   */\n      dup2\n        /* \"#utility.yul\":8612:8616   */\n      dup2\n        /* \"#utility.yul\":8608:8628   */\n      sub\n        /* \"#utility.yul\":8604:8605   */\n      0x00\n        /* \"#utility.yul\":8593:8602   */\n      dup4\n        /* \"#utility.yul\":8589:8606   */\n      add\n        /* \"#utility.yul\":8582:8629   */\n      mstore\n        /* \"#utility.yul\":8646:8777   */\n      tag_331\n        /* \"#utility.yul\":8772:8776   */\n      dup2\n        /* \"#utility.yul\":8646:8777   */\n      tag_231\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":8638:8777   */\n      swap1\n      pop\n        /* \"#utility.yul\":8365:8784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8790:9232   */\n    tag_115:\n        /* \"#utility.yul\":8939:8943   */\n      0x00\n        /* \"#utility.yul\":8977:8979   */\n      0x60\n        /* \"#utility.yul\":8966:8975   */\n      dup3\n        /* \"#utility.yul\":8962:8980   */\n      add\n        /* \"#utility.yul\":8954:8980   */\n      swap1\n      pop\n        /* \"#utility.yul\":8990:9061   */\n      tag_333\n        /* \"#utility.yul\":9058:9059   */\n      0x00\n        /* \"#utility.yul\":9047:9056   */\n      dup4\n        /* \"#utility.yul\":9043:9060   */\n      add\n        /* \"#utility.yul\":9034:9040   */\n      dup7\n        /* \"#utility.yul\":8990:9061   */\n      tag_228\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":9071:9143   */\n      tag_334\n        /* \"#utility.yul\":9139:9141   */\n      0x20\n        /* \"#utility.yul\":9128:9137   */\n      dup4\n        /* \"#utility.yul\":9124:9142   */\n      add\n        /* \"#utility.yul\":9115:9121   */\n      dup6\n        /* \"#utility.yul\":9071:9143   */\n      tag_228\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":9153:9225   */\n      tag_335\n        /* \"#utility.yul\":9221:9223   */\n      0x40\n        /* \"#utility.yul\":9210:9219   */\n      dup4\n        /* \"#utility.yul\":9206:9224   */\n      add\n        /* \"#utility.yul\":9197:9203   */\n      dup5\n        /* \"#utility.yul\":9153:9225   */\n      tag_225\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":8790:9232   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9238:9354   */\n    tag_232:\n        /* \"#utility.yul\":9308:9329   */\n      tag_337\n        /* \"#utility.yul\":9323:9328   */\n      dup2\n        /* \"#utility.yul\":9308:9329   */\n      tag_218\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":9301:9306   */\n      dup2\n        /* \"#utility.yul\":9298:9330   */\n      eq\n        /* \"#utility.yul\":9288:9348   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":9344:9345   */\n      0x00\n        /* \"#utility.yul\":9341:9342   */\n      dup1\n        /* \"#utility.yul\":9334:9346   */\n      revert\n        /* \"#utility.yul\":9288:9348   */\n    tag_338:\n        /* \"#utility.yul\":9238:9354   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9360:9497   */\n    tag_233:\n        /* \"#utility.yul\":9414:9419   */\n      0x00\n        /* \"#utility.yul\":9445:9451   */\n      dup2\n        /* \"#utility.yul\":9439:9452   */\n      mload\n        /* \"#utility.yul\":9430:9452   */\n      swap1\n      pop\n        /* \"#utility.yul\":9461:9491   */\n      tag_340\n        /* \"#utility.yul\":9485:9490   */\n      dup2\n        /* \"#utility.yul\":9461:9491   */\n      tag_232\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":9360:9497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9503:9848   */\n    tag_119:\n        /* \"#utility.yul\":9570:9576   */\n      0x00\n        /* \"#utility.yul\":9619:9621   */\n      0x20\n        /* \"#utility.yul\":9607:9616   */\n      dup3\n        /* \"#utility.yul\":9598:9605   */\n      dup5\n        /* \"#utility.yul\":9594:9617   */\n      sub\n        /* \"#utility.yul\":9590:9622   */\n      slt\n        /* \"#utility.yul\":9587:9706   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":9625:9704   */\n      tag_343\n      tag_209\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":9587:9706   */\n    tag_342:\n        /* \"#utility.yul\":9745:9746   */\n      0x00\n        /* \"#utility.yul\":9770:9831   */\n      tag_344\n        /* \"#utility.yul\":9823:9830   */\n      dup5\n        /* \"#utility.yul\":9814:9820   */\n      dup3\n        /* \"#utility.yul\":9803:9812   */\n      dup6\n        /* \"#utility.yul\":9799:9821   */\n      add\n        /* \"#utility.yul\":9770:9831   */\n      tag_233\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":9760:9831   */\n      swap2\n      pop\n        /* \"#utility.yul\":9716:9841   */\n      pop\n        /* \"#utility.yul\":9503:9848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9854:10034   */\n    tag_234:\n        /* \"#utility.yul\":9902:9979   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9899:9900   */\n      0x00\n        /* \"#utility.yul\":9892:9980   */\n      mstore\n        /* \"#utility.yul\":9999:10003   */\n      0x11\n        /* \"#utility.yul\":9996:9997   */\n      0x04\n        /* \"#utility.yul\":9989:10004   */\n      mstore\n        /* \"#utility.yul\":10023:10027   */\n      0x24\n        /* \"#utility.yul\":10020:10021   */\n      0x00\n        /* \"#utility.yul\":10013:10028   */\n      revert\n        /* \"#utility.yul\":10040:10450   */\n    tag_128:\n        /* \"#utility.yul\":10080:10087   */\n      0x00\n        /* \"#utility.yul\":10103:10123   */\n      tag_347\n        /* \"#utility.yul\":10121:10122   */\n      dup3\n        /* \"#utility.yul\":10103:10123   */\n      tag_215\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":10098:10123   */\n      swap2\n      pop\n        /* \"#utility.yul\":10137:10157   */\n      tag_348\n        /* \"#utility.yul\":10155:10156   */\n      dup4\n        /* \"#utility.yul\":10137:10157   */\n      tag_215\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":10132:10157   */\n      swap3\n      pop\n        /* \"#utility.yul\":10192:10193   */\n      dup3\n        /* \"#utility.yul\":10189:10190   */\n      dup3\n        /* \"#utility.yul\":10185:10194   */\n      mul\n        /* \"#utility.yul\":10214:10244   */\n      tag_349\n        /* \"#utility.yul\":10232:10243   */\n      dup2\n        /* \"#utility.yul\":10214:10244   */\n      tag_215\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":10203:10244   */\n      swap2\n      pop\n        /* \"#utility.yul\":10393:10394   */\n      dup3\n        /* \"#utility.yul\":10384:10391   */\n      dup3\n        /* \"#utility.yul\":10380:10395   */\n      div\n        /* \"#utility.yul\":10377:10378   */\n      dup5\n        /* \"#utility.yul\":10374:10396   */\n      eq\n        /* \"#utility.yul\":10354:10355   */\n      dup4\n        /* \"#utility.yul\":10347:10356   */\n      iszero\n        /* \"#utility.yul\":10327:10410   */\n      or\n        /* \"#utility.yul\":10304:10443   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":10423:10441   */\n      tag_351\n      tag_234\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":10304:10443   */\n    tag_350:\n        /* \"#utility.yul\":10088:10450   */\n      pop\n        /* \"#utility.yul\":10040:10450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10456:10636   */\n    tag_235:\n        /* \"#utility.yul\":10504:10581   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10501:10502   */\n      0x00\n        /* \"#utility.yul\":10494:10582   */\n      mstore\n        /* \"#utility.yul\":10601:10605   */\n      0x12\n        /* \"#utility.yul\":10598:10599   */\n      0x04\n        /* \"#utility.yul\":10591:10606   */\n      mstore\n        /* \"#utility.yul\":10625:10629   */\n      0x24\n        /* \"#utility.yul\":10622:10623   */\n      0x00\n        /* \"#utility.yul\":10615:10630   */\n      revert\n        /* \"#utility.yul\":10642:10827   */\n    tag_135:\n        /* \"#utility.yul\":10682:10683   */\n      0x00\n        /* \"#utility.yul\":10699:10719   */\n      tag_354\n        /* \"#utility.yul\":10717:10718   */\n      dup3\n        /* \"#utility.yul\":10699:10719   */\n      tag_215\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":10694:10719   */\n      swap2\n      pop\n        /* \"#utility.yul\":10733:10753   */\n      tag_355\n        /* \"#utility.yul\":10751:10752   */\n      dup4\n        /* \"#utility.yul\":10733:10753   */\n      tag_215\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":10728:10753   */\n      swap3\n      pop\n        /* \"#utility.yul\":10772:10773   */\n      dup3\n        /* \"#utility.yul\":10762:10797   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":10777:10795   */\n      tag_357\n      tag_235\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":10762:10797   */\n    tag_356:\n        /* \"#utility.yul\":10819:10820   */\n      dup3\n        /* \"#utility.yul\":10816:10817   */\n      dup3\n        /* \"#utility.yul\":10812:10821   */\n      div\n        /* \"#utility.yul\":10807:10821   */\n      swap1\n      pop\n        /* \"#utility.yul\":10642:10827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10833:11024   */\n    tag_143:\n        /* \"#utility.yul\":10873:10876   */\n      0x00\n        /* \"#utility.yul\":10892:10912   */\n      tag_359\n        /* \"#utility.yul\":10910:10911   */\n      dup3\n        /* \"#utility.yul\":10892:10912   */\n      tag_215\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":10887:10912   */\n      swap2\n      pop\n        /* \"#utility.yul\":10926:10946   */\n      tag_360\n        /* \"#utility.yul\":10944:10945   */\n      dup4\n        /* \"#utility.yul\":10926:10946   */\n      tag_215\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":10921:10946   */\n      swap3\n      pop\n        /* \"#utility.yul\":10969:10970   */\n      dup3\n        /* \"#utility.yul\":10966:10967   */\n      dup3\n        /* \"#utility.yul\":10962:10971   */\n      add\n        /* \"#utility.yul\":10955:10971   */\n      swap1\n      pop\n        /* \"#utility.yul\":10990:10993   */\n      dup1\n        /* \"#utility.yul\":10987:10988   */\n      dup3\n        /* \"#utility.yul\":10984:10994   */\n      gt\n        /* \"#utility.yul\":10981:11017   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":10997:11015   */\n      tag_362\n      tag_234\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":10981:11017   */\n    tag_361:\n        /* \"#utility.yul\":10833:11024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11030:11472   */\n    tag_146:\n        /* \"#utility.yul\":11179:11183   */\n      0x00\n        /* \"#utility.yul\":11217:11219   */\n      0x60\n        /* \"#utility.yul\":11206:11215   */\n      dup3\n        /* \"#utility.yul\":11202:11220   */\n      add\n        /* \"#utility.yul\":11194:11220   */\n      swap1\n      pop\n        /* \"#utility.yul\":11230:11301   */\n      tag_364\n        /* \"#utility.yul\":11298:11299   */\n      0x00\n        /* \"#utility.yul\":11287:11296   */\n      dup4\n        /* \"#utility.yul\":11283:11300   */\n      add\n        /* \"#utility.yul\":11274:11280   */\n      dup7\n        /* \"#utility.yul\":11230:11301   */\n      tag_225\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":11311:11383   */\n      tag_365\n        /* \"#utility.yul\":11379:11381   */\n      0x20\n        /* \"#utility.yul\":11368:11377   */\n      dup4\n        /* \"#utility.yul\":11364:11382   */\n      add\n        /* \"#utility.yul\":11355:11361   */\n      dup6\n        /* \"#utility.yul\":11311:11383   */\n      tag_225\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":11393:11465   */\n      tag_366\n        /* \"#utility.yul\":11461:11463   */\n      0x40\n        /* \"#utility.yul\":11450:11459   */\n      dup4\n        /* \"#utility.yul\":11446:11464   */\n      add\n        /* \"#utility.yul\":11437:11443   */\n      dup5\n        /* \"#utility.yul\":11393:11465   */\n      tag_225\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":11030:11472   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11478:11920   */\n    tag_160:\n        /* \"#utility.yul\":11627:11631   */\n      0x00\n        /* \"#utility.yul\":11665:11667   */\n      0x60\n        /* \"#utility.yul\":11654:11663   */\n      dup3\n        /* \"#utility.yul\":11650:11668   */\n      add\n        /* \"#utility.yul\":11642:11668   */\n      swap1\n      pop\n        /* \"#utility.yul\":11678:11749   */\n      tag_368\n        /* \"#utility.yul\":11746:11747   */\n      0x00\n        /* \"#utility.yul\":11735:11744   */\n      dup4\n        /* \"#utility.yul\":11731:11748   */\n      add\n        /* \"#utility.yul\":11722:11728   */\n      dup7\n        /* \"#utility.yul\":11678:11749   */\n      tag_228\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":11759:11831   */\n      tag_369\n        /* \"#utility.yul\":11827:11829   */\n      0x20\n        /* \"#utility.yul\":11816:11825   */\n      dup4\n        /* \"#utility.yul\":11812:11830   */\n      add\n        /* \"#utility.yul\":11803:11809   */\n      dup6\n        /* \"#utility.yul\":11759:11831   */\n      tag_225\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":11841:11913   */\n      tag_370\n        /* \"#utility.yul\":11909:11911   */\n      0x40\n        /* \"#utility.yul\":11898:11907   */\n      dup4\n        /* \"#utility.yul\":11894:11912   */\n      add\n        /* \"#utility.yul\":11885:11891   */\n      dup5\n        /* \"#utility.yul\":11841:11913   */\n      tag_225\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":11478:11920   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208a570aee081d82b4c2b429f36153468d3dead84e42c973baa2fc5f10bac8e20264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_868": {
									"entryPoint": null,
									"id": 868,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_memory": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 286,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 397,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1013,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9291:6",
										"nodeType": "YulBlock",
										"src": "0:9291:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "934:28:6",
													"nodeType": "YulBlock",
													"src": "934:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:1:6",
																		"nodeType": "YulLiteral",
																		"src": "951:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:6",
																		"nodeType": "YulLiteral",
																		"src": "954:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:6"
																},
																"nativeSrc": "944:12:6",
																"nodeType": "YulFunctionCall",
																"src": "944:12:6"
															},
															"nativeSrc": "944:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "944:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "845:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:6"
											},
											{
												"body": {
													"nativeSrc": "1057:28:6",
													"nodeType": "YulBlock",
													"src": "1057:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1074:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1077:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1067:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:6"
																},
																"nativeSrc": "1067:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1067:12:6"
															},
															"nativeSrc": "1067:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1067:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "968:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "968:117:6"
											},
											{
												"body": {
													"nativeSrc": "1139:54:6",
													"nodeType": "YulBlock",
													"src": "1139:54:6",
													"statements": [
														{
															"nativeSrc": "1149:38:6",
															"nodeType": "YulAssignment",
															"src": "1149:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1167:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1167:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1174:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:6"
																		},
																		"nativeSrc": "1163:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1183:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1183:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1179:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:6"
																		},
																		"nativeSrc": "1179:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1179:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1159:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:6"
																},
																"nativeSrc": "1159:28:6",
																"nodeType": "YulFunctionCall",
																"src": "1159:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1149:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1091:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1122:5:6",
														"nodeType": "YulTypedName",
														"src": "1122:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1132:6:6",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"src": "1091:102:6"
											},
											{
												"body": {
													"nativeSrc": "1227:152:6",
													"nodeType": "YulBlock",
													"src": "1227:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1244:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1247:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1247:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1237:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:6"
																},
																"nativeSrc": "1237:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1237:88:6"
															},
															"nativeSrc": "1237:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1237:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1344:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:6"
																},
																"nativeSrc": "1334:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1334:15:6"
															},
															"nativeSrc": "1334:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1334:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1368:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1368:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1358:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:6"
																},
																"nativeSrc": "1358:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1358:15:6"
															},
															"nativeSrc": "1358:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1358:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1199:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:180:6"
											},
											{
												"body": {
													"nativeSrc": "1428:238:6",
													"nodeType": "YulBlock",
													"src": "1428:238:6",
													"statements": [
														{
															"nativeSrc": "1438:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1438:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1460:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1490:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1490:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1468:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "1468:21:6"
																		},
																		"nativeSrc": "1468:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1468:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1456:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:6"
																},
																"nativeSrc": "1456:40:6",
																"nodeType": "YulFunctionCall",
																"src": "1456:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1442:10:6",
																	"nodeType": "YulTypedName",
																	"src": "1442:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:22:6",
																"nodeType": "YulBlock",
																"src": "1607:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1609:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:6"
																			},
																			"nativeSrc": "1609:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:6"
																		},
																		"nativeSrc": "1609:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1550:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1550:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1562:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1562:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1547:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1547:2:6"
																		},
																		"nativeSrc": "1547:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1547:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1586:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1586:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1598:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1583:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:6"
																		},
																		"nativeSrc": "1583:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1583:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1544:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:6"
																},
																"nativeSrc": "1544:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1544:62:6"
															},
															"nativeSrc": "1541:88:6",
															"nodeType": "YulIf",
															"src": "1541:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1645:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1649:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1649:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:6"
																},
																"nativeSrc": "1638:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1638:22:6"
															},
															"nativeSrc": "1638:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1638:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1385:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1414:6:6",
														"nodeType": "YulTypedName",
														"src": "1414:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1422:4:6",
														"nodeType": "YulTypedName",
														"src": "1422:4:6",
														"type": ""
													}
												],
												"src": "1385:281:6"
											},
											{
												"body": {
													"nativeSrc": "1713:88:6",
													"nodeType": "YulBlock",
													"src": "1713:88:6",
													"statements": [
														{
															"nativeSrc": "1723:30:6",
															"nodeType": "YulAssignment",
															"src": "1723:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1733:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1733:18:6"
																},
																"nativeSrc": "1733:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1733:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1723:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1782:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1790:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1762:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1762:19:6"
																},
																"nativeSrc": "1762:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1762:33:6"
															},
															"nativeSrc": "1762:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1672:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1697:4:6",
														"nodeType": "YulTypedName",
														"src": "1697:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1706:6:6",
														"nodeType": "YulTypedName",
														"src": "1706:6:6",
														"type": ""
													}
												],
												"src": "1672:129:6"
											},
											{
												"body": {
													"nativeSrc": "1874:241:6",
													"nodeType": "YulBlock",
													"src": "1874:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1979:22:6",
																"nodeType": "YulBlock",
																"src": "1979:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1981:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1981:16:6"
																			},
																			"nativeSrc": "1981:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1981:18:6"
																		},
																		"nativeSrc": "1981:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1981:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1951:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1951:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1959:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1959:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1948:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1948:2:6"
																},
																"nativeSrc": "1948:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1948:30:6"
															},
															"nativeSrc": "1945:56:6",
															"nodeType": "YulIf",
															"src": "1945:56:6"
														},
														{
															"nativeSrc": "2011:37:6",
															"nodeType": "YulAssignment",
															"src": "2011:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2041:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2041:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2019:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "2019:21:6"
																},
																"nativeSrc": "2019:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2019:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2011:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:6"
																}
															]
														},
														{
															"nativeSrc": "2085:23:6",
															"nodeType": "YulAssignment",
															"src": "2085:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2097:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2097:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2093:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:6"
																},
																"nativeSrc": "2093:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2093:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2085:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2085:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1807:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1858:6:6",
														"nodeType": "YulTypedName",
														"src": "1858:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1869:4:6",
														"nodeType": "YulTypedName",
														"src": "1869:4:6",
														"type": ""
													}
												],
												"src": "1807:308:6"
											},
											{
												"body": {
													"nativeSrc": "2183:77:6",
													"nodeType": "YulBlock",
													"src": "2183:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2200:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2200:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2205:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2205:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2210:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2210:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2194:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2194:5:6"
																},
																"nativeSrc": "2194:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2194:23:6"
															},
															"nativeSrc": "2194:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "2194:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2237:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2237:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2242:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2242:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2233:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2233:3:6"
																		},
																		"nativeSrc": "2233:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2233:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2251:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2251:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2226:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:6"
																},
																"nativeSrc": "2226:27:6",
																"nodeType": "YulFunctionCall",
																"src": "2226:27:6"
															},
															"nativeSrc": "2226:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "2226:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2121:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2165:3:6",
														"nodeType": "YulTypedName",
														"src": "2165:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2170:3:6",
														"nodeType": "YulTypedName",
														"src": "2170:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2175:6:6",
														"nodeType": "YulTypedName",
														"src": "2175:6:6",
														"type": ""
													}
												],
												"src": "2121:139:6"
											},
											{
												"body": {
													"nativeSrc": "2361:339:6",
													"nodeType": "YulBlock",
													"src": "2361:339:6",
													"statements": [
														{
															"nativeSrc": "2371:75:6",
															"nodeType": "YulAssignment",
															"src": "2371:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2438:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2438:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2396:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "2396:41:6"
																		},
																		"nativeSrc": "2396:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2396:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2380:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "2380:15:6"
																},
																"nativeSrc": "2380:66:6",
																"nodeType": "YulFunctionCall",
																"src": "2380:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2371:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2462:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2462:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2469:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2455:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2455:6:6"
																},
																"nativeSrc": "2455:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2455:21:6"
															},
															"nativeSrc": "2455:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "2455:21:6"
														},
														{
															"nativeSrc": "2485:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2485:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2500:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2500:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2507:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2507:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2496:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:6"
																},
																"nativeSrc": "2496:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2496:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2489:3:6",
																	"nodeType": "YulTypedName",
																	"src": "2489:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2550:83:6",
																"nodeType": "YulBlock",
																"src": "2550:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2552:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2552:77:6"
																			},
																			"nativeSrc": "2552:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2552:79:6"
																		},
																		"nativeSrc": "2552:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2552:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2531:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2531:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2536:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:6"
																		},
																		"nativeSrc": "2527:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2545:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2545:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2524:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2524:2:6"
																},
																"nativeSrc": "2524:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2524:25:6"
															},
															"nativeSrc": "2521:112:6",
															"nodeType": "YulIf",
															"src": "2521:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2677:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2677:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2682:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2682:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2687:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2687:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2642:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2642:34:6"
																},
																"nativeSrc": "2642:52:6",
																"nodeType": "YulFunctionCall",
																"src": "2642:52:6"
															},
															"nativeSrc": "2642:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "2642:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2266:434:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2334:3:6",
														"nodeType": "YulTypedName",
														"src": "2334:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2339:6:6",
														"nodeType": "YulTypedName",
														"src": "2339:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:6",
														"nodeType": "YulTypedName",
														"src": "2347:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2355:5:6",
														"nodeType": "YulTypedName",
														"src": "2355:5:6",
														"type": ""
													}
												],
												"src": "2266:434:6"
											},
											{
												"body": {
													"nativeSrc": "2793:282:6",
													"nodeType": "YulBlock",
													"src": "2793:282:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2842:83:6",
																"nodeType": "YulBlock",
																"src": "2842:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2844:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2844:77:6"
																			},
																			"nativeSrc": "2844:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2844:79:6"
																		},
																		"nativeSrc": "2844:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2844:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2821:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2821:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2829:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2829:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2817:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2817:3:6"
																				},
																				"nativeSrc": "2817:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2817:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2836:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2813:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2813:3:6"
																		},
																		"nativeSrc": "2813:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2813:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2806:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2806:6:6"
																},
																"nativeSrc": "2806:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2806:35:6"
															},
															"nativeSrc": "2803:122:6",
															"nodeType": "YulIf",
															"src": "2803:122:6"
														},
														{
															"nativeSrc": "2934:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2934:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2954:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2954:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2948:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2948:5:6"
																},
																"nativeSrc": "2948:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2948:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2938:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2938:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2970:99:6",
															"nodeType": "YulAssignment",
															"src": "2970:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3042:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3042:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3050:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3050:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3038:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3038:3:6"
																		},
																		"nativeSrc": "3038:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3038:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3057:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3057:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3065:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3065:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2979:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2979:58:6"
																},
																"nativeSrc": "2979:90:6",
																"nodeType": "YulFunctionCall",
																"src": "2979:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2970:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2720:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2771:6:6",
														"nodeType": "YulTypedName",
														"src": "2771:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2779:3:6",
														"nodeType": "YulTypedName",
														"src": "2779:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2787:5:6",
														"nodeType": "YulTypedName",
														"src": "2787:5:6",
														"type": ""
													}
												],
												"src": "2720:355:6"
											},
											{
												"body": {
													"nativeSrc": "3229:1018:6",
													"nodeType": "YulBlock",
													"src": "3229:1018:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3276:83:6",
																"nodeType": "YulBlock",
																"src": "3276:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3278:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3278:77:6"
																			},
																			"nativeSrc": "3278:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3278:79:6"
																		},
																		"nativeSrc": "3278:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3278:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3250:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3250:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3259:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3259:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3246:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3246:3:6"
																		},
																		"nativeSrc": "3246:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3246:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3271:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3271:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3242:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3242:3:6"
																},
																"nativeSrc": "3242:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3242:33:6"
															},
															"nativeSrc": "3239:120:6",
															"nodeType": "YulIf",
															"src": "3239:120:6"
														},
														{
															"nativeSrc": "3369:128:6",
															"nodeType": "YulBlock",
															"src": "3369:128:6",
															"statements": [
																{
																	"nativeSrc": "3384:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3384:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3398:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3398:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3388:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3388:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3413:74:6",
																	"nodeType": "YulAssignment",
																	"src": "3413:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3459:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3459:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3470:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3470:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3455:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3455:3:6"
																				},
																				"nativeSrc": "3455:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3455:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3479:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3479:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3423:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "3423:31:6"
																		},
																		"nativeSrc": "3423:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3423:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3413:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3413:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3507:129:6",
															"nodeType": "YulBlock",
															"src": "3507:129:6",
															"statements": [
																{
																	"nativeSrc": "3522:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3522:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3536:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3536:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3526:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3526:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3552:74:6",
																	"nodeType": "YulAssignment",
																	"src": "3552:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3598:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3598:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3609:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3609:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3594:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3594:3:6"
																				},
																				"nativeSrc": "3594:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3594:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3618:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3618:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3562:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "3562:31:6"
																		},
																		"nativeSrc": "3562:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3562:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3552:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3552:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3646:292:6",
															"nodeType": "YulBlock",
															"src": "3646:292:6",
															"statements": [
																{
																	"nativeSrc": "3661:39:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3661:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3685:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3685:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3696:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3696:2:6",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3681:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3681:3:6"
																				},
																				"nativeSrc": "3681:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3681:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3675:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3675:5:6"
																		},
																		"nativeSrc": "3675:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3675:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3665:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3665:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3747:83:6",
																		"nodeType": "YulBlock",
																		"src": "3747:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3749:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3749:77:6"
																					},
																					"nativeSrc": "3749:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3749:79:6"
																				},
																				"nativeSrc": "3749:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3749:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3719:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3719:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3727:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3727:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3716:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3716:2:6"
																		},
																		"nativeSrc": "3716:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:30:6"
																	},
																	"nativeSrc": "3713:117:6",
																	"nodeType": "YulIf",
																	"src": "3713:117:6"
																},
																{
																	"nativeSrc": "3844:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3844:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3900:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3900:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3911:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3911:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3896:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3896:3:6"
																				},
																				"nativeSrc": "3896:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3896:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3920:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3920:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3854:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3854:41:6"
																		},
																		"nativeSrc": "3854:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3854:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3844:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3844:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3948:292:6",
															"nodeType": "YulBlock",
															"src": "3948:292:6",
															"statements": [
																{
																	"nativeSrc": "3963:39:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3963:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3987:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3987:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3998:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3998:2:6",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3983:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3983:3:6"
																				},
																				"nativeSrc": "3983:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3983:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3977:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3977:5:6"
																		},
																		"nativeSrc": "3977:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3977:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3967:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3967:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4049:83:6",
																		"nodeType": "YulBlock",
																		"src": "4049:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4051:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "4051:77:6"
																					},
																					"nativeSrc": "4051:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4051:79:6"
																				},
																				"nativeSrc": "4051:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4051:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4021:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4021:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4029:18:6",
																				"nodeType": "YulLiteral",
																				"src": "4029:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4018:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4018:2:6"
																		},
																		"nativeSrc": "4018:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4018:30:6"
																	},
																	"nativeSrc": "4015:117:6",
																	"nodeType": "YulIf",
																	"src": "4015:117:6"
																},
																{
																	"nativeSrc": "4146:84:6",
																	"nodeType": "YulAssignment",
																	"src": "4146:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4202:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4202:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4213:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4213:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4198:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4198:3:6"
																				},
																				"nativeSrc": "4198:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4198:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4222:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4222:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4156:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "4156:41:6"
																		},
																		"nativeSrc": "4156:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4156:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4146:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4146:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "3081:1166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3175:9:6",
														"nodeType": "YulTypedName",
														"src": "3175:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3186:7:6",
														"nodeType": "YulTypedName",
														"src": "3186:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3198:6:6",
														"nodeType": "YulTypedName",
														"src": "3198:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3206:6:6",
														"nodeType": "YulTypedName",
														"src": "3206:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3214:6:6",
														"nodeType": "YulTypedName",
														"src": "3214:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3222:6:6",
														"nodeType": "YulTypedName",
														"src": "3222:6:6",
														"type": ""
													}
												],
												"src": "3081:1166:6"
											},
											{
												"body": {
													"nativeSrc": "4312:40:6",
													"nodeType": "YulBlock",
													"src": "4312:40:6",
													"statements": [
														{
															"nativeSrc": "4323:22:6",
															"nodeType": "YulAssignment",
															"src": "4323:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4339:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4339:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4333:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4333:5:6"
																},
																"nativeSrc": "4333:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4333:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4323:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4323:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4253:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4295:5:6",
														"nodeType": "YulTypedName",
														"src": "4295:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4305:6:6",
														"nodeType": "YulTypedName",
														"src": "4305:6:6",
														"type": ""
													}
												],
												"src": "4253:99:6"
											},
											{
												"body": {
													"nativeSrc": "4386:152:6",
													"nodeType": "YulBlock",
													"src": "4386:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4403:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4403:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4406:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4406:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4396:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:6"
																},
																"nativeSrc": "4396:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4396:88:6"
															},
															"nativeSrc": "4396:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4396:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4500:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4500:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4503:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4503:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4493:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4493:6:6"
																},
																"nativeSrc": "4493:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4493:15:6"
															},
															"nativeSrc": "4493:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4493:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4527:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4527:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4517:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4517:6:6"
																},
																"nativeSrc": "4517:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4517:15:6"
															},
															"nativeSrc": "4517:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4517:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4358:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4358:180:6"
											},
											{
												"body": {
													"nativeSrc": "4595:269:6",
													"nodeType": "YulBlock",
													"src": "4595:269:6",
													"statements": [
														{
															"nativeSrc": "4605:22:6",
															"nodeType": "YulAssignment",
															"src": "4605:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4619:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4619:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4625:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4625:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4615:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:6"
																},
																"nativeSrc": "4615:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4615:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4605:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4605:6:6"
																}
															]
														},
														{
															"nativeSrc": "4636:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4636:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4666:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4666:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4672:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4672:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4662:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4662:3:6"
																},
																"nativeSrc": "4662:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4662:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4640:18:6",
																	"nodeType": "YulTypedName",
																	"src": "4640:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4713:51:6",
																"nodeType": "YulBlock",
																"src": "4713:51:6",
																"statements": [
																	{
																		"nativeSrc": "4727:27:6",
																		"nodeType": "YulAssignment",
																		"src": "4727:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4741:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4741:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4749:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4749:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4737:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4737:3:6"
																			},
																			"nativeSrc": "4737:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4737:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4727:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4727:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4693:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4693:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4686:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:6"
																},
																"nativeSrc": "4686:26:6",
																"nodeType": "YulFunctionCall",
																"src": "4686:26:6"
															},
															"nativeSrc": "4683:81:6",
															"nodeType": "YulIf",
															"src": "4683:81:6"
														},
														{
															"body": {
																"nativeSrc": "4816:42:6",
																"nodeType": "YulBlock",
																"src": "4816:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4830:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4830:16:6"
																			},
																			"nativeSrc": "4830:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4830:18:6"
																		},
																		"nativeSrc": "4830:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4830:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4780:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4780:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4803:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4803:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4811:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4811:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4800:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4800:2:6"
																		},
																		"nativeSrc": "4800:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4800:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4777:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4777:2:6"
																},
																"nativeSrc": "4777:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4777:38:6"
															},
															"nativeSrc": "4774:84:6",
															"nodeType": "YulIf",
															"src": "4774:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4544:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4579:4:6",
														"nodeType": "YulTypedName",
														"src": "4579:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4588:6:6",
														"nodeType": "YulTypedName",
														"src": "4588:6:6",
														"type": ""
													}
												],
												"src": "4544:320:6"
											},
											{
												"body": {
													"nativeSrc": "4924:87:6",
													"nodeType": "YulBlock",
													"src": "4924:87:6",
													"statements": [
														{
															"nativeSrc": "4934:11:6",
															"nodeType": "YulAssignment",
															"src": "4934:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "4942:3:6",
																"nodeType": "YulIdentifier",
																"src": "4942:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4934:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4962:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4962:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4965:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4965:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4955:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4955:6:6"
																},
																"nativeSrc": "4955:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4955:14:6"
															},
															"nativeSrc": "4955:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "4955:14:6"
														},
														{
															"nativeSrc": "4978:26:6",
															"nodeType": "YulAssignment",
															"src": "4978:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4996:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4999:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4999:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4986:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4986:9:6"
																},
																"nativeSrc": "4986:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4986:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4978:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4978:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4870:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4911:3:6",
														"nodeType": "YulTypedName",
														"src": "4911:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4919:4:6",
														"nodeType": "YulTypedName",
														"src": "4919:4:6",
														"type": ""
													}
												],
												"src": "4870:141:6"
											},
											{
												"body": {
													"nativeSrc": "5061:49:6",
													"nodeType": "YulBlock",
													"src": "5061:49:6",
													"statements": [
														{
															"nativeSrc": "5071:33:6",
															"nodeType": "YulAssignment",
															"src": "5071:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5089:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5089:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5096:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5096:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5085:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5085:3:6"
																		},
																		"nativeSrc": "5085:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5085:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5101:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5101:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5081:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5081:3:6"
																},
																"nativeSrc": "5081:23:6",
																"nodeType": "YulFunctionCall",
																"src": "5081:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5071:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5071:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5017:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5044:5:6",
														"nodeType": "YulTypedName",
														"src": "5044:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5054:6:6",
														"nodeType": "YulTypedName",
														"src": "5054:6:6",
														"type": ""
													}
												],
												"src": "5017:93:6"
											},
											{
												"body": {
													"nativeSrc": "5169:54:6",
													"nodeType": "YulBlock",
													"src": "5169:54:6",
													"statements": [
														{
															"nativeSrc": "5179:37:6",
															"nodeType": "YulAssignment",
															"src": "5179:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5204:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5204:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5210:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5210:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5200:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5200:3:6"
																},
																"nativeSrc": "5200:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5200:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5179:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5179:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5116:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5144:4:6",
														"nodeType": "YulTypedName",
														"src": "5144:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5150:5:6",
														"nodeType": "YulTypedName",
														"src": "5150:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5160:8:6",
														"nodeType": "YulTypedName",
														"src": "5160:8:6",
														"type": ""
													}
												],
												"src": "5116:107:6"
											},
											{
												"body": {
													"nativeSrc": "5305:317:6",
													"nodeType": "YulBlock",
													"src": "5305:317:6",
													"statements": [
														{
															"nativeSrc": "5315:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5315:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5336:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "5336:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5348:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5348:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5332:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5332:3:6"
																},
																"nativeSrc": "5332:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5332:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5319:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5319:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5359:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5359:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5390:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5390:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5401:66:6",
																		"nodeType": "YulLiteral",
																		"src": "5401:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5371:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5371:18:6"
																},
																"nativeSrc": "5371:97:6",
																"nodeType": "YulFunctionCall",
																"src": "5371:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5363:4:6",
																	"nodeType": "YulTypedName",
																	"src": "5363:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5477:51:6",
															"nodeType": "YulAssignment",
															"src": "5477:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5508:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5508:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5519:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "5519:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5489:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5489:18:6"
																},
																"nativeSrc": "5489:39:6",
																"nodeType": "YulFunctionCall",
																"src": "5489:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5477:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5477:8:6"
																}
															]
														},
														{
															"nativeSrc": "5537:30:6",
															"nodeType": "YulAssignment",
															"src": "5537:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5550:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5561:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5561:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5557:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:6"
																		},
																		"nativeSrc": "5557:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5557:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5546:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5546:3:6"
																},
																"nativeSrc": "5546:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5546:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5537:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5537:5:6"
																}
															]
														},
														{
															"nativeSrc": "5576:40:6",
															"nodeType": "YulAssignment",
															"src": "5576:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5589:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5589:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5600:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "5600:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5610:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5610:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5596:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5596:3:6"
																		},
																		"nativeSrc": "5596:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5596:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5586:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5586:2:6"
																},
																"nativeSrc": "5586:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5586:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5576:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5576:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5229:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5266:5:6",
														"nodeType": "YulTypedName",
														"src": "5266:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5273:10:6",
														"nodeType": "YulTypedName",
														"src": "5273:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5285:8:6",
														"nodeType": "YulTypedName",
														"src": "5285:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5298:6:6",
														"nodeType": "YulTypedName",
														"src": "5298:6:6",
														"type": ""
													}
												],
												"src": "5229:393:6"
											},
											{
												"body": {
													"nativeSrc": "5673:32:6",
													"nodeType": "YulBlock",
													"src": "5673:32:6",
													"statements": [
														{
															"nativeSrc": "5683:16:6",
															"nodeType": "YulAssignment",
															"src": "5683:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "5694:5:6",
																"nodeType": "YulIdentifier",
																"src": "5694:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5683:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5683:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5628:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5655:5:6",
														"nodeType": "YulTypedName",
														"src": "5655:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5665:7:6",
														"nodeType": "YulTypedName",
														"src": "5665:7:6",
														"type": ""
													}
												],
												"src": "5628:77:6"
											},
											{
												"body": {
													"nativeSrc": "5743:28:6",
													"nodeType": "YulBlock",
													"src": "5743:28:6",
													"statements": [
														{
															"nativeSrc": "5753:12:6",
															"nodeType": "YulAssignment",
															"src": "5753:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5760:5:6",
																"nodeType": "YulIdentifier",
																"src": "5760:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5753:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5753:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5711:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5729:5:6",
														"nodeType": "YulTypedName",
														"src": "5729:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5739:3:6",
														"nodeType": "YulTypedName",
														"src": "5739:3:6",
														"type": ""
													}
												],
												"src": "5711:60:6"
											},
											{
												"body": {
													"nativeSrc": "5837:82:6",
													"nodeType": "YulBlock",
													"src": "5837:82:6",
													"statements": [
														{
															"nativeSrc": "5847:66:6",
															"nodeType": "YulAssignment",
															"src": "5847:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5905:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5905:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5887:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "5887:17:6"
																				},
																				"nativeSrc": "5887:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5887:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5878:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "5878:8:6"
																		},
																		"nativeSrc": "5878:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5878:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5860:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5860:17:6"
																},
																"nativeSrc": "5860:53:6",
																"nodeType": "YulFunctionCall",
																"src": "5860:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5847:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5847:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5777:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:6",
														"nodeType": "YulTypedName",
														"src": "5817:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5827:9:6",
														"nodeType": "YulTypedName",
														"src": "5827:9:6",
														"type": ""
													}
												],
												"src": "5777:142:6"
											},
											{
												"body": {
													"nativeSrc": "5972:28:6",
													"nodeType": "YulBlock",
													"src": "5972:28:6",
													"statements": [
														{
															"nativeSrc": "5982:12:6",
															"nodeType": "YulAssignment",
															"src": "5982:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5989:5:6",
																"nodeType": "YulIdentifier",
																"src": "5989:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5982:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5982:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5925:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5958:5:6",
														"nodeType": "YulTypedName",
														"src": "5958:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5968:3:6",
														"nodeType": "YulTypedName",
														"src": "5968:3:6",
														"type": ""
													}
												],
												"src": "5925:75:6"
											},
											{
												"body": {
													"nativeSrc": "6082:193:6",
													"nodeType": "YulBlock",
													"src": "6082:193:6",
													"statements": [
														{
															"nativeSrc": "6092:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6092:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6147:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "6147:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6116:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6116:30:6"
																},
																"nativeSrc": "6116:39:6",
																"nodeType": "YulFunctionCall",
																"src": "6116:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6096:16:6",
																	"nodeType": "YulTypedName",
																	"src": "6096:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6171:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6171:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6211:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6211:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6205:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6205:5:6"
																				},
																				"nativeSrc": "6205:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6205:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6218:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6218:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6250:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "6250:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6226:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "6226:23:6"
																				},
																				"nativeSrc": "6226:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6226:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6177:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "6177:27:6"
																		},
																		"nativeSrc": "6177:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6177:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6164:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6164:6:6"
																},
																"nativeSrc": "6164:105:6",
																"nodeType": "YulFunctionCall",
																"src": "6164:105:6"
															},
															"nativeSrc": "6164:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "6164:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6006:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6059:4:6",
														"nodeType": "YulTypedName",
														"src": "6059:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6065:6:6",
														"nodeType": "YulTypedName",
														"src": "6065:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6073:7:6",
														"nodeType": "YulTypedName",
														"src": "6073:7:6",
														"type": ""
													}
												],
												"src": "6006:269:6"
											},
											{
												"body": {
													"nativeSrc": "6330:24:6",
													"nodeType": "YulBlock",
													"src": "6330:24:6",
													"statements": [
														{
															"nativeSrc": "6340:8:6",
															"nodeType": "YulAssignment",
															"src": "6340:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6347:1:6",
																"nodeType": "YulLiteral",
																"src": "6347:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6340:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6340:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6281:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6326:3:6",
														"nodeType": "YulTypedName",
														"src": "6326:3:6",
														"type": ""
													}
												],
												"src": "6281:73:6"
											},
											{
												"body": {
													"nativeSrc": "6413:136:6",
													"nodeType": "YulBlock",
													"src": "6413:136:6",
													"statements": [
														{
															"nativeSrc": "6423:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6423:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6437:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6437:30:6"
																},
																"nativeSrc": "6437:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6437:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6427:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6427:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6522:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6522:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6528:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6528:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6536:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6536:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6478:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6478:43:6"
																},
																"nativeSrc": "6478:65:6",
																"nodeType": "YulFunctionCall",
																"src": "6478:65:6"
															},
															"nativeSrc": "6478:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "6478:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6360:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6399:4:6",
														"nodeType": "YulTypedName",
														"src": "6399:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6405:6:6",
														"nodeType": "YulTypedName",
														"src": "6405:6:6",
														"type": ""
													}
												],
												"src": "6360:189:6"
											},
											{
												"body": {
													"nativeSrc": "6605:136:6",
													"nodeType": "YulBlock",
													"src": "6605:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6672:63:6",
																"nodeType": "YulBlock",
																"src": "6672:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6716:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6716:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6723:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6723:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6686:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "6686:29:6"
																			},
																			"nativeSrc": "6686:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6686:39:6"
																		},
																		"nativeSrc": "6686:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6686:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6625:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6625:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6632:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6632:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6622:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6622:2:6"
																},
																"nativeSrc": "6622:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6622:14:6"
															},
															"nativeSrc": "6615:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6637:26:6",
																"nodeType": "YulBlock",
																"src": "6637:26:6",
																"statements": [
																	{
																		"nativeSrc": "6639:22:6",
																		"nodeType": "YulAssignment",
																		"src": "6639:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6652:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6652:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6659:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6659:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6648:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6648:3:6"
																			},
																			"nativeSrc": "6648:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6648:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6639:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6619:2:6",
																"nodeType": "YulBlock",
																"src": "6619:2:6",
																"statements": []
															},
															"src": "6615:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6555:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6593:5:6",
														"nodeType": "YulTypedName",
														"src": "6593:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6600:3:6",
														"nodeType": "YulTypedName",
														"src": "6600:3:6",
														"type": ""
													}
												],
												"src": "6555:186:6"
											},
											{
												"body": {
													"nativeSrc": "6826:464:6",
													"nodeType": "YulBlock",
													"src": "6826:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6852:431:6",
																"nodeType": "YulBlock",
																"src": "6852:431:6",
																"statements": [
																	{
																		"nativeSrc": "6866:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6866:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6914:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6914:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6882:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "6882:31:6"
																			},
																			"nativeSrc": "6882:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6882:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6870:8:6",
																				"nodeType": "YulTypedName",
																				"src": "6870:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6933:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6933:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6956:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "6956:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6984:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "6984:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6966:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "6966:17:6"
																					},
																					"nativeSrc": "6966:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6966:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6952:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6952:3:6"
																			},
																			"nativeSrc": "6952:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6952:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6937:11:6",
																				"nodeType": "YulTypedName",
																				"src": "6937:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7153:27:6",
																			"nodeType": "YulBlock",
																			"src": "7153:27:6",
																			"statements": [
																				{
																					"nativeSrc": "7155:23:6",
																					"nodeType": "YulAssignment",
																					"src": "7155:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7170:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "7170:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7155:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "7155:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7137:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "7137:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7149:2:6",
																					"nodeType": "YulLiteral",
																					"src": "7149:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7134:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "7134:2:6"
																			},
																			"nativeSrc": "7134:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7134:18:6"
																		},
																		"nativeSrc": "7131:49:6",
																		"nodeType": "YulIf",
																		"src": "7131:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7222:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "7222:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7239:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "7239:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7267:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7267:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7249:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "7249:17:6"
																							},
																							"nativeSrc": "7249:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7249:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7235:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7235:3:6"
																					},
																					"nativeSrc": "7235:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7235:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7193:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "7193:28:6"
																			},
																			"nativeSrc": "7193:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7193:80:6"
																		},
																		"nativeSrc": "7193:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7193:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6843:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6843:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6848:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6848:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6840:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6840:2:6"
																},
																"nativeSrc": "6840:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6840:11:6"
															},
															"nativeSrc": "6837:446:6",
															"nodeType": "YulIf",
															"src": "6837:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6747:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6802:5:6",
														"nodeType": "YulTypedName",
														"src": "6802:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6809:3:6",
														"nodeType": "YulTypedName",
														"src": "6809:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6814:10:6",
														"nodeType": "YulTypedName",
														"src": "6814:10:6",
														"type": ""
													}
												],
												"src": "6747:543:6"
											},
											{
												"body": {
													"nativeSrc": "7359:54:6",
													"nodeType": "YulBlock",
													"src": "7359:54:6",
													"statements": [
														{
															"nativeSrc": "7369:37:6",
															"nodeType": "YulAssignment",
															"src": "7369:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7394:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7394:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7400:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7400:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7390:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7390:3:6"
																},
																"nativeSrc": "7390:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7390:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7369:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "7369:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7296:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7334:4:6",
														"nodeType": "YulTypedName",
														"src": "7334:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7340:5:6",
														"nodeType": "YulTypedName",
														"src": "7340:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7350:8:6",
														"nodeType": "YulTypedName",
														"src": "7350:8:6",
														"type": ""
													}
												],
												"src": "7296:117:6"
											},
											{
												"body": {
													"nativeSrc": "7470:118:6",
													"nodeType": "YulBlock",
													"src": "7470:118:6",
													"statements": [
														{
															"nativeSrc": "7480:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7480:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7529:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7529:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7532:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7532:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7525:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7525:3:6"
																				},
																				"nativeSrc": "7525:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7525:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7544:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7544:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7540:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7540:3:6"
																				},
																				"nativeSrc": "7540:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7540:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7496:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "7496:28:6"
																		},
																		"nativeSrc": "7496:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7496:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7492:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7492:3:6"
																},
																"nativeSrc": "7492:56:6",
																"nodeType": "YulFunctionCall",
																"src": "7492:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7484:4:6",
																	"nodeType": "YulTypedName",
																	"src": "7484:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7557:25:6",
															"nodeType": "YulAssignment",
															"src": "7557:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7571:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7571:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7577:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7577:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7567:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7567:3:6"
																},
																"nativeSrc": "7567:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7567:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7557:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7557:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7419:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7447:4:6",
														"nodeType": "YulTypedName",
														"src": "7447:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7453:5:6",
														"nodeType": "YulTypedName",
														"src": "7453:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7463:6:6",
														"nodeType": "YulTypedName",
														"src": "7463:6:6",
														"type": ""
													}
												],
												"src": "7419:169:6"
											},
											{
												"body": {
													"nativeSrc": "7674:214:6",
													"nodeType": "YulBlock",
													"src": "7674:214:6",
													"statements": [
														{
															"nativeSrc": "7807:37:6",
															"nodeType": "YulAssignment",
															"src": "7807:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7834:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7834:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7840:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7840:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7815:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "7815:18:6"
																},
																"nativeSrc": "7815:29:6",
																"nodeType": "YulFunctionCall",
																"src": "7815:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7807:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7807:4:6"
																}
															]
														},
														{
															"nativeSrc": "7853:29:6",
															"nodeType": "YulAssignment",
															"src": "7853:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7864:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7864:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7874:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7874:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7877:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7877:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7870:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7870:3:6"
																		},
																		"nativeSrc": "7870:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7870:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7861:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7861:2:6"
																},
																"nativeSrc": "7861:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7861:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7853:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7853:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7593:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7655:4:6",
														"nodeType": "YulTypedName",
														"src": "7655:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7661:3:6",
														"nodeType": "YulTypedName",
														"src": "7661:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7669:4:6",
														"nodeType": "YulTypedName",
														"src": "7669:4:6",
														"type": ""
													}
												],
												"src": "7593:295:6"
											},
											{
												"body": {
													"nativeSrc": "7985:1303:6",
													"nodeType": "YulBlock",
													"src": "7985:1303:6",
													"statements": [
														{
															"nativeSrc": "7996:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7996:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8043:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8043:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8010:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "8010:32:6"
																},
																"nativeSrc": "8010:37:6",
																"nodeType": "YulFunctionCall",
																"src": "8010:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8000:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8000:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8132:22:6",
																"nodeType": "YulBlock",
																"src": "8132:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8134:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8134:16:6"
																			},
																			"nativeSrc": "8134:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8134:18:6"
																		},
																		"nativeSrc": "8134:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8134:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8104:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8104:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8112:18:6",
																		"nodeType": "YulLiteral",
																		"src": "8112:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8101:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8101:2:6"
																},
																"nativeSrc": "8101:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8101:30:6"
															},
															"nativeSrc": "8098:56:6",
															"nodeType": "YulIf",
															"src": "8098:56:6"
														},
														{
															"nativeSrc": "8164:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8164:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8210:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8210:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8204:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8204:5:6"
																		},
																		"nativeSrc": "8204:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8204:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8178:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "8178:25:6"
																},
																"nativeSrc": "8178:38:6",
																"nodeType": "YulFunctionCall",
																"src": "8178:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8168:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8168:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8309:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8309:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8315:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8315:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8323:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8323:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8263:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "8263:45:6"
																},
																"nativeSrc": "8263:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8263:67:6"
															},
															"nativeSrc": "8263:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "8263:67:6"
														},
														{
															"nativeSrc": "8340:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8340:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8357:1:6",
																"nodeType": "YulLiteral",
																"src": "8357:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8344:9:6",
																	"nodeType": "YulTypedName",
																	"src": "8344:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8368:17:6",
															"nodeType": "YulAssignment",
															"src": "8368:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8381:4:6",
																"nodeType": "YulLiteral",
																"src": "8381:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8368:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "8368:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8432:611:6",
																		"nodeType": "YulBlock",
																		"src": "8432:611:6",
																		"statements": [
																			{
																				"nativeSrc": "8446:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8446:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8465:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8465:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8477:4:6",
																									"nodeType": "YulLiteral",
																									"src": "8477:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8473:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "8473:3:6"
																							},
																							"nativeSrc": "8473:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8473:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8461:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "8461:3:6"
																					},
																					"nativeSrc": "8461:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8461:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8450:7:6",
																						"nodeType": "YulTypedName",
																						"src": "8450:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8497:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8497:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8543:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8543:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8511:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "8511:31:6"
																					},
																					"nativeSrc": "8511:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8511:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8501:6:6",
																						"nodeType": "YulTypedName",
																						"src": "8501:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8561:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8561:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8570:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8570:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8565:1:6",
																						"nodeType": "YulTypedName",
																						"src": "8565:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8629:163:6",
																					"nodeType": "YulBlock",
																					"src": "8629:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8654:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8654:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8672:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "8672:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8677:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "8677:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8668:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8668:3:6"
																												},
																												"nativeSrc": "8668:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8668:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8662:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "8662:5:6"
																										},
																										"nativeSrc": "8662:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8662:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8647:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8647:6:6"
																								},
																								"nativeSrc": "8647:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8647:42:6"
																							},
																							"nativeSrc": "8647:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8647:42:6"
																						},
																						{
																							"nativeSrc": "8706:24:6",
																							"nodeType": "YulAssignment",
																							"src": "8706:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8720:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8720:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8728:1:6",
																										"nodeType": "YulLiteral",
																										"src": "8728:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8716:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8716:3:6"
																								},
																								"nativeSrc": "8716:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8716:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8706:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8706:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8747:31:6",
																							"nodeType": "YulAssignment",
																							"src": "8747:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8764:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "8764:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8775:2:6",
																										"nodeType": "YulLiteral",
																										"src": "8775:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8760:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8760:3:6"
																								},
																								"nativeSrc": "8760:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8760:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8747:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "8747:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8595:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "8595:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8598:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "8598:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8592:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "8592:2:6"
																					},
																					"nativeSrc": "8592:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8592:14:6"
																				},
																				"nativeSrc": "8584:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8607:21:6",
																					"nodeType": "YulBlock",
																					"src": "8607:21:6",
																					"statements": [
																						{
																							"nativeSrc": "8609:17:6",
																							"nodeType": "YulAssignment",
																							"src": "8609:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8618:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "8618:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8621:4:6",
																										"nodeType": "YulLiteral",
																										"src": "8621:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8614:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8614:3:6"
																								},
																								"nativeSrc": "8614:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8614:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8609:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "8609:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8588:3:6",
																					"nodeType": "YulBlock",
																					"src": "8588:3:6",
																					"statements": []
																				},
																				"src": "8584:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "8828:156:6",
																					"nodeType": "YulBlock",
																					"src": "8828:156:6",
																					"statements": [
																						{
																							"nativeSrc": "8846:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8846:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8873:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "8873:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8878:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8878:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8869:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "8869:3:6"
																										},
																										"nativeSrc": "8869:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8869:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8863:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8863:5:6"
																								},
																								"nativeSrc": "8863:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8863:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8850:9:6",
																									"nodeType": "YulTypedName",
																									"src": "8850:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8913:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8913:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8940:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8940:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8955:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "8955:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8963:4:6",
																														"nodeType": "YulLiteral",
																														"src": "8963:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8951:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8951:3:6"
																												},
																												"nativeSrc": "8951:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8951:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8921:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "8921:18:6"
																										},
																										"nativeSrc": "8921:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8921:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8906:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8906:6:6"
																								},
																								"nativeSrc": "8906:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8906:64:6"
																							},
																							"nativeSrc": "8906:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8906:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8811:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "8811:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8820:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8820:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8808:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:2:6"
																					},
																					"nativeSrc": "8808:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:19:6"
																				},
																				"nativeSrc": "8805:179:6",
																				"nodeType": "YulIf",
																				"src": "8805:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9004:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9004:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9018:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "9018:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9026:1:6",
																											"nodeType": "YulLiteral",
																											"src": "9026:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9014:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "9014:3:6"
																									},
																									"nativeSrc": "9014:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "9014:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9030:1:6",
																									"nodeType": "YulLiteral",
																									"src": "9030:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9010:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "9010:3:6"
																							},
																							"nativeSrc": "9010:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9010:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8997:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8997:6:6"
																					},
																					"nativeSrc": "8997:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8997:36:6"
																				},
																				"nativeSrc": "8997:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "8997:36:6"
																			}
																		]
																	},
																	"nativeSrc": "8425:618:6",
																	"nodeType": "YulCase",
																	"src": "8425:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8430:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8430:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9060:222:6",
																		"nodeType": "YulBlock",
																		"src": "9060:222:6",
																		"statements": [
																			{
																				"nativeSrc": "9074:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9074:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9087:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9087:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9078:5:6",
																						"nodeType": "YulTypedName",
																						"src": "9078:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9111:67:6",
																					"nodeType": "YulBlock",
																					"src": "9111:67:6",
																					"statements": [
																						{
																							"nativeSrc": "9129:35:6",
																							"nodeType": "YulAssignment",
																							"src": "9129:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9148:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "9148:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9153:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9153:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9144:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "9144:3:6"
																										},
																										"nativeSrc": "9144:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9144:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9138:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9138:5:6"
																								},
																								"nativeSrc": "9138:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9138:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9129:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9129:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9104:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9104:6:6"
																				},
																				"nativeSrc": "9101:77:6",
																				"nodeType": "YulIf",
																				"src": "9101:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9198:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9198:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9257:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9257:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9264:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9264:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9204:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "9204:52:6"
																							},
																							"nativeSrc": "9204:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9204:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9191:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9191:6:6"
																					},
																					"nativeSrc": "9191:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9191:81:6"
																				},
																				"nativeSrc": "9191:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "9191:81:6"
																			}
																		]
																	},
																	"nativeSrc": "9052:230:6",
																	"nodeType": "YulCase",
																	"src": "9052:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8405:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8405:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8413:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8413:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8402:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8402:2:6"
																},
																"nativeSrc": "8402:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8402:14:6"
															},
															"nativeSrc": "8395:887:6",
															"nodeType": "YulSwitch",
															"src": "8395:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7893:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7974:4:6",
														"nodeType": "YulTypedName",
														"src": "7974:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7980:3:6",
														"nodeType": "YulTypedName",
														"src": "7980:3:6",
														"type": ""
													}
												],
												"src": "7893:1395:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611bd1380380611bd1833981810160405281019061003191906102c5565b81818160039081610042919061056e565b508060049081610052919061056e565b5050508360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505061063d565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101588261012f565b9050919050565b6101688161014e565b8114610172575f80fd5b50565b5f815190506101838161015f565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6101d782610191565b810181811067ffffffffffffffff821117156101f6576101f56101a1565b5b80604052505050565b5f61020861011e565b905061021482826101ce565b919050565b5f67ffffffffffffffff821115610233576102326101a1565b5b61023c82610191565b9050602081019050919050565b8281835e5f83830152505050565b5f61026961026484610219565b6101ff565b9050828152602081018484840111156102855761028461018d565b5b610290848285610249565b509392505050565b5f82601f8301126102ac576102ab610189565b5b81516102bc848260208601610257565b91505092915050565b5f805f80608085870312156102dd576102dc610127565b5b5f6102ea87828801610175565b94505060206102fb87828801610175565b935050604085015167ffffffffffffffff81111561031c5761031b61012b565b5b61032887828801610298565b925050606085015167ffffffffffffffff8111156103495761034861012b565b5b61035587828801610298565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806103af57607f821691505b6020821081036103c2576103c161036b565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104247fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103e9565b61042e86836103e9565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61047261046d61046884610446565b61044f565b610446565b9050919050565b5f819050919050565b61048b83610458565b61049f61049782610479565b8484546103f5565b825550505050565b5f90565b6104b36104a7565b6104be818484610482565b505050565b5b818110156104e1576104d65f826104ab565b6001810190506104c4565b5050565b601f821115610526576104f7816103c8565b610500846103da565b8101602085101561050f578190505b61052361051b856103da565b8301826104c3565b50505b505050565b5f82821c905092915050565b5f6105465f198460080261052b565b1980831691505092915050565b5f61055e8383610537565b9150826002028217905092915050565b61057782610361565b67ffffffffffffffff8111156105905761058f6101a1565b5b61059a8254610398565b6105a58282856104e5565b5f60209050601f8311600181146105d6575f84156105c4578287015190505b6105ce8582610553565b865550610635565b601f1984166105e4866103c8565b5f5b8281101561060b578489015182556001820191506020850194506020810190506105e6565b868310156106285784890151610624601f891682610537565b8355505b6001600288020188555050505b505050505050565b6115878061064a5f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c80635f64b55b116100955780639cd441da116100645780639cd441da14610277578063a9059cbb14610293578063dc5fa6c5146102c3578063dd62ed3e146102e1576100f3565b80635f64b55b146101ed57806370a082311461020b5780638da5cb5b1461023b57806395d89b4114610259576100f3565b806318160ddd116100d157806318160ddd1461016357806319e36f3b1461018157806323b872dd1461019f578063313ce567146101cf576100f3565b806306fdde03146100f7578063095ea7b3146101155780630fc63d1014610145575b5f80fd5b6100ff610311565b60405161010c9190610f89565b60405180910390f35b61012f600480360381019061012a919061103a565b6103a1565b60405161013c9190611092565b60405180910390f35b61014d6103c3565b60405161015a9190611106565b60405180910390f35b61016b6103e8565b604051610178919061112e565b60405180910390f35b6101896103f1565b604051610196919061112e565b60405180910390f35b6101b960048036038101906101b49190611147565b6103f7565b6040516101c69190611092565b60405180910390f35b6101d7610425565b6040516101e491906111b2565b60405180910390f35b6101f561042d565b6040516102029190611106565b60405180910390f35b610225600480360381019061022091906111cb565b610452565b604051610232919061112e565b60405180910390f35b610243610497565b6040516102509190611205565b60405180910390f35b6102616104bc565b60405161026e9190610f89565b60405180910390f35b610291600480360381019061028c919061121e565b61054c565b005b6102ad60048036038101906102a8919061103a565b6107dd565b6040516102ba9190611092565b60405180910390f35b6102cb6107ff565b6040516102d8919061112e565b60405180910390f35b6102fb60048036038101906102f6919061125c565b610805565b604051610308919061112e565b60405180910390f35b606060038054610320906112c7565b80601f016020809104026020016040519081016040528092919081815260200182805461034c906112c7565b80156103975780601f1061036e57610100808354040283529160200191610397565b820191905f5260205f20905b81548152906001019060200180831161037a57829003601f168201915b5050505050905090565b5f806103ab610887565b90506103b881858561088e565b600191505092915050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600254905090565b60085481565b5f80610401610887565b905061040e8582856108a0565b610419858585610933565b60019150509392505050565b5f6012905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600480546104cb906112c7565b80601f01602080910402602001604051908101604052809291908181526020018280546104f7906112c7565b80156105425780601f1061051957610100808354040283529160200191610542565b820191905f5260205f20905b81548152906001019060200180831161052557829003601f168201915b5050505050905090565b5f8211801561055a57505f81115b610599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059090611341565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016105f79392919061135f565b6020604051808303815f875af1158015610613573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061063791906113be565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016106969392919061135f565b6020604051808303815f875af11580156106b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106d691906113be565b505f806106e16103e8565b03610701576106fa82846106f59190611416565b610a23565b905061074c565b61074960075461070f6103e8565b8561071a9190611416565b6107249190611484565b60085461072f6103e8565b8561073a9190611416565b6107449190611484565b610a9a565b90505b6107563382610ab2565b8260075f82825461076791906114b4565b925050819055508160085f82825461077f91906114b4565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e8484846040516107d0939291906114e7565b60405180910390a2505050565b5f806107e7610887565b90506107f4818585610933565b600191505092915050565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61089b8383836001610b31565b505050565b5f6108ab8484610805565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561092d578181101561091e578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109159392919061151c565b60405180910390fd5b61092c84848484035f610b31565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109a3575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161099a9190611205565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a13575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a0a9190611205565b60405180910390fd5b610a1e838383610d00565b505050565b5f6003821115610a88578190505f6001600284610a409190611484565b610a4a91906114b4565b90505b81811015610a82578091506002818285610a679190611484565b610a7191906114b4565b610a7b9190611484565b9050610a4d565b50610a95565b5f8214610a9457600190505b5b919050565b5f818310610aa85781610aaa565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b22575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b199190611205565b60405180910390fd5b610b2d5f8383610d00565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ba1575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b989190611205565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c11575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c089190611205565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610cfa578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cf1919061112e565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d50578060025f828254610d4491906114b4565b92505081905550610e1e565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610dd9578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610dd09392919061151c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e65578060025f8282540392505081905550610eaf565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f0c919061112e565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610f5b82610f19565b610f658185610f23565b9350610f75818560208601610f33565b610f7e81610f41565b840191505092915050565b5f6020820190508181035f830152610fa18184610f51565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fd682610fad565b9050919050565b610fe681610fcc565b8114610ff0575f80fd5b50565b5f8135905061100181610fdd565b92915050565b5f819050919050565b61101981611007565b8114611023575f80fd5b50565b5f8135905061103481611010565b92915050565b5f80604083850312156110505761104f610fa9565b5b5f61105d85828601610ff3565b925050602061106e85828601611026565b9150509250929050565b5f8115159050919050565b61108c81611078565b82525050565b5f6020820190506110a55f830184611083565b92915050565b5f819050919050565b5f6110ce6110c96110c484610fad565b6110ab565b610fad565b9050919050565b5f6110df826110b4565b9050919050565b5f6110f0826110d5565b9050919050565b611100816110e6565b82525050565b5f6020820190506111195f8301846110f7565b92915050565b61112881611007565b82525050565b5f6020820190506111415f83018461111f565b92915050565b5f805f6060848603121561115e5761115d610fa9565b5b5f61116b86828701610ff3565b935050602061117c86828701610ff3565b925050604061118d86828701611026565b9150509250925092565b5f60ff82169050919050565b6111ac81611197565b82525050565b5f6020820190506111c55f8301846111a3565b92915050565b5f602082840312156111e0576111df610fa9565b5b5f6111ed84828501610ff3565b91505092915050565b6111ff81610fcc565b82525050565b5f6020820190506112185f8301846111f6565b92915050565b5f806040838503121561123457611233610fa9565b5b5f61124185828601611026565b925050602061125285828601611026565b9150509250929050565b5f806040838503121561127257611271610fa9565b5b5f61127f85828601610ff3565b925050602061129085828601610ff3565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806112de57607f821691505b6020821081036112f1576112f061129a565b5b50919050565b7f416d6f756e7473206d757374206265203e2030000000000000000000000000005f82015250565b5f61132b601383610f23565b9150611336826112f7565b602082019050919050565b5f6020820190508181035f8301526113588161131f565b9050919050565b5f6060820190506113725f8301866111f6565b61137f60208301856111f6565b61138c604083018461111f565b949350505050565b61139d81611078565b81146113a7575f80fd5b50565b5f815190506113b881611394565b92915050565b5f602082840312156113d3576113d2610fa9565b5b5f6113e0848285016113aa565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61142082611007565b915061142b83611007565b925082820261143981611007565b915082820484148315176114505761144f6113e9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61148e82611007565b915061149983611007565b9250826114a9576114a8611457565b5b828204905092915050565b5f6114be82611007565b91506114c983611007565b92508282019050808211156114e1576114e06113e9565b5b92915050565b5f6060820190506114fa5f83018661111f565b611507602083018561111f565b611514604083018461111f565b949350505050565b5f60608201905061152f5f8301866111f6565b61153c602083018561111f565b611549604083018461111f565b94935050505056fea26469706673582212208a570aee081d82b4c2b429f36153468d3dead84e42c973baa2fc5f10bac8e20264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1BD1 CODESIZE SUB DUP1 PUSH2 0x1BD1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2C5 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x56E JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0x56E JUMP JUMPDEST POP POP POP DUP4 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH2 0x63D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x158 DUP3 PUSH2 0x12F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168 DUP2 PUSH2 0x14E JUMP JUMPDEST DUP2 EQ PUSH2 0x172 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x183 DUP2 PUSH2 0x15F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D7 DUP3 PUSH2 0x191 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F6 JUMPI PUSH2 0x1F5 PUSH2 0x1A1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x208 PUSH2 0x11E JUMP JUMPDEST SWAP1 POP PUSH2 0x214 DUP3 DUP3 PUSH2 0x1CE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x233 JUMPI PUSH2 0x232 PUSH2 0x1A1 JUMP JUMPDEST JUMPDEST PUSH2 0x23C DUP3 PUSH2 0x191 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x269 PUSH2 0x264 DUP5 PUSH2 0x219 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x285 JUMPI PUSH2 0x284 PUSH2 0x18D JUMP JUMPDEST JUMPDEST PUSH2 0x290 DUP5 DUP3 DUP6 PUSH2 0x249 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2AC JUMPI PUSH2 0x2AB PUSH2 0x189 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x2BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x257 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2DD JUMPI PUSH2 0x2DC PUSH2 0x127 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2EA DUP8 DUP3 DUP9 ADD PUSH2 0x175 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2FB DUP8 DUP3 DUP9 ADD PUSH2 0x175 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31C JUMPI PUSH2 0x31B PUSH2 0x12B JUMP JUMPDEST JUMPDEST PUSH2 0x328 DUP8 DUP3 DUP9 ADD PUSH2 0x298 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x349 JUMPI PUSH2 0x348 PUSH2 0x12B JUMP JUMPDEST JUMPDEST PUSH2 0x355 DUP8 DUP3 DUP9 ADD PUSH2 0x298 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3AF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3C2 JUMPI PUSH2 0x3C1 PUSH2 0x36B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x424 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x42E DUP7 DUP4 PUSH2 0x3E9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x472 PUSH2 0x46D PUSH2 0x468 DUP5 PUSH2 0x446 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48B DUP4 PUSH2 0x458 JUMP JUMPDEST PUSH2 0x49F PUSH2 0x497 DUP3 PUSH2 0x479 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3F5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x4B3 PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x4BE DUP2 DUP5 DUP5 PUSH2 0x482 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4E1 JUMPI PUSH2 0x4D6 PUSH0 DUP3 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4C4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x526 JUMPI PUSH2 0x4F7 DUP2 PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0x500 DUP5 PUSH2 0x3DA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x50F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x523 PUSH2 0x51B DUP6 PUSH2 0x3DA JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4C3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x546 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x52B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x55E DUP4 DUP4 PUSH2 0x537 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x577 DUP3 PUSH2 0x361 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x590 JUMPI PUSH2 0x58F PUSH2 0x1A1 JUMP JUMPDEST JUMPDEST PUSH2 0x59A DUP3 SLOAD PUSH2 0x398 JUMP JUMPDEST PUSH2 0x5A5 DUP3 DUP3 DUP6 PUSH2 0x4E5 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5D6 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x5C4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x5CE DUP6 DUP3 PUSH2 0x553 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x635 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5E4 DUP7 PUSH2 0x3C8 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x60B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5E6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x628 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x624 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x537 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1587 DUP1 PUSH2 0x64A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F64B55B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9CD441DA GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E1 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x259 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x11B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x320 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34C SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x397 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x397 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3AB PUSH2 0x887 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B8 DUP2 DUP6 DUP6 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x401 PUSH2 0x887 JUMP JUMPDEST SWAP1 POP PUSH2 0x40E DUP6 DUP3 DUP6 PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x419 DUP6 DUP6 DUP6 PUSH2 0x933 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CB SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F7 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x542 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x519 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x542 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x525 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x55A JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x590 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x135F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x613 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x13BE JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x696 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x135F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x13BE JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0x6E1 PUSH2 0x3E8 JUMP JUMPDEST SUB PUSH2 0x701 JUMPI PUSH2 0x6FA DUP3 DUP5 PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0xA23 JUMP JUMPDEST SWAP1 POP PUSH2 0x74C JUMP JUMPDEST PUSH2 0x749 PUSH1 0x7 SLOAD PUSH2 0x70F PUSH2 0x3E8 JUMP JUMPDEST DUP6 PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x72F PUSH2 0x3E8 JUMP JUMPDEST DUP6 PUSH2 0x73A SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xA9A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x756 CALLER DUP3 PUSH2 0xAB2 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x767 SWAP2 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x77F SWAP2 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7E7 PUSH2 0x887 JUMP JUMPDEST SWAP1 POP PUSH2 0x7F4 DUP2 DUP6 DUP6 PUSH2 0x933 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x89B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB31 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8AB DUP5 DUP5 PUSH2 0x805 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x92D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x91E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x915 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x92C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xB31 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99A SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA13 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0A SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1E DUP4 DUP4 DUP4 PUSH2 0xD00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0xA88 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0xA40 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xA4A SWAP2 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA82 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0xA67 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST SWAP1 POP PUSH2 0xA4D JUMP JUMPDEST POP PUSH2 0xA95 JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0xA94 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0xAA8 JUMPI DUP2 PUSH2 0xAAA JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB22 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB19 SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB2D PUSH0 DUP4 DUP4 PUSH2 0xD00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC11 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC08 SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCFA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD50 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD44 SWAP2 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE1E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDD9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE65 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEAF JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF0C SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF5B DUP3 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0xF65 DUP2 DUP6 PUSH2 0xF23 JUMP JUMPDEST SWAP4 POP PUSH2 0xF75 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF33 JUMP JUMPDEST PUSH2 0xF7E DUP2 PUSH2 0xF41 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFA1 DUP2 DUP5 PUSH2 0xF51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFD6 DUP3 PUSH2 0xFAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE6 DUP2 PUSH2 0xFCC JUMP JUMPDEST DUP2 EQ PUSH2 0xFF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1001 DUP2 PUSH2 0xFDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1019 DUP2 PUSH2 0x1007 JUMP JUMPDEST DUP2 EQ PUSH2 0x1023 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1034 DUP2 PUSH2 0x1010 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1050 JUMPI PUSH2 0x104F PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x105D DUP6 DUP3 DUP7 ADD PUSH2 0xFF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x106E DUP6 DUP3 DUP7 ADD PUSH2 0x1026 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x108C DUP2 PUSH2 0x1078 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1083 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10CE PUSH2 0x10C9 PUSH2 0x10C4 DUP5 PUSH2 0xFAD JUMP JUMPDEST PUSH2 0x10AB JUMP JUMPDEST PUSH2 0xFAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10DF DUP3 PUSH2 0x10B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10F0 DUP3 PUSH2 0x10D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1100 DUP2 PUSH2 0x10E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1119 PUSH0 DUP4 ADD DUP5 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1128 DUP2 PUSH2 0x1007 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1141 PUSH0 DUP4 ADD DUP5 PUSH2 0x111F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x115E JUMPI PUSH2 0x115D PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x116B DUP7 DUP3 DUP8 ADD PUSH2 0xFF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x117C DUP7 DUP3 DUP8 ADD PUSH2 0xFF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x118D DUP7 DUP3 DUP8 ADD PUSH2 0x1026 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AC DUP2 PUSH2 0x1197 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11C5 PUSH0 DUP4 ADD DUP5 PUSH2 0x11A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E0 JUMPI PUSH2 0x11DF PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11ED DUP5 DUP3 DUP6 ADD PUSH2 0xFF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11FF DUP2 PUSH2 0xFCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1218 PUSH0 DUP4 ADD DUP5 PUSH2 0x11F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1234 JUMPI PUSH2 0x1233 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1241 DUP6 DUP3 DUP7 ADD PUSH2 0x1026 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1252 DUP6 DUP3 DUP7 ADD PUSH2 0x1026 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1272 JUMPI PUSH2 0x1271 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x127F DUP6 DUP3 DUP7 ADD PUSH2 0xFF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1290 DUP6 DUP3 DUP7 ADD PUSH2 0xFF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12DE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12F1 JUMPI PUSH2 0x12F0 PUSH2 0x129A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E7473206D757374206265203E203000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x132B PUSH1 0x13 DUP4 PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1336 DUP3 PUSH2 0x12F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1358 DUP2 PUSH2 0x131F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1372 PUSH0 DUP4 ADD DUP7 PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x137F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x138C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x111F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x139D DUP2 PUSH2 0x1078 JUMP JUMPDEST DUP2 EQ PUSH2 0x13A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x13B8 DUP2 PUSH2 0x1394 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D3 JUMPI PUSH2 0x13D2 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13E0 DUP5 DUP3 DUP6 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1420 DUP3 PUSH2 0x1007 JUMP JUMPDEST SWAP2 POP PUSH2 0x142B DUP4 PUSH2 0x1007 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1439 DUP2 PUSH2 0x1007 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1450 JUMPI PUSH2 0x144F PUSH2 0x13E9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x148E DUP3 PUSH2 0x1007 JUMP JUMPDEST SWAP2 POP PUSH2 0x1499 DUP4 PUSH2 0x1007 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14A9 JUMPI PUSH2 0x14A8 PUSH2 0x1457 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14BE DUP3 PUSH2 0x1007 JUMP JUMPDEST SWAP2 POP PUSH2 0x14C9 DUP4 PUSH2 0x1007 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14E1 JUMPI PUSH2 0x14E0 PUSH2 0x13E9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x14FA PUSH0 DUP4 ADD DUP7 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x1507 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x1514 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x111F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x152F PUSH0 DUP4 ADD DUP7 PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x153C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x1549 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x111F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 JUMPI EXP 0xEE ADDMOD SAR DUP3 0xB4 0xC2 0xB4 0x29 RETURN PUSH2 0x5346 DUP14 RETURNDATASIZE 0xEA 0xD8 0x4E TIMESTAMP 0xC9 PUSH20 0xBAA2FC5F10BAC8E20264736F6C634300081A0033 ",
							"sourceMap": "180:3733:5:-:0;;;1176:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1272:5;1279:7;1656:5:1;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1309:7:5::1;1293:6;;:24;;;;;;;;;;;;;;;;;;1338:7;1322:6;;:24;;;;;;;;;;;;;;;;;;1359:10;1351:5;;:18;;;;;;;;;;;;;;;;;;1176:197:::0;;;;180:3733;;7:75:6;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:139::-;2210:6;2205:3;2200;2194:23;2251:1;2242:6;2237:3;2233:16;2226:27;2121:139;;;:::o;2266:434::-;2355:5;2380:66;2396:49;2438:6;2396:49;:::i;:::-;2380:66;:::i;:::-;2371:75;;2469:6;2462:5;2455:21;2507:4;2500:5;2496:16;2545:3;2536:6;2531:3;2527:16;2524:25;2521:112;;;2552:79;;:::i;:::-;2521:112;2642:52;2687:6;2682:3;2677;2642:52;:::i;:::-;2361:339;2266:434;;;;;:::o;2720:355::-;2787:5;2836:3;2829:4;2821:6;2817:17;2813:27;2803:122;;2844:79;;:::i;:::-;2803:122;2954:6;2948:13;2979:90;3065:3;3057:6;3050:4;3042:6;3038:17;2979:90;:::i;:::-;2970:99;;2793:282;2720:355;;;;:::o;3081:1166::-;3198:6;3206;3214;3222;3271:3;3259:9;3250:7;3246:23;3242:33;3239:120;;;3278:79;;:::i;:::-;3239:120;3398:1;3423:64;3479:7;3470:6;3459:9;3455:22;3423:64;:::i;:::-;3413:74;;3369:128;3536:2;3562:64;3618:7;3609:6;3598:9;3594:22;3562:64;:::i;:::-;3552:74;;3507:129;3696:2;3685:9;3681:18;3675:25;3727:18;3719:6;3716:30;3713:117;;;3749:79;;:::i;:::-;3713:117;3854:74;3920:7;3911:6;3900:9;3896:22;3854:74;:::i;:::-;3844:84;;3646:292;3998:2;3987:9;3983:18;3977:25;4029:18;4021:6;4018:30;4015:117;;;4051:79;;:::i;:::-;4015:117;4156:74;4222:7;4213:6;4202:9;4198:22;4156:74;:::i;:::-;4146:84;;3948:292;3081:1166;;;;;;;:::o;4253:99::-;4305:6;4339:5;4333:12;4323:22;;4253:99;;;:::o;4358:180::-;4406:77;4403:1;4396:88;4503:4;4500:1;4493:15;4527:4;4524:1;4517:15;4544:320;4588:6;4625:1;4619:4;4615:12;4605:22;;4672:1;4666:4;4662:12;4693:18;4683:81;;4749:4;4741:6;4737:17;4727:27;;4683:81;4811:2;4803:6;4800:14;4780:18;4777:38;4774:84;;4830:18;;:::i;:::-;4774:84;4595:269;4544:320;;;:::o;4870:141::-;4919:4;4942:3;4934:11;;4965:3;4962:1;4955:14;4999:4;4996:1;4986:18;4978:26;;4870:141;;;:::o;5017:93::-;5054:6;5101:2;5096;5089:5;5085:14;5081:23;5071:33;;5017:93;;;:::o;5116:107::-;5160:8;5210:5;5204:4;5200:16;5179:37;;5116:107;;;;:::o;5229:393::-;5298:6;5348:1;5336:10;5332:18;5371:97;5401:66;5390:9;5371:97;:::i;:::-;5489:39;5519:8;5508:9;5489:39;:::i;:::-;5477:51;;5561:4;5557:9;5550:5;5546:21;5537:30;;5610:4;5600:8;5596:19;5589:5;5586:30;5576:40;;5305:317;;5229:393;;;;;:::o;5628:77::-;5665:7;5694:5;5683:16;;5628:77;;;:::o;5711:60::-;5739:3;5760:5;5753:12;;5711:60;;;:::o;5777:142::-;5827:9;5860:53;5878:34;5887:24;5905:5;5887:24;:::i;:::-;5878:34;:::i;:::-;5860:53;:::i;:::-;5847:66;;5777:142;;;:::o;5925:75::-;5968:3;5989:5;5982:12;;5925:75;;;:::o;6006:269::-;6116:39;6147:7;6116:39;:::i;:::-;6177:91;6226:41;6250:16;6226:41;:::i;:::-;6218:6;6211:4;6205:11;6177:91;:::i;:::-;6171:4;6164:105;6082:193;6006:269;;;:::o;6281:73::-;6326:3;6281:73;:::o;6360:189::-;6437:32;;:::i;:::-;6478:65;6536:6;6528;6522:4;6478:65;:::i;:::-;6413:136;6360:189;;:::o;6555:186::-;6615:120;6632:3;6625:5;6622:14;6615:120;;;6686:39;6723:1;6716:5;6686:39;:::i;:::-;6659:1;6652:5;6648:13;6639:22;;6615:120;;;6555:186;;:::o;6747:543::-;6848:2;6843:3;6840:11;6837:446;;;6882:38;6914:5;6882:38;:::i;:::-;6966:29;6984:10;6966:29;:::i;:::-;6956:8;6952:44;7149:2;7137:10;7134:18;7131:49;;;7170:8;7155:23;;7131:49;7193:80;7249:22;7267:3;7249:22;:::i;:::-;7239:8;7235:37;7222:11;7193:80;:::i;:::-;6852:431;;6837:446;6747:543;;;:::o;7296:117::-;7350:8;7400:5;7394:4;7390:16;7369:37;;7296:117;;;;:::o;7419:169::-;7463:6;7496:51;7544:1;7540:6;7532:5;7529:1;7525:13;7496:51;:::i;:::-;7492:56;7577:4;7571;7567:15;7557:25;;7470:118;7419:169;;;;:::o;7593:295::-;7669:4;7815:29;7840:3;7834:4;7815:29;:::i;:::-;7807:37;;7877:3;7874:1;7870:11;7864:4;7861:21;7853:29;;7593:295;;;;:::o;7893:1395::-;8010:37;8043:3;8010:37;:::i;:::-;8112:18;8104:6;8101:30;8098:56;;;8134:18;;:::i;:::-;8098:56;8178:38;8210:4;8204:11;8178:38;:::i;:::-;8263:67;8323:6;8315;8309:4;8263:67;:::i;:::-;8357:1;8381:4;8368:17;;8413:2;8405:6;8402:14;8430:1;8425:618;;;;9087:1;9104:6;9101:77;;;9153:9;9148:3;9144:19;9138:26;9129:35;;9101:77;9204:67;9264:6;9257:5;9204:67;:::i;:::-;9198:4;9191:81;9060:222;8395:887;;8425:618;8477:4;8473:9;8465:6;8461:22;8511:37;8543:4;8511:37;:::i;:::-;8570:1;8584:208;8598:7;8595:1;8592:14;8584:208;;;8677:9;8672:3;8668:19;8662:26;8654:6;8647:42;8728:1;8720:6;8716:14;8706:24;;8775:2;8764:9;8760:18;8747:31;;8621:4;8618:1;8614:12;8609:17;;8584:208;;;8820:6;8811:7;8808:19;8805:179;;;8878:9;8873:3;8869:19;8863:26;8921:48;8963:4;8955:6;8951:17;8940:9;8921:48;:::i;:::-;8913:6;8906:64;8828:156;8805:179;9030:1;9026;9018:6;9014:14;9010:22;9004:4;8997:36;8432:611;;;8395:887;;7985:1303;;;7893:1395;;:::o;180:3733:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 2190,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 2865,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 2738,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 2183,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 2208,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 2355,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 3328,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_1039": {
									"entryPoint": 1356,
									"id": 1039,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 2053,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 929,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 1106,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 1061,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@min_885": {
									"entryPoint": 2714,
									"id": 885,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 785,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_803": {
									"entryPoint": 1175,
									"id": 803,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveA_799": {
									"entryPoint": 2047,
									"id": 799,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveB_801": {
									"entryPoint": 1009,
									"id": 801,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_939": {
									"entryPoint": 2595,
									"id": 939,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 1212,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenA_794": {
									"entryPoint": 963,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenB_797": {
									"entryPoint": 1069,
									"id": 797,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_224": {
									"entryPoint": 1000,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1015,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 2013,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack": {
									"entryPoint": 4343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4959,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5404,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": 4358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5351,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$729_to_t_address": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3891,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5097,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4762,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4009,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0": {
									"entryPoint": 4855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11923:6",
										"nodeType": "YulBlock",
										"src": "0:11923:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1282:35:6",
													"nodeType": "YulBlock",
													"src": "1282:35:6",
													"statements": [
														{
															"nativeSrc": "1292:19:6",
															"nodeType": "YulAssignment",
															"src": "1292:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:6"
																},
																"nativeSrc": "1302:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"src": "1242:75:6"
											},
											{
												"body": {
													"nativeSrc": "1412:28:6",
													"nodeType": "YulBlock",
													"src": "1412:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:6"
																},
																"nativeSrc": "1422:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:6"
															},
															"nativeSrc": "1422:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:6"
											},
											{
												"body": {
													"nativeSrc": "1535:28:6",
													"nodeType": "YulBlock",
													"src": "1535:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:6"
																},
																"nativeSrc": "1545:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:6"
															},
															"nativeSrc": "1545:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:6"
											},
											{
												"body": {
													"nativeSrc": "1614:81:6",
													"nodeType": "YulBlock",
													"src": "1614:81:6",
													"statements": [
														{
															"nativeSrc": "1624:65:6",
															"nodeType": "YulAssignment",
															"src": "1624:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:6"
																},
																"nativeSrc": "1635:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:6",
														"nodeType": "YulTypedName",
														"src": "1596:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:6",
														"nodeType": "YulTypedName",
														"src": "1606:7:6",
														"type": ""
													}
												],
												"src": "1569:126:6"
											},
											{
												"body": {
													"nativeSrc": "1746:51:6",
													"nodeType": "YulBlock",
													"src": "1746:51:6",
													"statements": [
														{
															"nativeSrc": "1756:35:6",
															"nodeType": "YulAssignment",
															"src": "1756:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:6"
																},
																"nativeSrc": "1767:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:6",
														"nodeType": "YulTypedName",
														"src": "1728:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:6",
														"nodeType": "YulTypedName",
														"src": "1738:7:6",
														"type": ""
													}
												],
												"src": "1701:96:6"
											},
											{
												"body": {
													"nativeSrc": "1846:79:6",
													"nodeType": "YulBlock",
													"src": "1846:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:6",
																"nodeType": "YulBlock",
																"src": "1903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:6"
																			},
																			"nativeSrc": "1905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:6"
																		},
																		"nativeSrc": "1905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:6"
																				},
																				"nativeSrc": "1876:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:6"
																		},
																		"nativeSrc": "1866:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:6"
															},
															"nativeSrc": "1856:63:6",
															"nodeType": "YulIf",
															"src": "1856:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:6",
														"nodeType": "YulTypedName",
														"src": "1839:5:6",
														"type": ""
													}
												],
												"src": "1803:122:6"
											},
											{
												"body": {
													"nativeSrc": "1983:87:6",
													"nodeType": "YulBlock",
													"src": "1983:87:6",
													"statements": [
														{
															"nativeSrc": "1993:29:6",
															"nodeType": "YulAssignment",
															"src": "1993:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:6"
																},
																"nativeSrc": "2002:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:6"
																},
																"nativeSrc": "2031:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:6"
															},
															"nativeSrc": "2031:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:6",
														"nodeType": "YulTypedName",
														"src": "1961:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:6",
														"nodeType": "YulTypedName",
														"src": "1969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:6",
														"nodeType": "YulTypedName",
														"src": "1977:5:6",
														"type": ""
													}
												],
												"src": "1931:139:6"
											},
											{
												"body": {
													"nativeSrc": "2121:32:6",
													"nodeType": "YulBlock",
													"src": "2121:32:6",
													"statements": [
														{
															"nativeSrc": "2131:16:6",
															"nodeType": "YulAssignment",
															"src": "2131:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:6",
																"nodeType": "YulIdentifier",
																"src": "2142:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:6",
														"nodeType": "YulTypedName",
														"src": "2103:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:6",
														"nodeType": "YulTypedName",
														"src": "2113:7:6",
														"type": ""
													}
												],
												"src": "2076:77:6"
											},
											{
												"body": {
													"nativeSrc": "2202:79:6",
													"nodeType": "YulBlock",
													"src": "2202:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:6",
																"nodeType": "YulBlock",
																"src": "2259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:6"
																			},
																			"nativeSrc": "2261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:6"
																		},
																		"nativeSrc": "2261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:6"
																				},
																				"nativeSrc": "2232:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:6"
																		},
																		"nativeSrc": "2222:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:6"
																},
																"nativeSrc": "2215:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:6"
															},
															"nativeSrc": "2212:63:6",
															"nodeType": "YulIf",
															"src": "2212:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:6",
														"nodeType": "YulTypedName",
														"src": "2195:5:6",
														"type": ""
													}
												],
												"src": "2159:122:6"
											},
											{
												"body": {
													"nativeSrc": "2339:87:6",
													"nodeType": "YulBlock",
													"src": "2339:87:6",
													"statements": [
														{
															"nativeSrc": "2349:29:6",
															"nodeType": "YulAssignment",
															"src": "2349:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:6"
																},
																"nativeSrc": "2358:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:6"
																},
																"nativeSrc": "2387:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:6"
															},
															"nativeSrc": "2387:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:6",
														"nodeType": "YulTypedName",
														"src": "2317:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:6",
														"nodeType": "YulTypedName",
														"src": "2325:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:6",
														"nodeType": "YulTypedName",
														"src": "2333:5:6",
														"type": ""
													}
												],
												"src": "2287:139:6"
											},
											{
												"body": {
													"nativeSrc": "2515:391:6",
													"nodeType": "YulBlock",
													"src": "2515:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:6",
																"nodeType": "YulBlock",
																"src": "2561:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:6"
																			},
																			"nativeSrc": "2563:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:6"
																		},
																		"nativeSrc": "2563:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:6"
																		},
																		"nativeSrc": "2532:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:6"
																},
																"nativeSrc": "2528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:6"
															},
															"nativeSrc": "2525:119:6",
															"nodeType": "YulIf",
															"src": "2525:119:6"
														},
														{
															"nativeSrc": "2654:117:6",
															"nodeType": "YulBlock",
															"src": "2654:117:6",
															"statements": [
																{
																	"nativeSrc": "2669:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:6"
																				},
																				"nativeSrc": "2729:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:6"
																		},
																		"nativeSrc": "2708:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:6",
															"nodeType": "YulBlock",
															"src": "2781:118:6",
															"statements": [
																{
																	"nativeSrc": "2796:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:6"
																		},
																		"nativeSrc": "2836:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:6",
														"nodeType": "YulTypedName",
														"src": "2488:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:6",
														"nodeType": "YulTypedName",
														"src": "2500:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:6",
														"nodeType": "YulTypedName",
														"src": "2508:6:6",
														"type": ""
													}
												],
												"src": "2432:474:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3371:28:6",
													"nodeType": "YulBlock",
													"src": "3371:28:6",
													"statements": [
														{
															"nativeSrc": "3381:12:6",
															"nodeType": "YulAssignment",
															"src": "3381:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3388:5:6",
																"nodeType": "YulIdentifier",
																"src": "3388:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3381:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3381:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3339:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3357:5:6",
														"nodeType": "YulTypedName",
														"src": "3357:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3367:3:6",
														"nodeType": "YulTypedName",
														"src": "3367:3:6",
														"type": ""
													}
												],
												"src": "3339:60:6"
											},
											{
												"body": {
													"nativeSrc": "3465:82:6",
													"nodeType": "YulBlock",
													"src": "3465:82:6",
													"statements": [
														{
															"nativeSrc": "3475:66:6",
															"nodeType": "YulAssignment",
															"src": "3475:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3533:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3533:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3515:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3515:17:6"
																				},
																				"nativeSrc": "3515:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3515:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3506:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "3506:8:6"
																		},
																		"nativeSrc": "3506:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3506:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3488:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3488:17:6"
																},
																"nativeSrc": "3488:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3488:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3475:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3475:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3405:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3445:5:6",
														"nodeType": "YulTypedName",
														"src": "3445:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3455:9:6",
														"nodeType": "YulTypedName",
														"src": "3455:9:6",
														"type": ""
													}
												],
												"src": "3405:142:6"
											},
											{
												"body": {
													"nativeSrc": "3613:66:6",
													"nodeType": "YulBlock",
													"src": "3613:66:6",
													"statements": [
														{
															"nativeSrc": "3623:50:6",
															"nodeType": "YulAssignment",
															"src": "3623:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3667:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3667:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3636:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3636:30:6"
																},
																"nativeSrc": "3636:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3636:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3623:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3623:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3553:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3593:5:6",
														"nodeType": "YulTypedName",
														"src": "3593:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3603:9:6",
														"nodeType": "YulTypedName",
														"src": "3603:9:6",
														"type": ""
													}
												],
												"src": "3553:126:6"
											},
											{
												"body": {
													"nativeSrc": "3759:66:6",
													"nodeType": "YulBlock",
													"src": "3759:66:6",
													"statements": [
														{
															"nativeSrc": "3769:50:6",
															"nodeType": "YulAssignment",
															"src": "3769:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3813:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3813:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3782:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3782:30:6"
																},
																"nativeSrc": "3782:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3782:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3769:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3769:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$729_to_t_address",
												"nativeSrc": "3685:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3739:5:6",
														"nodeType": "YulTypedName",
														"src": "3739:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3749:9:6",
														"nodeType": "YulTypedName",
														"src": "3749:9:6",
														"type": ""
													}
												],
												"src": "3685:140:6"
											},
											{
												"body": {
													"nativeSrc": "3910:80:6",
													"nodeType": "YulBlock",
													"src": "3910:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3927:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3927:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3977:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3977:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$729_to_t_address",
																			"nativeSrc": "3932:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "3932:44:6"
																		},
																		"nativeSrc": "3932:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3932:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3920:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3920:6:6"
																},
																"nativeSrc": "3920:64:6",
																"nodeType": "YulFunctionCall",
																"src": "3920:64:6"
															},
															"nativeSrc": "3920:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "3920:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
												"nativeSrc": "3831:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3898:5:6",
														"nodeType": "YulTypedName",
														"src": "3898:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3905:3:6",
														"nodeType": "YulTypedName",
														"src": "3905:3:6",
														"type": ""
													}
												],
												"src": "3831:159:6"
											},
											{
												"body": {
													"nativeSrc": "4108:138:6",
													"nodeType": "YulBlock",
													"src": "4108:138:6",
													"statements": [
														{
															"nativeSrc": "4118:26:6",
															"nodeType": "YulAssignment",
															"src": "4118:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4130:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4130:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4141:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4141:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4126:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4126:3:6"
																},
																"nativeSrc": "4126:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4126:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4118:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4118:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4212:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4212:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4225:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4225:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4236:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4236:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4221:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4221:3:6"
																		},
																		"nativeSrc": "4221:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4221:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
																	"nativeSrc": "4154:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "4154:57:6"
																},
																"nativeSrc": "4154:85:6",
																"nodeType": "YulFunctionCall",
																"src": "4154:85:6"
															},
															"nativeSrc": "4154:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "4154:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "3996:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:6",
														"nodeType": "YulTypedName",
														"src": "4080:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4092:6:6",
														"nodeType": "YulTypedName",
														"src": "4092:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4103:4:6",
														"nodeType": "YulTypedName",
														"src": "4103:4:6",
														"type": ""
													}
												],
												"src": "3996:250:6"
											},
											{
												"body": {
													"nativeSrc": "4317:53:6",
													"nodeType": "YulBlock",
													"src": "4317:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4334:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4334:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4357:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4357:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4339:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4339:17:6"
																		},
																		"nativeSrc": "4339:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4339:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4327:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4327:6:6"
																},
																"nativeSrc": "4327:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4327:37:6"
															},
															"nativeSrc": "4327:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4327:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4252:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4305:5:6",
														"nodeType": "YulTypedName",
														"src": "4305:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4312:3:6",
														"nodeType": "YulTypedName",
														"src": "4312:3:6",
														"type": ""
													}
												],
												"src": "4252:118:6"
											},
											{
												"body": {
													"nativeSrc": "4474:124:6",
													"nodeType": "YulBlock",
													"src": "4474:124:6",
													"statements": [
														{
															"nativeSrc": "4484:26:6",
															"nodeType": "YulAssignment",
															"src": "4484:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4496:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4496:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4507:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4507:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4492:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4492:3:6"
																},
																"nativeSrc": "4492:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4492:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4484:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4484:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4564:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4564:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4577:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4577:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4588:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4588:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4573:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4573:3:6"
																		},
																		"nativeSrc": "4573:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4573:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4520:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4520:43:6"
																},
																"nativeSrc": "4520:71:6",
																"nodeType": "YulFunctionCall",
																"src": "4520:71:6"
															},
															"nativeSrc": "4520:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "4520:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4376:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4446:9:6",
														"nodeType": "YulTypedName",
														"src": "4446:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4458:6:6",
														"nodeType": "YulTypedName",
														"src": "4458:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4469:4:6",
														"nodeType": "YulTypedName",
														"src": "4469:4:6",
														"type": ""
													}
												],
												"src": "4376:222:6"
											},
											{
												"body": {
													"nativeSrc": "4704:519:6",
													"nodeType": "YulBlock",
													"src": "4704:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4750:83:6",
																"nodeType": "YulBlock",
																"src": "4750:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4752:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4752:77:6"
																			},
																			"nativeSrc": "4752:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4752:79:6"
																		},
																		"nativeSrc": "4752:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4752:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4725:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4725:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4734:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4734:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4721:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4721:3:6"
																		},
																		"nativeSrc": "4721:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4721:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4746:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4746:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4717:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4717:3:6"
																},
																"nativeSrc": "4717:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4717:32:6"
															},
															"nativeSrc": "4714:119:6",
															"nodeType": "YulIf",
															"src": "4714:119:6"
														},
														{
															"nativeSrc": "4843:117:6",
															"nodeType": "YulBlock",
															"src": "4843:117:6",
															"statements": [
																{
																	"nativeSrc": "4858:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4858:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4862:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4862:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4887:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4887:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4922:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4922:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4933:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4933:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4918:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4918:3:6"
																				},
																				"nativeSrc": "4918:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4918:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4942:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4942:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4897:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4897:20:6"
																		},
																		"nativeSrc": "4897:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4897:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4887:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4887:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4970:118:6",
															"nodeType": "YulBlock",
															"src": "4970:118:6",
															"statements": [
																{
																	"nativeSrc": "4985:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4985:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4999:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4999:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4989:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4989:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5015:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5015:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5050:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5050:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5061:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5061:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5046:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5046:3:6"
																				},
																				"nativeSrc": "5046:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5046:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5070:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5070:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5025:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5025:20:6"
																		},
																		"nativeSrc": "5025:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5025:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5015:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5015:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5098:118:6",
															"nodeType": "YulBlock",
															"src": "5098:118:6",
															"statements": [
																{
																	"nativeSrc": "5113:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5113:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5127:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5127:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5117:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5117:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5143:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5143:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5178:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5178:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5189:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5189:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5174:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5174:3:6"
																				},
																				"nativeSrc": "5174:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5174:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5198:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5198:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5153:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5153:20:6"
																		},
																		"nativeSrc": "5153:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5153:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5143:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5143:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4604:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4658:9:6",
														"nodeType": "YulTypedName",
														"src": "4658:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4669:7:6",
														"nodeType": "YulTypedName",
														"src": "4669:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4681:6:6",
														"nodeType": "YulTypedName",
														"src": "4681:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4689:6:6",
														"nodeType": "YulTypedName",
														"src": "4689:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4697:6:6",
														"nodeType": "YulTypedName",
														"src": "4697:6:6",
														"type": ""
													}
												],
												"src": "4604:619:6"
											},
											{
												"body": {
													"nativeSrc": "5272:43:6",
													"nodeType": "YulBlock",
													"src": "5272:43:6",
													"statements": [
														{
															"nativeSrc": "5282:27:6",
															"nodeType": "YulAssignment",
															"src": "5282:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5297:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5297:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5304:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5304:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5293:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5293:3:6"
																},
																"nativeSrc": "5293:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5293:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5282:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5282:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5229:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5254:5:6",
														"nodeType": "YulTypedName",
														"src": "5254:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5264:7:6",
														"nodeType": "YulTypedName",
														"src": "5264:7:6",
														"type": ""
													}
												],
												"src": "5229:86:6"
											},
											{
												"body": {
													"nativeSrc": "5382:51:6",
													"nodeType": "YulBlock",
													"src": "5382:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5399:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5399:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5420:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5420:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5404:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "5404:15:6"
																		},
																		"nativeSrc": "5404:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5404:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5392:6:6"
																},
																"nativeSrc": "5392:35:6",
																"nodeType": "YulFunctionCall",
																"src": "5392:35:6"
															},
															"nativeSrc": "5392:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "5392:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5321:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5370:5:6",
														"nodeType": "YulTypedName",
														"src": "5370:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5377:3:6",
														"nodeType": "YulTypedName",
														"src": "5377:3:6",
														"type": ""
													}
												],
												"src": "5321:112:6"
											},
											{
												"body": {
													"nativeSrc": "5533:120:6",
													"nodeType": "YulBlock",
													"src": "5533:120:6",
													"statements": [
														{
															"nativeSrc": "5543:26:6",
															"nodeType": "YulAssignment",
															"src": "5543:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5555:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5555:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5566:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5551:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5551:3:6"
																},
																"nativeSrc": "5551:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5551:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5543:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5543:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5619:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5619:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5632:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5643:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5643:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5628:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5628:3:6"
																		},
																		"nativeSrc": "5628:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5628:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5579:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "5579:39:6"
																},
																"nativeSrc": "5579:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5579:67:6"
															},
															"nativeSrc": "5579:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "5579:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5439:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5505:9:6",
														"nodeType": "YulTypedName",
														"src": "5505:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5517:6:6",
														"nodeType": "YulTypedName",
														"src": "5517:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5528:4:6",
														"nodeType": "YulTypedName",
														"src": "5528:4:6",
														"type": ""
													}
												],
												"src": "5439:214:6"
											},
											{
												"body": {
													"nativeSrc": "5725:263:6",
													"nodeType": "YulBlock",
													"src": "5725:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5771:83:6",
																"nodeType": "YulBlock",
																"src": "5771:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5773:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5773:77:6"
																			},
																			"nativeSrc": "5773:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5773:79:6"
																		},
																		"nativeSrc": "5773:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5746:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5746:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5755:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5755:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5742:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5742:3:6"
																		},
																		"nativeSrc": "5742:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5742:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5767:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5767:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5738:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5738:3:6"
																},
																"nativeSrc": "5738:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5738:32:6"
															},
															"nativeSrc": "5735:119:6",
															"nodeType": "YulIf",
															"src": "5735:119:6"
														},
														{
															"nativeSrc": "5864:117:6",
															"nodeType": "YulBlock",
															"src": "5864:117:6",
															"statements": [
																{
																	"nativeSrc": "5879:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5879:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5893:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5893:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5883:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5883:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5908:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5908:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5943:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5943:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5954:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5954:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5939:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5939:3:6"
																				},
																				"nativeSrc": "5939:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5939:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5963:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5963:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5918:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5918:20:6"
																		},
																		"nativeSrc": "5918:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5918:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5908:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5908:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5659:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5695:9:6",
														"nodeType": "YulTypedName",
														"src": "5695:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5706:7:6",
														"nodeType": "YulTypedName",
														"src": "5706:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5718:6:6",
														"nodeType": "YulTypedName",
														"src": "5718:6:6",
														"type": ""
													}
												],
												"src": "5659:329:6"
											},
											{
												"body": {
													"nativeSrc": "6059:53:6",
													"nodeType": "YulBlock",
													"src": "6059:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6076:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6076:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6099:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6099:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6081:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "6081:17:6"
																		},
																		"nativeSrc": "6081:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6081:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6069:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6069:6:6"
																},
																"nativeSrc": "6069:37:6",
																"nodeType": "YulFunctionCall",
																"src": "6069:37:6"
															},
															"nativeSrc": "6069:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "6069:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5994:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6047:5:6",
														"nodeType": "YulTypedName",
														"src": "6047:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6054:3:6",
														"nodeType": "YulTypedName",
														"src": "6054:3:6",
														"type": ""
													}
												],
												"src": "5994:118:6"
											},
											{
												"body": {
													"nativeSrc": "6216:124:6",
													"nodeType": "YulBlock",
													"src": "6216:124:6",
													"statements": [
														{
															"nativeSrc": "6226:26:6",
															"nodeType": "YulAssignment",
															"src": "6226:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6238:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6238:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6249:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6249:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6234:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6234:3:6"
																},
																"nativeSrc": "6234:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6234:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6226:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6226:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6306:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6306:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6319:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6319:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6330:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6330:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6315:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6315:3:6"
																		},
																		"nativeSrc": "6315:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6315:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6262:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6262:43:6"
																},
																"nativeSrc": "6262:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6262:71:6"
															},
															"nativeSrc": "6262:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6262:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6118:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6188:9:6",
														"nodeType": "YulTypedName",
														"src": "6188:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6200:6:6",
														"nodeType": "YulTypedName",
														"src": "6200:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6211:4:6",
														"nodeType": "YulTypedName",
														"src": "6211:4:6",
														"type": ""
													}
												],
												"src": "6118:222:6"
											},
											{
												"body": {
													"nativeSrc": "6429:391:6",
													"nodeType": "YulBlock",
													"src": "6429:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6475:83:6",
																"nodeType": "YulBlock",
																"src": "6475:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6477:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6477:77:6"
																			},
																			"nativeSrc": "6477:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6477:79:6"
																		},
																		"nativeSrc": "6477:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6477:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6450:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6450:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6459:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6459:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6446:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6446:3:6"
																		},
																		"nativeSrc": "6446:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6446:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6471:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6471:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6442:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6442:3:6"
																},
																"nativeSrc": "6442:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6442:32:6"
															},
															"nativeSrc": "6439:119:6",
															"nodeType": "YulIf",
															"src": "6439:119:6"
														},
														{
															"nativeSrc": "6568:117:6",
															"nodeType": "YulBlock",
															"src": "6568:117:6",
															"statements": [
																{
																	"nativeSrc": "6583:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6583:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6597:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6597:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6587:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6587:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6612:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6612:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6647:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6647:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6658:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6658:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6643:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6643:3:6"
																				},
																				"nativeSrc": "6643:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6643:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6667:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6667:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6622:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6622:20:6"
																		},
																		"nativeSrc": "6622:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6622:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6612:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6612:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6695:118:6",
															"nodeType": "YulBlock",
															"src": "6695:118:6",
															"statements": [
																{
																	"nativeSrc": "6710:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6710:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6724:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6724:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6714:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6714:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6740:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6740:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6775:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6775:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6786:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6786:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6771:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6771:3:6"
																				},
																				"nativeSrc": "6771:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6771:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6795:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6795:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6750:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6750:20:6"
																		},
																		"nativeSrc": "6750:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6740:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6740:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "6346:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6391:9:6",
														"nodeType": "YulTypedName",
														"src": "6391:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6402:7:6",
														"nodeType": "YulTypedName",
														"src": "6402:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6414:6:6",
														"nodeType": "YulTypedName",
														"src": "6414:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6422:6:6",
														"nodeType": "YulTypedName",
														"src": "6422:6:6",
														"type": ""
													}
												],
												"src": "6346:474:6"
											},
											{
												"body": {
													"nativeSrc": "6909:391:6",
													"nodeType": "YulBlock",
													"src": "6909:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6955:83:6",
																"nodeType": "YulBlock",
																"src": "6955:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6957:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6957:77:6"
																			},
																			"nativeSrc": "6957:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6957:79:6"
																		},
																		"nativeSrc": "6957:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6957:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6930:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6930:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6939:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6939:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6926:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6926:3:6"
																		},
																		"nativeSrc": "6926:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6926:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6951:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6951:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6922:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6922:3:6"
																},
																"nativeSrc": "6922:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6922:32:6"
															},
															"nativeSrc": "6919:119:6",
															"nodeType": "YulIf",
															"src": "6919:119:6"
														},
														{
															"nativeSrc": "7048:117:6",
															"nodeType": "YulBlock",
															"src": "7048:117:6",
															"statements": [
																{
																	"nativeSrc": "7063:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7063:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7077:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7077:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7067:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7067:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7092:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7092:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7127:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7127:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7138:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7138:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7123:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7123:3:6"
																				},
																				"nativeSrc": "7123:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7123:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7147:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7147:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7102:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7102:20:6"
																		},
																		"nativeSrc": "7102:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7102:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7092:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7092:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7175:118:6",
															"nodeType": "YulBlock",
															"src": "7175:118:6",
															"statements": [
																{
																	"nativeSrc": "7190:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7190:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7204:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7204:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7194:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7194:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7220:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7220:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7255:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7255:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7266:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7266:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7251:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7251:3:6"
																				},
																				"nativeSrc": "7251:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7251:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7275:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7275:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7230:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7230:20:6"
																		},
																		"nativeSrc": "7230:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7230:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7220:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7220:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6826:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6871:9:6",
														"nodeType": "YulTypedName",
														"src": "6871:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6882:7:6",
														"nodeType": "YulTypedName",
														"src": "6882:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6894:6:6",
														"nodeType": "YulTypedName",
														"src": "6894:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6902:6:6",
														"nodeType": "YulTypedName",
														"src": "6902:6:6",
														"type": ""
													}
												],
												"src": "6826:474:6"
											},
											{
												"body": {
													"nativeSrc": "7334:152:6",
													"nodeType": "YulBlock",
													"src": "7334:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7351:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7351:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7354:77:6",
																		"nodeType": "YulLiteral",
																		"src": "7354:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7344:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7344:6:6"
																},
																"nativeSrc": "7344:88:6",
																"nodeType": "YulFunctionCall",
																"src": "7344:88:6"
															},
															"nativeSrc": "7344:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "7344:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7448:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7448:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7451:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7451:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7441:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7441:6:6"
																},
																"nativeSrc": "7441:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7441:15:6"
															},
															"nativeSrc": "7441:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7441:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7472:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7472:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7475:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7465:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7465:6:6"
																},
																"nativeSrc": "7465:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7465:15:6"
															},
															"nativeSrc": "7465:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7465:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7306:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "7306:180:6"
											},
											{
												"body": {
													"nativeSrc": "7543:269:6",
													"nodeType": "YulBlock",
													"src": "7543:269:6",
													"statements": [
														{
															"nativeSrc": "7553:22:6",
															"nodeType": "YulAssignment",
															"src": "7553:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7567:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7567:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7573:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7573:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7563:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7563:3:6"
																},
																"nativeSrc": "7563:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7563:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7553:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7553:6:6"
																}
															]
														},
														{
															"nativeSrc": "7584:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7584:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7614:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7614:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7620:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7620:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7610:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7610:3:6"
																},
																"nativeSrc": "7610:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7610:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7588:18:6",
																	"nodeType": "YulTypedName",
																	"src": "7588:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7661:51:6",
																"nodeType": "YulBlock",
																"src": "7661:51:6",
																"statements": [
																	{
																		"nativeSrc": "7675:27:6",
																		"nodeType": "YulAssignment",
																		"src": "7675:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7689:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "7689:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7697:4:6",
																					"nodeType": "YulLiteral",
																					"src": "7697:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7685:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7685:3:6"
																			},
																			"nativeSrc": "7685:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7685:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7675:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7675:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7641:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "7641:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7634:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7634:6:6"
																},
																"nativeSrc": "7634:26:6",
																"nodeType": "YulFunctionCall",
																"src": "7634:26:6"
															},
															"nativeSrc": "7631:81:6",
															"nodeType": "YulIf",
															"src": "7631:81:6"
														},
														{
															"body": {
																"nativeSrc": "7764:42:6",
																"nodeType": "YulBlock",
																"src": "7764:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7778:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7778:16:6"
																			},
																			"nativeSrc": "7778:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7778:18:6"
																		},
																		"nativeSrc": "7778:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7778:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7728:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "7728:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7751:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7751:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7759:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7759:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7748:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7748:2:6"
																		},
																		"nativeSrc": "7748:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7748:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7725:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7725:2:6"
																},
																"nativeSrc": "7725:38:6",
																"nodeType": "YulFunctionCall",
																"src": "7725:38:6"
															},
															"nativeSrc": "7722:84:6",
															"nodeType": "YulIf",
															"src": "7722:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7492:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7527:4:6",
														"nodeType": "YulTypedName",
														"src": "7527:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7536:6:6",
														"nodeType": "YulTypedName",
														"src": "7536:6:6",
														"type": ""
													}
												],
												"src": "7492:320:6"
											},
											{
												"body": {
													"nativeSrc": "7924:63:6",
													"nodeType": "YulBlock",
													"src": "7924:63:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7946:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7946:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7954:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7954:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7942:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7942:3:6"
																		},
																		"nativeSrc": "7942:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7942:14:6"
																	},
																	{
																		"hexValue": "416d6f756e7473206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "7958:21:6",
																		"nodeType": "YulLiteral",
																		"src": "7958:21:6",
																		"type": "",
																		"value": "Amounts must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7935:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7935:6:6"
																},
																"nativeSrc": "7935:45:6",
																"nodeType": "YulFunctionCall",
																"src": "7935:45:6"
															},
															"nativeSrc": "7935:45:6",
															"nodeType": "YulExpressionStatement",
															"src": "7935:45:6"
														}
													]
												},
												"name": "store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0",
												"nativeSrc": "7818:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7916:6:6",
														"nodeType": "YulTypedName",
														"src": "7916:6:6",
														"type": ""
													}
												],
												"src": "7818:169:6"
											},
											{
												"body": {
													"nativeSrc": "8139:220:6",
													"nodeType": "YulBlock",
													"src": "8139:220:6",
													"statements": [
														{
															"nativeSrc": "8149:74:6",
															"nodeType": "YulAssignment",
															"src": "8149:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8215:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8215:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8220:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8220:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8156:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8156:58:6"
																},
																"nativeSrc": "8156:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8156:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8149:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8149:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8321:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8321:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0",
																	"nativeSrc": "8232:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8232:88:6"
																},
																"nativeSrc": "8232:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8232:93:6"
															},
															"nativeSrc": "8232:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8232:93:6"
														},
														{
															"nativeSrc": "8334:19:6",
															"nodeType": "YulAssignment",
															"src": "8334:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8345:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8345:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8350:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8350:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8341:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8341:3:6"
																},
																"nativeSrc": "8341:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8341:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8334:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8334:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7993:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8127:3:6",
														"nodeType": "YulTypedName",
														"src": "8127:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8135:3:6",
														"nodeType": "YulTypedName",
														"src": "8135:3:6",
														"type": ""
													}
												],
												"src": "7993:366:6"
											},
											{
												"body": {
													"nativeSrc": "8536:248:6",
													"nodeType": "YulBlock",
													"src": "8536:248:6",
													"statements": [
														{
															"nativeSrc": "8546:26:6",
															"nodeType": "YulAssignment",
															"src": "8546:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8558:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8558:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8569:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8569:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8554:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8554:3:6"
																},
																"nativeSrc": "8554:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8554:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8546:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8546:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8593:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8593:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8604:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8604:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8589:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8589:3:6"
																		},
																		"nativeSrc": "8589:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8589:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8612:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8612:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8618:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8618:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8608:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8608:3:6"
																		},
																		"nativeSrc": "8608:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8608:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8582:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8582:6:6"
																},
																"nativeSrc": "8582:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8582:47:6"
															},
															"nativeSrc": "8582:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8582:47:6"
														},
														{
															"nativeSrc": "8638:139:6",
															"nodeType": "YulAssignment",
															"src": "8638:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8772:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8772:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8646:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8646:124:6"
																},
																"nativeSrc": "8646:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8646:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8638:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8638:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8365:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8516:9:6",
														"nodeType": "YulTypedName",
														"src": "8516:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8531:4:6",
														"nodeType": "YulTypedName",
														"src": "8531:4:6",
														"type": ""
													}
												],
												"src": "8365:419:6"
											},
											{
												"body": {
													"nativeSrc": "8944:288:6",
													"nodeType": "YulBlock",
													"src": "8944:288:6",
													"statements": [
														{
															"nativeSrc": "8954:26:6",
															"nodeType": "YulAssignment",
															"src": "8954:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8966:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8966:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8977:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8977:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8962:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8962:3:6"
																},
																"nativeSrc": "8962:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8962:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8954:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8954:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9034:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9034:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9047:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9047:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9058:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9058:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9043:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9043:3:6"
																		},
																		"nativeSrc": "9043:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9043:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8990:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8990:43:6"
																},
																"nativeSrc": "8990:71:6",
																"nodeType": "YulFunctionCall",
																"src": "8990:71:6"
															},
															"nativeSrc": "8990:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "8990:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9115:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9115:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9128:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9128:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9139:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9139:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9124:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9124:3:6"
																		},
																		"nativeSrc": "9124:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9124:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9071:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9071:43:6"
																},
																"nativeSrc": "9071:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9071:72:6"
															},
															"nativeSrc": "9071:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9071:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9197:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9197:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9210:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9210:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9221:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9221:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9206:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9206:3:6"
																		},
																		"nativeSrc": "9206:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9206:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9153:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9153:43:6"
																},
																"nativeSrc": "9153:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9153:72:6"
															},
															"nativeSrc": "9153:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9153:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8790:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8900:9:6",
														"nodeType": "YulTypedName",
														"src": "8900:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8912:6:6",
														"nodeType": "YulTypedName",
														"src": "8912:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8920:6:6",
														"nodeType": "YulTypedName",
														"src": "8920:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8928:6:6",
														"nodeType": "YulTypedName",
														"src": "8928:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8939:4:6",
														"nodeType": "YulTypedName",
														"src": "8939:4:6",
														"type": ""
													}
												],
												"src": "8790:442:6"
											},
											{
												"body": {
													"nativeSrc": "9278:76:6",
													"nodeType": "YulBlock",
													"src": "9278:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "9332:16:6",
																"nodeType": "YulBlock",
																"src": "9332:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9341:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9341:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9344:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9344:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9334:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9334:6:6"
																			},
																			"nativeSrc": "9334:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9334:12:6"
																		},
																		"nativeSrc": "9334:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9334:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9301:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9301:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9323:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "9323:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9308:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "9308:14:6"
																				},
																				"nativeSrc": "9308:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9308:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9298:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "9298:2:6"
																		},
																		"nativeSrc": "9298:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9298:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9291:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9291:6:6"
																},
																"nativeSrc": "9291:40:6",
																"nodeType": "YulFunctionCall",
																"src": "9291:40:6"
															},
															"nativeSrc": "9288:60:6",
															"nodeType": "YulIf",
															"src": "9288:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9238:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9271:5:6",
														"nodeType": "YulTypedName",
														"src": "9271:5:6",
														"type": ""
													}
												],
												"src": "9238:116:6"
											},
											{
												"body": {
													"nativeSrc": "9420:77:6",
													"nodeType": "YulBlock",
													"src": "9420:77:6",
													"statements": [
														{
															"nativeSrc": "9430:22:6",
															"nodeType": "YulAssignment",
															"src": "9430:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9445:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9445:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9439:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9439:5:6"
																},
																"nativeSrc": "9439:13:6",
																"nodeType": "YulFunctionCall",
																"src": "9439:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9430:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9430:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9485:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9485:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9461:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "9461:23:6"
																},
																"nativeSrc": "9461:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9461:30:6"
															},
															"nativeSrc": "9461:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9461:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9360:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9398:6:6",
														"nodeType": "YulTypedName",
														"src": "9398:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9406:3:6",
														"nodeType": "YulTypedName",
														"src": "9406:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9414:5:6",
														"nodeType": "YulTypedName",
														"src": "9414:5:6",
														"type": ""
													}
												],
												"src": "9360:137:6"
											},
											{
												"body": {
													"nativeSrc": "9577:271:6",
													"nodeType": "YulBlock",
													"src": "9577:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "9623:83:6",
																"nodeType": "YulBlock",
																"src": "9623:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9625:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "9625:77:6"
																			},
																			"nativeSrc": "9625:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9625:79:6"
																		},
																		"nativeSrc": "9625:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9625:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9598:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9598:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9607:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9607:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9594:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9594:3:6"
																		},
																		"nativeSrc": "9594:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9594:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9619:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9619:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9590:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9590:3:6"
																},
																"nativeSrc": "9590:32:6",
																"nodeType": "YulFunctionCall",
																"src": "9590:32:6"
															},
															"nativeSrc": "9587:119:6",
															"nodeType": "YulIf",
															"src": "9587:119:6"
														},
														{
															"nativeSrc": "9716:125:6",
															"nodeType": "YulBlock",
															"src": "9716:125:6",
															"statements": [
																{
																	"nativeSrc": "9731:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9731:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9745:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9745:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9735:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9735:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9760:71:6",
																	"nodeType": "YulAssignment",
																	"src": "9760:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9803:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9803:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9814:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9814:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9799:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9799:3:6"
																				},
																				"nativeSrc": "9799:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9799:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9823:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9823:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9770:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "9770:28:6"
																		},
																		"nativeSrc": "9770:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9770:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9760:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9760:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9503:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9547:9:6",
														"nodeType": "YulTypedName",
														"src": "9547:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9558:7:6",
														"nodeType": "YulTypedName",
														"src": "9558:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9570:6:6",
														"nodeType": "YulTypedName",
														"src": "9570:6:6",
														"type": ""
													}
												],
												"src": "9503:345:6"
											},
											{
												"body": {
													"nativeSrc": "9882:152:6",
													"nodeType": "YulBlock",
													"src": "9882:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9899:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9899:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9902:77:6",
																		"nodeType": "YulLiteral",
																		"src": "9902:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9892:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9892:6:6"
																},
																"nativeSrc": "9892:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9892:88:6"
															},
															"nativeSrc": "9892:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "9892:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9996:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9996:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9999:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9999:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9989:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9989:6:6"
																},
																"nativeSrc": "9989:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9989:15:6"
															},
															"nativeSrc": "9989:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9989:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10020:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10020:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10023:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10023:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10013:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10013:6:6"
																},
																"nativeSrc": "10013:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10013:15:6"
															},
															"nativeSrc": "10013:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "10013:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9854:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9854:180:6"
											},
											{
												"body": {
													"nativeSrc": "10088:362:6",
													"nodeType": "YulBlock",
													"src": "10088:362:6",
													"statements": [
														{
															"nativeSrc": "10098:25:6",
															"nodeType": "YulAssignment",
															"src": "10098:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10121:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10121:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10103:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10103:17:6"
																},
																"nativeSrc": "10103:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10103:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10098:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10098:1:6"
																}
															]
														},
														{
															"nativeSrc": "10132:25:6",
															"nodeType": "YulAssignment",
															"src": "10132:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10155:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10155:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10137:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10137:17:6"
																},
																"nativeSrc": "10137:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10137:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10132:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10132:1:6"
																}
															]
														},
														{
															"nativeSrc": "10166:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "10166:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10189:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10189:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10192:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10192:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10185:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10185:3:6"
																},
																"nativeSrc": "10185:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10185:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10170:11:6",
																	"nodeType": "YulTypedName",
																	"src": "10170:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10203:41:6",
															"nodeType": "YulAssignment",
															"src": "10203:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10232:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "10232:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10214:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10214:17:6"
																},
																"nativeSrc": "10214:30:6",
																"nodeType": "YulFunctionCall",
																"src": "10214:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10203:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "10203:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10421:22:6",
																"nodeType": "YulBlock",
																"src": "10421:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10423:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10423:16:6"
																			},
																			"nativeSrc": "10423:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10423:18:6"
																		},
																		"nativeSrc": "10423:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10423:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10354:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "10354:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10347:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "10347:6:6"
																				},
																				"nativeSrc": "10347:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10347:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10377:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "10377:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10384:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "10384:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10393:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "10393:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10380:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "10380:3:6"
																						},
																						"nativeSrc": "10380:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "10380:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10374:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "10374:2:6"
																				},
																				"nativeSrc": "10374:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10374:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10327:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "10327:2:6"
																		},
																		"nativeSrc": "10327:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10327:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10307:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10307:6:6"
																},
																"nativeSrc": "10307:113:6",
																"nodeType": "YulFunctionCall",
																"src": "10307:113:6"
															},
															"nativeSrc": "10304:139:6",
															"nodeType": "YulIf",
															"src": "10304:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10040:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10071:1:6",
														"nodeType": "YulTypedName",
														"src": "10071:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10074:1:6",
														"nodeType": "YulTypedName",
														"src": "10074:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10080:7:6",
														"nodeType": "YulTypedName",
														"src": "10080:7:6",
														"type": ""
													}
												],
												"src": "10040:410:6"
											},
											{
												"body": {
													"nativeSrc": "10484:152:6",
													"nodeType": "YulBlock",
													"src": "10484:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10501:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10501:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10504:77:6",
																		"nodeType": "YulLiteral",
																		"src": "10504:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10494:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10494:6:6"
																},
																"nativeSrc": "10494:88:6",
																"nodeType": "YulFunctionCall",
																"src": "10494:88:6"
															},
															"nativeSrc": "10494:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "10494:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10598:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10598:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10601:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10601:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10591:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10591:6:6"
																},
																"nativeSrc": "10591:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10591:15:6"
															},
															"nativeSrc": "10591:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "10591:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10622:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10622:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10625:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10625:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10615:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10615:6:6"
																},
																"nativeSrc": "10615:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10615:15:6"
															},
															"nativeSrc": "10615:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "10615:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10456:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "10456:180:6"
											},
											{
												"body": {
													"nativeSrc": "10684:143:6",
													"nodeType": "YulBlock",
													"src": "10684:143:6",
													"statements": [
														{
															"nativeSrc": "10694:25:6",
															"nodeType": "YulAssignment",
															"src": "10694:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10717:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10717:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10699:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10699:17:6"
																},
																"nativeSrc": "10699:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10699:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10694:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10694:1:6"
																}
															]
														},
														{
															"nativeSrc": "10728:25:6",
															"nodeType": "YulAssignment",
															"src": "10728:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10751:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10751:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10733:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10733:17:6"
																},
																"nativeSrc": "10733:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10733:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10728:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10728:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10775:22:6",
																"nodeType": "YulBlock",
																"src": "10775:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10777:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10777:16:6"
																			},
																			"nativeSrc": "10777:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10777:18:6"
																		},
																		"nativeSrc": "10777:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10777:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10772:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10772:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10765:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10765:6:6"
																},
																"nativeSrc": "10765:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10765:9:6"
															},
															"nativeSrc": "10762:35:6",
															"nodeType": "YulIf",
															"src": "10762:35:6"
														},
														{
															"nativeSrc": "10807:14:6",
															"nodeType": "YulAssignment",
															"src": "10807:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10816:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10816:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10819:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10819:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10812:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10812:3:6"
																},
																"nativeSrc": "10812:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10812:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10807:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10807:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10642:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10673:1:6",
														"nodeType": "YulTypedName",
														"src": "10673:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10676:1:6",
														"nodeType": "YulTypedName",
														"src": "10676:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10682:1:6",
														"nodeType": "YulTypedName",
														"src": "10682:1:6",
														"type": ""
													}
												],
												"src": "10642:185:6"
											},
											{
												"body": {
													"nativeSrc": "10877:147:6",
													"nodeType": "YulBlock",
													"src": "10877:147:6",
													"statements": [
														{
															"nativeSrc": "10887:25:6",
															"nodeType": "YulAssignment",
															"src": "10887:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10910:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10910:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10892:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10892:17:6"
																},
																"nativeSrc": "10892:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10892:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10887:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10887:1:6"
																}
															]
														},
														{
															"nativeSrc": "10921:25:6",
															"nodeType": "YulAssignment",
															"src": "10921:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10944:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10944:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10926:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10926:17:6"
																},
																"nativeSrc": "10926:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10926:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10921:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10921:1:6"
																}
															]
														},
														{
															"nativeSrc": "10955:16:6",
															"nodeType": "YulAssignment",
															"src": "10955:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10966:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10966:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10969:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10969:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10962:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10962:3:6"
																},
																"nativeSrc": "10962:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10962:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10955:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10955:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10995:22:6",
																"nodeType": "YulBlock",
																"src": "10995:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10997:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10997:16:6"
																			},
																			"nativeSrc": "10997:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10997:18:6"
																		},
																		"nativeSrc": "10997:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10997:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10987:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10987:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10990:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10990:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10984:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10984:2:6"
																},
																"nativeSrc": "10984:10:6",
																"nodeType": "YulFunctionCall",
																"src": "10984:10:6"
															},
															"nativeSrc": "10981:36:6",
															"nodeType": "YulIf",
															"src": "10981:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10833:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10864:1:6",
														"nodeType": "YulTypedName",
														"src": "10864:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10867:1:6",
														"nodeType": "YulTypedName",
														"src": "10867:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10873:3:6",
														"nodeType": "YulTypedName",
														"src": "10873:3:6",
														"type": ""
													}
												],
												"src": "10833:191:6"
											},
											{
												"body": {
													"nativeSrc": "11184:288:6",
													"nodeType": "YulBlock",
													"src": "11184:288:6",
													"statements": [
														{
															"nativeSrc": "11194:26:6",
															"nodeType": "YulAssignment",
															"src": "11194:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11206:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11206:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11217:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11217:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11202:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11202:3:6"
																},
																"nativeSrc": "11202:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11202:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11194:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11194:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11274:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11274:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11287:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11287:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11298:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11298:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11283:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11283:3:6"
																		},
																		"nativeSrc": "11283:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11283:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11230:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11230:43:6"
																},
																"nativeSrc": "11230:71:6",
																"nodeType": "YulFunctionCall",
																"src": "11230:71:6"
															},
															"nativeSrc": "11230:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "11230:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11355:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11355:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11368:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11368:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11379:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11379:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11364:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11364:3:6"
																		},
																		"nativeSrc": "11364:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11364:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11311:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11311:43:6"
																},
																"nativeSrc": "11311:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11311:72:6"
															},
															"nativeSrc": "11311:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11311:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11437:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11437:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11450:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11450:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11461:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11461:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11446:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11446:3:6"
																		},
																		"nativeSrc": "11446:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11446:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11393:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11393:43:6"
																},
																"nativeSrc": "11393:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11393:72:6"
															},
															"nativeSrc": "11393:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11393:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11030:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11140:9:6",
														"nodeType": "YulTypedName",
														"src": "11140:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11152:6:6",
														"nodeType": "YulTypedName",
														"src": "11152:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11160:6:6",
														"nodeType": "YulTypedName",
														"src": "11160:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11168:6:6",
														"nodeType": "YulTypedName",
														"src": "11168:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11179:4:6",
														"nodeType": "YulTypedName",
														"src": "11179:4:6",
														"type": ""
													}
												],
												"src": "11030:442:6"
											},
											{
												"body": {
													"nativeSrc": "11632:288:6",
													"nodeType": "YulBlock",
													"src": "11632:288:6",
													"statements": [
														{
															"nativeSrc": "11642:26:6",
															"nodeType": "YulAssignment",
															"src": "11642:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11654:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11654:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11665:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11665:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11650:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11650:3:6"
																},
																"nativeSrc": "11650:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11650:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11642:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11642:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11722:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11722:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11735:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11735:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11746:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11746:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11731:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11731:3:6"
																		},
																		"nativeSrc": "11731:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11731:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11678:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11678:43:6"
																},
																"nativeSrc": "11678:71:6",
																"nodeType": "YulFunctionCall",
																"src": "11678:71:6"
															},
															"nativeSrc": "11678:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "11678:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11803:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11803:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11816:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11816:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11827:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11827:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11812:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11812:3:6"
																		},
																		"nativeSrc": "11812:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11812:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11759:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11759:43:6"
																},
																"nativeSrc": "11759:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11759:72:6"
															},
															"nativeSrc": "11759:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11759:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11885:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11885:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11898:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11898:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11909:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11909:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11894:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11894:3:6"
																		},
																		"nativeSrc": "11894:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11894:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11841:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11841:43:6"
																},
																"nativeSrc": "11841:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11841:72:6"
															},
															"nativeSrc": "11841:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11841:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11478:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11588:9:6",
														"nodeType": "YulTypedName",
														"src": "11588:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11600:6:6",
														"nodeType": "YulTypedName",
														"src": "11600:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11608:6:6",
														"nodeType": "YulTypedName",
														"src": "11608:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11616:6:6",
														"nodeType": "YulTypedName",
														"src": "11616:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11627:4:6",
														"nodeType": "YulTypedName",
														"src": "11627:4:6",
														"type": ""
													}
												],
												"src": "11478:442:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$729_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$729_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amounts must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100f3575f3560e01c80635f64b55b116100955780639cd441da116100645780639cd441da14610277578063a9059cbb14610293578063dc5fa6c5146102c3578063dd62ed3e146102e1576100f3565b80635f64b55b146101ed57806370a082311461020b5780638da5cb5b1461023b57806395d89b4114610259576100f3565b806318160ddd116100d157806318160ddd1461016357806319e36f3b1461018157806323b872dd1461019f578063313ce567146101cf576100f3565b806306fdde03146100f7578063095ea7b3146101155780630fc63d1014610145575b5f80fd5b6100ff610311565b60405161010c9190610f89565b60405180910390f35b61012f600480360381019061012a919061103a565b6103a1565b60405161013c9190611092565b60405180910390f35b61014d6103c3565b60405161015a9190611106565b60405180910390f35b61016b6103e8565b604051610178919061112e565b60405180910390f35b6101896103f1565b604051610196919061112e565b60405180910390f35b6101b960048036038101906101b49190611147565b6103f7565b6040516101c69190611092565b60405180910390f35b6101d7610425565b6040516101e491906111b2565b60405180910390f35b6101f561042d565b6040516102029190611106565b60405180910390f35b610225600480360381019061022091906111cb565b610452565b604051610232919061112e565b60405180910390f35b610243610497565b6040516102509190611205565b60405180910390f35b6102616104bc565b60405161026e9190610f89565b60405180910390f35b610291600480360381019061028c919061121e565b61054c565b005b6102ad60048036038101906102a8919061103a565b6107dd565b6040516102ba9190611092565b60405180910390f35b6102cb6107ff565b6040516102d8919061112e565b60405180910390f35b6102fb60048036038101906102f6919061125c565b610805565b604051610308919061112e565b60405180910390f35b606060038054610320906112c7565b80601f016020809104026020016040519081016040528092919081815260200182805461034c906112c7565b80156103975780601f1061036e57610100808354040283529160200191610397565b820191905f5260205f20905b81548152906001019060200180831161037a57829003601f168201915b5050505050905090565b5f806103ab610887565b90506103b881858561088e565b600191505092915050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600254905090565b60085481565b5f80610401610887565b905061040e8582856108a0565b610419858585610933565b60019150509392505050565b5f6012905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600480546104cb906112c7565b80601f01602080910402602001604051908101604052809291908181526020018280546104f7906112c7565b80156105425780601f1061051957610100808354040283529160200191610542565b820191905f5260205f20905b81548152906001019060200180831161052557829003601f168201915b5050505050905090565b5f8211801561055a57505f81115b610599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059090611341565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016105f79392919061135f565b6020604051808303815f875af1158015610613573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061063791906113be565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016106969392919061135f565b6020604051808303815f875af11580156106b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106d691906113be565b505f806106e16103e8565b03610701576106fa82846106f59190611416565b610a23565b905061074c565b61074960075461070f6103e8565b8561071a9190611416565b6107249190611484565b60085461072f6103e8565b8561073a9190611416565b6107449190611484565b610a9a565b90505b6107563382610ab2565b8260075f82825461076791906114b4565b925050819055508160085f82825461077f91906114b4565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e8484846040516107d0939291906114e7565b60405180910390a2505050565b5f806107e7610887565b90506107f4818585610933565b600191505092915050565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61089b8383836001610b31565b505050565b5f6108ab8484610805565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561092d578181101561091e578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109159392919061151c565b60405180910390fd5b61092c84848484035f610b31565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109a3575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161099a9190611205565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a13575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a0a9190611205565b60405180910390fd5b610a1e838383610d00565b505050565b5f6003821115610a88578190505f6001600284610a409190611484565b610a4a91906114b4565b90505b81811015610a82578091506002818285610a679190611484565b610a7191906114b4565b610a7b9190611484565b9050610a4d565b50610a95565b5f8214610a9457600190505b5b919050565b5f818310610aa85781610aaa565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b22575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b199190611205565b60405180910390fd5b610b2d5f8383610d00565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ba1575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b989190611205565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c11575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c089190611205565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610cfa578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cf1919061112e565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d50578060025f828254610d4491906114b4565b92505081905550610e1e565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610dd9578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610dd09392919061151c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e65578060025f8282540392505081905550610eaf565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f0c919061112e565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610f5b82610f19565b610f658185610f23565b9350610f75818560208601610f33565b610f7e81610f41565b840191505092915050565b5f6020820190508181035f830152610fa18184610f51565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fd682610fad565b9050919050565b610fe681610fcc565b8114610ff0575f80fd5b50565b5f8135905061100181610fdd565b92915050565b5f819050919050565b61101981611007565b8114611023575f80fd5b50565b5f8135905061103481611010565b92915050565b5f80604083850312156110505761104f610fa9565b5b5f61105d85828601610ff3565b925050602061106e85828601611026565b9150509250929050565b5f8115159050919050565b61108c81611078565b82525050565b5f6020820190506110a55f830184611083565b92915050565b5f819050919050565b5f6110ce6110c96110c484610fad565b6110ab565b610fad565b9050919050565b5f6110df826110b4565b9050919050565b5f6110f0826110d5565b9050919050565b611100816110e6565b82525050565b5f6020820190506111195f8301846110f7565b92915050565b61112881611007565b82525050565b5f6020820190506111415f83018461111f565b92915050565b5f805f6060848603121561115e5761115d610fa9565b5b5f61116b86828701610ff3565b935050602061117c86828701610ff3565b925050604061118d86828701611026565b9150509250925092565b5f60ff82169050919050565b6111ac81611197565b82525050565b5f6020820190506111c55f8301846111a3565b92915050565b5f602082840312156111e0576111df610fa9565b5b5f6111ed84828501610ff3565b91505092915050565b6111ff81610fcc565b82525050565b5f6020820190506112185f8301846111f6565b92915050565b5f806040838503121561123457611233610fa9565b5b5f61124185828601611026565b925050602061125285828601611026565b9150509250929050565b5f806040838503121561127257611271610fa9565b5b5f61127f85828601610ff3565b925050602061129085828601610ff3565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806112de57607f821691505b6020821081036112f1576112f061129a565b5b50919050565b7f416d6f756e7473206d757374206265203e2030000000000000000000000000005f82015250565b5f61132b601383610f23565b9150611336826112f7565b602082019050919050565b5f6020820190508181035f8301526113588161131f565b9050919050565b5f6060820190506113725f8301866111f6565b61137f60208301856111f6565b61138c604083018461111f565b949350505050565b61139d81611078565b81146113a7575f80fd5b50565b5f815190506113b881611394565b92915050565b5f602082840312156113d3576113d2610fa9565b5b5f6113e0848285016113aa565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61142082611007565b915061142b83611007565b925082820261143981611007565b915082820484148315176114505761144f6113e9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61148e82611007565b915061149983611007565b9250826114a9576114a8611457565b5b828204905092915050565b5f6114be82611007565b91506114c983611007565b92508282019050808211156114e1576114e06113e9565b5b92915050565b5f6060820190506114fa5f83018661111f565b611507602083018561111f565b611514604083018461111f565b949350505050565b5f60608201905061152f5f8301866111f6565b61153c602083018561111f565b611549604083018461111f565b94935050505056fea26469706673582212208a570aee081d82b4c2b429f36153468d3dead84e42c973baa2fc5f10bac8e20264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F64B55B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9CD441DA GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E1 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x259 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x11B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x320 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34C SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x397 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x397 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3AB PUSH2 0x887 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B8 DUP2 DUP6 DUP6 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x401 PUSH2 0x887 JUMP JUMPDEST SWAP1 POP PUSH2 0x40E DUP6 DUP3 DUP6 PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x419 DUP6 DUP6 DUP6 PUSH2 0x933 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CB SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F7 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x542 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x519 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x542 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x525 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x55A JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x590 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x135F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x613 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x13BE JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x696 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x135F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x13BE JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0x6E1 PUSH2 0x3E8 JUMP JUMPDEST SUB PUSH2 0x701 JUMPI PUSH2 0x6FA DUP3 DUP5 PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0xA23 JUMP JUMPDEST SWAP1 POP PUSH2 0x74C JUMP JUMPDEST PUSH2 0x749 PUSH1 0x7 SLOAD PUSH2 0x70F PUSH2 0x3E8 JUMP JUMPDEST DUP6 PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x72F PUSH2 0x3E8 JUMP JUMPDEST DUP6 PUSH2 0x73A SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xA9A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x756 CALLER DUP3 PUSH2 0xAB2 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x767 SWAP2 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x77F SWAP2 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7E7 PUSH2 0x887 JUMP JUMPDEST SWAP1 POP PUSH2 0x7F4 DUP2 DUP6 DUP6 PUSH2 0x933 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x89B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB31 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8AB DUP5 DUP5 PUSH2 0x805 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x92D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x91E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x915 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x92C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xB31 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99A SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA13 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0A SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1E DUP4 DUP4 DUP4 PUSH2 0xD00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0xA88 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0xA40 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xA4A SWAP2 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA82 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0xA67 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST SWAP1 POP PUSH2 0xA4D JUMP JUMPDEST POP PUSH2 0xA95 JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0xA94 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0xAA8 JUMPI DUP2 PUSH2 0xAAA JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB22 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB19 SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB2D PUSH0 DUP4 DUP4 PUSH2 0xD00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC11 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC08 SWAP2 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCFA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD50 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD44 SWAP2 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE1E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDD9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE65 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEAF JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF0C SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF5B DUP3 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0xF65 DUP2 DUP6 PUSH2 0xF23 JUMP JUMPDEST SWAP4 POP PUSH2 0xF75 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF33 JUMP JUMPDEST PUSH2 0xF7E DUP2 PUSH2 0xF41 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFA1 DUP2 DUP5 PUSH2 0xF51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFD6 DUP3 PUSH2 0xFAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE6 DUP2 PUSH2 0xFCC JUMP JUMPDEST DUP2 EQ PUSH2 0xFF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1001 DUP2 PUSH2 0xFDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1019 DUP2 PUSH2 0x1007 JUMP JUMPDEST DUP2 EQ PUSH2 0x1023 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1034 DUP2 PUSH2 0x1010 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1050 JUMPI PUSH2 0x104F PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x105D DUP6 DUP3 DUP7 ADD PUSH2 0xFF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x106E DUP6 DUP3 DUP7 ADD PUSH2 0x1026 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x108C DUP2 PUSH2 0x1078 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1083 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10CE PUSH2 0x10C9 PUSH2 0x10C4 DUP5 PUSH2 0xFAD JUMP JUMPDEST PUSH2 0x10AB JUMP JUMPDEST PUSH2 0xFAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10DF DUP3 PUSH2 0x10B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10F0 DUP3 PUSH2 0x10D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1100 DUP2 PUSH2 0x10E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1119 PUSH0 DUP4 ADD DUP5 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1128 DUP2 PUSH2 0x1007 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1141 PUSH0 DUP4 ADD DUP5 PUSH2 0x111F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x115E JUMPI PUSH2 0x115D PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x116B DUP7 DUP3 DUP8 ADD PUSH2 0xFF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x117C DUP7 DUP3 DUP8 ADD PUSH2 0xFF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x118D DUP7 DUP3 DUP8 ADD PUSH2 0x1026 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AC DUP2 PUSH2 0x1197 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11C5 PUSH0 DUP4 ADD DUP5 PUSH2 0x11A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E0 JUMPI PUSH2 0x11DF PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11ED DUP5 DUP3 DUP6 ADD PUSH2 0xFF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11FF DUP2 PUSH2 0xFCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1218 PUSH0 DUP4 ADD DUP5 PUSH2 0x11F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1234 JUMPI PUSH2 0x1233 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1241 DUP6 DUP3 DUP7 ADD PUSH2 0x1026 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1252 DUP6 DUP3 DUP7 ADD PUSH2 0x1026 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1272 JUMPI PUSH2 0x1271 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x127F DUP6 DUP3 DUP7 ADD PUSH2 0xFF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1290 DUP6 DUP3 DUP7 ADD PUSH2 0xFF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12DE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12F1 JUMPI PUSH2 0x12F0 PUSH2 0x129A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E7473206D757374206265203E203000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x132B PUSH1 0x13 DUP4 PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1336 DUP3 PUSH2 0x12F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1358 DUP2 PUSH2 0x131F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1372 PUSH0 DUP4 ADD DUP7 PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x137F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x138C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x111F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x139D DUP2 PUSH2 0x1078 JUMP JUMPDEST DUP2 EQ PUSH2 0x13A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x13B8 DUP2 PUSH2 0x1394 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D3 JUMPI PUSH2 0x13D2 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13E0 DUP5 DUP3 DUP6 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1420 DUP3 PUSH2 0x1007 JUMP JUMPDEST SWAP2 POP PUSH2 0x142B DUP4 PUSH2 0x1007 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1439 DUP2 PUSH2 0x1007 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1450 JUMPI PUSH2 0x144F PUSH2 0x13E9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x148E DUP3 PUSH2 0x1007 JUMP JUMPDEST SWAP2 POP PUSH2 0x1499 DUP4 PUSH2 0x1007 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14A9 JUMPI PUSH2 0x14A8 PUSH2 0x1457 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14BE DUP3 PUSH2 0x1007 JUMP JUMPDEST SWAP2 POP PUSH2 0x14C9 DUP4 PUSH2 0x1007 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14E1 JUMPI PUSH2 0x14E0 PUSH2 0x13E9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x14FA PUSH0 DUP4 ADD DUP7 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x1507 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x1514 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x111F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x152F PUSH0 DUP4 ADD DUP7 PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x153C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x1549 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x111F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 JUMPI EXP 0xEE ADDMOD SAR DUP3 0xB4 0xC2 0xB4 0x29 RETURN PUSH2 0x5346 DUP14 RETURNDATASIZE 0xEA 0xD8 0x4E TIMESTAMP 0xC9 PUSH20 0xBAA2FC5F10BAC8E20264736F6C634300081A0033 ",
							"sourceMap": "180:3733:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;230:20:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;624:23:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;257:20:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;656:20:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2488:1392:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3296:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;594:23:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;230:20:5:-;;;;;;;;;;;;;:::o;2830:97:1:-;2882:7;2908:12;;2901:19;;2830:97;:::o;624:23:5:-;;;;:::o;4757:244:1:-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;257:20:5:-;;;;;;;;;;;;;:::o;2985:116:1:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;656:20:5:-;;;;;;;;;;;;;:::o;1962:93:1:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;2488:1392:5:-;2636:1;2626:7;:11;:26;;;;;2651:1;2641:7;:11;2626:26;2618:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2756:6;;;;;;;;;;;:19;;;2776:10;2796:4;2803:7;2756:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2818:6;;;;;;;;;;;:19;;;2838:10;2858:4;2865:7;2818:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2954:17;3071:1;3054:13;:11;:13::i;:::-;:18;3050:457;;3156:23;3171:7;3161;:17;;;;:::i;:::-;3156:4;:23::i;:::-;3144:35;;3050:457;;;3300:199;3344:8;;3328:13;:11;:13::i;:::-;3318:7;:23;;;;:::i;:::-;:34;;;;:::i;:::-;3436:8;;3420:13;:11;:13::i;:::-;3410:7;:23;;;;:::i;:::-;:34;;;;:::i;:::-;3300:3;:199::i;:::-;3288:211;;3050:457;3586:28;3592:10;3604:9;3586:5;:28::i;:::-;3722:7;3710:8;;:19;;;;;;;:::i;:::-;;;;;;;;3748:7;3736:8;;:19;;;;;;;:::i;:::-;;;;;;;;3836:10;3821:55;;;3848:7;3857;3866:9;3821:55;;;;;;;;:::i;:::-;;;;;;;;2553:1327;2488:1392;;:::o;3296:178:1:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;594:23:5:-;;;;:::o;3532:140:1:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8707:128:1:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;1677:731:5:-;1725:9;1826:1;1822;:5;1818:525;;;1891:1;1887:5;;1948:9;1968:1;1964;1960;:5;;;;:::i;:::-;:9;;;;:::i;:::-;1948:21;;2089:147;2100:1;2096;:5;2089:147;;;2122:1;2118:5;;2223:1;2218;2214;2210;:5;;;;:::i;:::-;:9;;;;:::i;:::-;2209:15;;;;:::i;:::-;2205:19;;2089:147;;;1829:414;1818:525;;;2316:1;2311;:6;2307:36;;2334:1;2330:5;;2307:36;1818:525;1677:731;;;:::o;1431:164::-;1489:7;1582:1;1578;:5;:13;;1590:1;1578:13;;;1586:1;1578:13;1571:20;;1431:164;;;;:::o;7439:208:1:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:60::-;3367:3;3388:5;3381:12;;3339:60;;;:::o;3405:142::-;3455:9;3488:53;3506:34;3515:24;3533:5;3515:24;:::i;:::-;3506:34;:::i;:::-;3488:53;:::i;:::-;3475:66;;3405:142;;;:::o;3553:126::-;3603:9;3636:37;3667:5;3636:37;:::i;:::-;3623:50;;3553:126;;;:::o;3685:140::-;3749:9;3782:37;3813:5;3782:37;:::i;:::-;3769:50;;3685:140;;;:::o;3831:159::-;3932:51;3977:5;3932:51;:::i;:::-;3927:3;3920:64;3831:159;;:::o;3996:250::-;4103:4;4141:2;4130:9;4126:18;4118:26;;4154:85;4236:1;4225:9;4221:17;4212:6;4154:85;:::i;:::-;3996:250;;;;:::o;4252:118::-;4339:24;4357:5;4339:24;:::i;:::-;4334:3;4327:37;4252:118;;:::o;4376:222::-;4469:4;4507:2;4496:9;4492:18;4484:26;;4520:71;4588:1;4577:9;4573:17;4564:6;4520:71;:::i;:::-;4376:222;;;;:::o;4604:619::-;4681:6;4689;4697;4746:2;4734:9;4725:7;4721:23;4717:32;4714:119;;;4752:79;;:::i;:::-;4714:119;4872:1;4897:53;4942:7;4933:6;4922:9;4918:22;4897:53;:::i;:::-;4887:63;;4843:117;4999:2;5025:53;5070:7;5061:6;5050:9;5046:22;5025:53;:::i;:::-;5015:63;;4970:118;5127:2;5153:53;5198:7;5189:6;5178:9;5174:22;5153:53;:::i;:::-;5143:63;;5098:118;4604:619;;;;;:::o;5229:86::-;5264:7;5304:4;5297:5;5293:16;5282:27;;5229:86;;;:::o;5321:112::-;5404:22;5420:5;5404:22;:::i;:::-;5399:3;5392:35;5321:112;;:::o;5439:214::-;5528:4;5566:2;5555:9;5551:18;5543:26;;5579:67;5643:1;5632:9;5628:17;5619:6;5579:67;:::i;:::-;5439:214;;;;:::o;5659:329::-;5718:6;5767:2;5755:9;5746:7;5742:23;5738:32;5735:119;;;5773:79;;:::i;:::-;5735:119;5893:1;5918:53;5963:7;5954:6;5943:9;5939:22;5918:53;:::i;:::-;5908:63;;5864:117;5659:329;;;;:::o;5994:118::-;6081:24;6099:5;6081:24;:::i;:::-;6076:3;6069:37;5994:118;;:::o;6118:222::-;6211:4;6249:2;6238:9;6234:18;6226:26;;6262:71;6330:1;6319:9;6315:17;6306:6;6262:71;:::i;:::-;6118:222;;;;:::o;6346:474::-;6414:6;6422;6471:2;6459:9;6450:7;6446:23;6442:32;6439:119;;;6477:79;;:::i;:::-;6439:119;6597:1;6622:53;6667:7;6658:6;6647:9;6643:22;6622:53;:::i;:::-;6612:63;;6568:117;6724:2;6750:53;6795:7;6786:6;6775:9;6771:22;6750:53;:::i;:::-;6740:63;;6695:118;6346:474;;;;;:::o;6826:::-;6894:6;6902;6951:2;6939:9;6930:7;6926:23;6922:32;6919:119;;;6957:79;;:::i;:::-;6919:119;7077:1;7102:53;7147:7;7138:6;7127:9;7123:22;7102:53;:::i;:::-;7092:63;;7048:117;7204:2;7230:53;7275:7;7266:6;7255:9;7251:22;7230:53;:::i;:::-;7220:63;;7175:118;6826:474;;;;;:::o;7306:180::-;7354:77;7351:1;7344:88;7451:4;7448:1;7441:15;7475:4;7472:1;7465:15;7492:320;7536:6;7573:1;7567:4;7563:12;7553:22;;7620:1;7614:4;7610:12;7641:18;7631:81;;7697:4;7689:6;7685:17;7675:27;;7631:81;7759:2;7751:6;7748:14;7728:18;7725:38;7722:84;;7778:18;;:::i;:::-;7722:84;7543:269;7492:320;;;:::o;7818:169::-;7958:21;7954:1;7946:6;7942:14;7935:45;7818:169;:::o;7993:366::-;8135:3;8156:67;8220:2;8215:3;8156:67;:::i;:::-;8149:74;;8232:93;8321:3;8232:93;:::i;:::-;8350:2;8345:3;8341:12;8334:19;;7993:366;;;:::o;8365:419::-;8531:4;8569:2;8558:9;8554:18;8546:26;;8618:9;8612:4;8608:20;8604:1;8593:9;8589:17;8582:47;8646:131;8772:4;8646:131;:::i;:::-;8638:139;;8365:419;;;:::o;8790:442::-;8939:4;8977:2;8966:9;8962:18;8954:26;;8990:71;9058:1;9047:9;9043:17;9034:6;8990:71;:::i;:::-;9071:72;9139:2;9128:9;9124:18;9115:6;9071:72;:::i;:::-;9153;9221:2;9210:9;9206:18;9197:6;9153:72;:::i;:::-;8790:442;;;;;;:::o;9238:116::-;9308:21;9323:5;9308:21;:::i;:::-;9301:5;9298:32;9288:60;;9344:1;9341;9334:12;9288:60;9238:116;:::o;9360:137::-;9414:5;9445:6;9439:13;9430:22;;9461:30;9485:5;9461:30;:::i;:::-;9360:137;;;;:::o;9503:345::-;9570:6;9619:2;9607:9;9598:7;9594:23;9590:32;9587:119;;;9625:79;;:::i;:::-;9587:119;9745:1;9770:61;9823:7;9814:6;9803:9;9799:22;9770:61;:::i;:::-;9760:71;;9716:125;9503:345;;;;:::o;9854:180::-;9902:77;9899:1;9892:88;9999:4;9996:1;9989:15;10023:4;10020:1;10013:15;10040:410;10080:7;10103:20;10121:1;10103:20;:::i;:::-;10098:25;;10137:20;10155:1;10137:20;:::i;:::-;10132:25;;10192:1;10189;10185:9;10214:30;10232:11;10214:30;:::i;:::-;10203:41;;10393:1;10384:7;10380:15;10377:1;10374:22;10354:1;10347:9;10327:83;10304:139;;10423:18;;:::i;:::-;10304:139;10088:362;10040:410;;;;:::o;10456:180::-;10504:77;10501:1;10494:88;10601:4;10598:1;10591:15;10625:4;10622:1;10615:15;10642:185;10682:1;10699:20;10717:1;10699:20;:::i;:::-;10694:25;;10733:20;10751:1;10733:20;:::i;:::-;10728:25;;10772:1;10762:35;;10777:18;;:::i;:::-;10762:35;10819:1;10816;10812:9;10807:14;;10642:185;;;;:::o;10833:191::-;10873:3;10892:20;10910:1;10892:20;:::i;:::-;10887:25;;10926:20;10944:1;10926:20;:::i;:::-;10921:25;;10969:1;10966;10962:9;10955:16;;10990:3;10987:1;10984:10;10981:36;;;10997:18;;:::i;:::-;10981:36;10833:191;;;;:::o;11030:442::-;11179:4;11217:2;11206:9;11202:18;11194:26;;11230:71;11298:1;11287:9;11283:17;11274:6;11230:71;:::i;:::-;11311:72;11379:2;11368:9;11364:18;11355:6;11311:72;:::i;:::-;11393;11461:2;11450:9;11446:18;11437:6;11393:72;:::i;:::-;11030:442;;;;;;:::o;11478:::-;11627:4;11665:2;11654:9;11650:18;11642:26;;11678:71;11746:1;11735:9;11731:17;11722:6;11678:71;:::i;:::-;11759:72;11827:2;11816:9;11812:18;11803:6;11759:72;:::i;:::-;11841;11909:2;11898:9;11894:18;11885:6;11841:72;:::i;:::-;11478:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1102200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"decimals()": "427",
								"name()": "infinite",
								"owner()": "2575",
								"reserveA()": "2491",
								"reserveB()": "2470",
								"symbol()": "infinite",
								"tokenA()": "infinite",
								"tokenB()": "infinite",
								"totalSupply()": "2455",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"min(uint256,uint256)": "63",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 180,
									"end": 3913,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 180,
									"end": 3913,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 180,
									"end": 3913,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1176,
									"end": 1373,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1272,
									"end": 1277,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 1286,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1316,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1293,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1317,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1338,
									"end": 1345,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1328,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1328,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1346,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1359,
									"end": 1369,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1356,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1351,
									"end": 1356,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1369,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1373,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 180,
									"end": 3913,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 180,
									"end": 3913,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1067,
									"end": 1079,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1167,
									"end": 1172,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1163,
									"end": 1177,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1159,
									"end": 1187,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1091,
									"end": 1193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1247,
									"end": 1324,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1237,
									"end": 1325,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1334,
									"end": 1349,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1490,
									"end": 1494,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1468,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1456,
									"end": 1496,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1596,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1583,
									"end": 1605,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1580,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1547,
									"end": 1581,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1544,
									"end": 1606,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1609,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1428,
									"end": 1666,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1385,
									"end": 1666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1706,
									"end": 1712,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1733,
									"end": 1753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1790,
									"end": 1794,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1762,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1959,
									"end": 1977,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1951,
									"end": 1957,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1948,
									"end": 1978,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1981,
									"end": 1999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2019,
									"end": 2048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2097,
									"end": 2101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2093,
									"end": 2108,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1807,
									"end": 2115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2210,
									"end": 2216,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2205,
									"end": 2208,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2200,
									"end": 2203,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2217,
									"name": "MCOPY",
									"source": 6
								},
								{
									"begin": 2251,
									"end": 2252,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2242,
									"end": 2248,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2237,
									"end": 2240,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2233,
									"end": 2249,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2226,
									"end": 2253,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2121,
									"end": 2260,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2360,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2438,
									"end": 2444,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2396,
									"end": 2445,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2380,
									"end": 2446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2371,
									"end": 2446,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2371,
									"end": 2446,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2469,
									"end": 2475,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2467,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2455,
									"end": 2476,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2507,
									"end": 2511,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2500,
									"end": 2505,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2496,
									"end": 2512,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2545,
									"end": 2548,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2536,
									"end": 2542,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2531,
									"end": 2534,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2543,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2524,
									"end": 2549,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2552,
									"end": 2631,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2687,
									"end": 2693,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2682,
									"end": 2685,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 2680,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2642,
									"end": 2694,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2361,
									"end": 2700,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 2792,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2836,
									"end": 2839,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2829,
									"end": 2833,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2821,
									"end": 2827,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2817,
									"end": 2834,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2813,
									"end": 2840,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2844,
									"end": 2923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2948,
									"end": 2961,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3065,
									"end": 3068,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3057,
									"end": 3063,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3050,
									"end": 3054,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3042,
									"end": 3048,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3038,
									"end": 3055,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2979,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2970,
									"end": 3069,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2970,
									"end": 3069,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2793,
									"end": 3075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3198,
									"end": 3204,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3206,
									"end": 3212,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3214,
									"end": 3220,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3222,
									"end": 3228,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3259,
									"end": 3268,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3250,
									"end": 3257,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3246,
									"end": 3269,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3242,
									"end": 3275,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 3278,
									"end": 3357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3278,
									"end": 3357,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3239,
									"end": 3359,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3398,
									"end": 3399,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3423,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3479,
									"end": 3486,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3470,
									"end": 3476,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3459,
									"end": 3468,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3455,
									"end": 3477,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3423,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 3423,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3423,
									"end": 3487,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3423,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3413,
									"end": 3487,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3413,
									"end": 3487,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3369,
									"end": 3497,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3538,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3562,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 3618,
									"end": 3625,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3609,
									"end": 3615,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3598,
									"end": 3607,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3594,
									"end": 3616,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 3562,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3626,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 3562,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3552,
									"end": 3626,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3552,
									"end": 3626,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3507,
									"end": 3636,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3696,
									"end": 3698,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3685,
									"end": 3694,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3681,
									"end": 3699,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3675,
									"end": 3700,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3719,
									"end": 3725,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3746,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3713,
									"end": 3830,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3713,
									"end": 3830,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3713,
									"end": 3830,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3749,
									"end": 3828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3749,
									"end": 3828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 3749,
									"end": 3828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3749,
									"end": 3828,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3749,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3713,
									"end": 3830,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3713,
									"end": 3830,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3854,
									"end": 3928,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 3920,
									"end": 3927,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3911,
									"end": 3917,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3900,
									"end": 3909,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3896,
									"end": 3918,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3854,
									"end": 3928,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3854,
									"end": 3928,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3854,
									"end": 3928,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 3854,
									"end": 3928,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3844,
									"end": 3928,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3844,
									"end": 3928,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3646,
									"end": 3938,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3998,
									"end": 4000,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 3987,
									"end": 3996,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3983,
									"end": 4001,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3977,
									"end": 4002,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4029,
									"end": 4047,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4021,
									"end": 4027,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4018,
									"end": 4048,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4132,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4132,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4015,
									"end": 4132,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4051,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4051,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 4051,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4051,
									"end": 4130,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4051,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4132,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4015,
									"end": 4132,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4222,
									"end": 4229,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4213,
									"end": 4219,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4202,
									"end": 4211,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4198,
									"end": 4220,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4156,
									"end": 4230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4156,
									"end": 4230,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4146,
									"end": 4230,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4146,
									"end": 4230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3948,
									"end": 4240,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4247,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4305,
									"end": 4311,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4339,
									"end": 4344,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4333,
									"end": 4345,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4323,
									"end": 4345,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4323,
									"end": 4345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4253,
									"end": 4352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4253,
									"end": 4352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4358,
									"end": 4538,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 4358,
									"end": 4538,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4406,
									"end": 4483,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4403,
									"end": 4404,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4396,
									"end": 4484,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4503,
									"end": 4507,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 4500,
									"end": 4501,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4493,
									"end": 4508,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4527,
									"end": 4531,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4517,
									"end": 4532,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4588,
									"end": 4594,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4625,
									"end": 4626,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4619,
									"end": 4623,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4615,
									"end": 4627,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4605,
									"end": 4627,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4605,
									"end": 4627,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4672,
									"end": 4673,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4666,
									"end": 4670,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4662,
									"end": 4674,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4693,
									"end": 4711,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4749,
									"end": 4753,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 4741,
									"end": 4747,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4737,
									"end": 4754,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4727,
									"end": 4754,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4727,
									"end": 4754,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4683,
									"end": 4764,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4811,
									"end": 4813,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4803,
									"end": 4809,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4800,
									"end": 4814,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4780,
									"end": 4798,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4815,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 4830,
									"end": 4848,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 4830,
									"end": 4848,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 4774,
									"end": 4858,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4595,
									"end": 4864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4544,
									"end": 4864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4544,
									"end": 4864,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4919,
									"end": 4923,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4942,
									"end": 4945,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4934,
									"end": 4945,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4934,
									"end": 4945,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 4968,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4962,
									"end": 4963,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4955,
									"end": 4969,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4996,
									"end": 4997,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4986,
									"end": 5004,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4978,
									"end": 5004,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4978,
									"end": 5004,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4870,
									"end": 5011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4870,
									"end": 5011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5054,
									"end": 5060,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5101,
									"end": 5103,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5096,
									"end": 5098,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5089,
									"end": 5094,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5085,
									"end": 5099,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5081,
									"end": 5104,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5071,
									"end": 5104,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5071,
									"end": 5104,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5017,
									"end": 5110,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5017,
									"end": 5110,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5160,
									"end": 5168,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5210,
									"end": 5215,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5204,
									"end": 5208,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5200,
									"end": 5216,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 5179,
									"end": 5216,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5179,
									"end": 5216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5116,
									"end": 5223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5116,
									"end": 5223,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5298,
									"end": 5304,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5348,
									"end": 5349,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5336,
									"end": 5346,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5332,
									"end": 5350,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5401,
									"end": 5467,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5390,
									"end": 5399,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5371,
									"end": 5468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5371,
									"end": 5468,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5519,
									"end": 5527,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5508,
									"end": 5517,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5489,
									"end": 5528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5489,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5477,
									"end": 5528,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 5477,
									"end": 5528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5561,
									"end": 5565,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5557,
									"end": 5566,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5550,
									"end": 5555,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5546,
									"end": 5567,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5537,
									"end": 5567,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5537,
									"end": 5567,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5610,
									"end": 5614,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5600,
									"end": 5608,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5596,
									"end": 5615,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5586,
									"end": 5616,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5576,
									"end": 5616,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5576,
									"end": 5616,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5305,
									"end": 5622,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5305,
									"end": 5622,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5229,
									"end": 5622,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5229,
									"end": 5622,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5665,
									"end": 5672,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5694,
									"end": 5699,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5683,
									"end": 5699,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5683,
									"end": 5699,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5628,
									"end": 5705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5628,
									"end": 5705,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5739,
									"end": 5742,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5760,
									"end": 5765,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5753,
									"end": 5765,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5753,
									"end": 5765,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5711,
									"end": 5771,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5711,
									"end": 5771,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5827,
									"end": 5836,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 5905,
									"end": 5910,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5887,
									"end": 5911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 5887,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5878,
									"end": 5912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 5878,
									"end": 5912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5860,
									"end": 5913,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5860,
									"end": 5913,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5847,
									"end": 5913,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5847,
									"end": 5913,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5777,
									"end": 5919,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5777,
									"end": 5919,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5968,
									"end": 5971,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5989,
									"end": 5994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5982,
									"end": 5994,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5982,
									"end": 5994,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5925,
									"end": 6000,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5925,
									"end": 6000,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6147,
									"end": 6154,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 6116,
									"end": 6155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6116,
									"end": 6155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6250,
									"end": 6266,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 6226,
									"end": 6267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6226,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6218,
									"end": 6224,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6215,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6205,
									"end": 6216,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 6177,
									"end": 6268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6177,
									"end": 6268,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6171,
									"end": 6175,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6164,
									"end": 6269,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6082,
									"end": 6275,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6006,
									"end": 6275,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6006,
									"end": 6275,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6326,
									"end": 6329,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6281,
									"end": 6354,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6281,
									"end": 6354,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 6437,
									"end": 6469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6437,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 6536,
									"end": 6542,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6528,
									"end": 6534,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6478,
									"end": 6543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "tag",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 6478,
									"end": 6543,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6413,
									"end": 6549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6360,
									"end": 6549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6360,
									"end": 6549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6632,
									"end": 6635,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6625,
									"end": 6630,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6622,
									"end": 6636,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 6723,
									"end": 6724,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6721,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 6686,
									"end": 6725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "tag",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 6686,
									"end": 6725,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6659,
									"end": 6660,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6652,
									"end": 6657,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6639,
									"end": 6661,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6639,
									"end": 6661,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 6615,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6555,
									"end": 6741,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6555,
									"end": 6741,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6848,
									"end": 6850,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6843,
									"end": 6846,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6840,
									"end": 6851,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 6914,
									"end": 6919,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 6882,
									"end": 6920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 6882,
									"end": 6920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 6984,
									"end": 6994,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 6966,
									"end": 6995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 6966,
									"end": 6995,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6956,
									"end": 6964,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6952,
									"end": 6996,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7149,
									"end": 7151,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7137,
									"end": 7147,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7134,
									"end": 7152,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7170,
									"end": 7178,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7155,
									"end": 7178,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7155,
									"end": 7178,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 7131,
									"end": 7180,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 7267,
									"end": 7270,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 7249,
									"end": 7271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 7249,
									"end": 7271,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7239,
									"end": 7247,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7235,
									"end": 7272,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7222,
									"end": 7233,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 7193,
									"end": 7273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 7193,
									"end": 7273,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6852,
									"end": 7283,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6852,
									"end": 7283,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "tag",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 6837,
									"end": 7283,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6747,
									"end": 7290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6747,
									"end": 7290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7350,
									"end": 7358,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7400,
									"end": 7405,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7394,
									"end": 7398,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7390,
									"end": 7406,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 7369,
									"end": 7406,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7369,
									"end": 7406,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7296,
									"end": 7413,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7296,
									"end": 7413,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7463,
									"end": 7469,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7540,
									"end": 7546,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7532,
									"end": 7537,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7529,
									"end": 7530,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7525,
									"end": 7538,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 7496,
									"end": 7547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 7496,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7492,
									"end": 7548,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7577,
									"end": 7581,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7571,
									"end": 7575,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7567,
									"end": 7582,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7557,
									"end": 7582,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7557,
									"end": 7582,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7470,
									"end": 7588,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7588,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7588,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7669,
									"end": 7673,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 7840,
									"end": 7843,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7834,
									"end": 7838,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 7815,
									"end": 7844,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 7815,
									"end": 7844,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7807,
									"end": 7844,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7807,
									"end": 7844,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7877,
									"end": 7880,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7874,
									"end": 7875,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7870,
									"end": 7881,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7864,
									"end": 7868,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7861,
									"end": 7882,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 7882,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 7882,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7593,
									"end": 7888,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7593,
									"end": 7888,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 8043,
									"end": 8046,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 8010,
									"end": 8047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 8010,
									"end": 8047,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8112,
									"end": 8130,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8104,
									"end": 8110,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8101,
									"end": 8131,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 8134,
									"end": 8152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "tag",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 8134,
									"end": 8152,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "tag",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 8098,
									"end": 8154,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 8210,
									"end": 8214,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8204,
									"end": 8215,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 8178,
									"end": 8216,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "tag",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 8178,
									"end": 8216,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 8323,
									"end": 8329,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8315,
									"end": 8321,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 8263,
									"end": 8330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 8263,
									"end": 8330,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8357,
									"end": 8358,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8381,
									"end": 8385,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8368,
									"end": 8385,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8368,
									"end": 8385,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8413,
									"end": 8415,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8405,
									"end": 8411,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8402,
									"end": 8416,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8430,
									"end": 8431,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9087,
									"end": 9088,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9104,
									"end": 9110,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9153,
									"end": 9162,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9148,
									"end": 9151,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 9144,
									"end": 9163,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9138,
									"end": 9164,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9129,
									"end": 9164,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9129,
									"end": 9164,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "tag",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 9101,
									"end": 9178,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 9264,
									"end": 9270,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9257,
									"end": 9262,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 9204,
									"end": 9271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "tag",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 9204,
									"end": 9271,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9198,
									"end": 9202,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9191,
									"end": 9272,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9060,
									"end": 9282,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "tag",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 8425,
									"end": 9043,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8477,
									"end": 8481,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8473,
									"end": 8482,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 8465,
									"end": 8471,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8461,
									"end": 8483,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 8543,
									"end": 8547,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 8511,
									"end": 8548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "tag",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 8511,
									"end": 8548,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8570,
									"end": 8571,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "tag",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8598,
									"end": 8605,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8595,
									"end": 8596,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8592,
									"end": 8606,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8677,
									"end": 8686,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8672,
									"end": 8675,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8668,
									"end": 8687,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8662,
									"end": 8688,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8654,
									"end": 8660,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8647,
									"end": 8689,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8728,
									"end": 8729,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8720,
									"end": 8726,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8716,
									"end": 8730,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8706,
									"end": 8730,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8706,
									"end": 8730,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8775,
									"end": 8777,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8764,
									"end": 8773,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8760,
									"end": 8778,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8747,
									"end": 8778,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 8747,
									"end": 8778,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8621,
									"end": 8625,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8618,
									"end": 8619,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8614,
									"end": 8626,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8609,
									"end": 8626,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8609,
									"end": 8626,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "tag",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 8584,
									"end": 8792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8820,
									"end": 8826,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8811,
									"end": 8818,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8808,
									"end": 8827,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8878,
									"end": 8887,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8873,
									"end": 8876,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8869,
									"end": 8888,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8863,
									"end": 8889,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 8963,
									"end": 8967,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8955,
									"end": 8961,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8951,
									"end": 8968,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8940,
									"end": 8949,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 8921,
									"end": 8969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 8921,
									"end": 8969,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8913,
									"end": 8919,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8906,
									"end": 8970,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8828,
									"end": 8984,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 8805,
									"end": 8984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9030,
									"end": 9031,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9026,
									"end": 9027,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 9018,
									"end": 9024,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 9014,
									"end": 9028,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 9010,
									"end": 9032,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9004,
									"end": 9008,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8997,
									"end": 9033,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8432,
									"end": 9043,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "tag",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8395,
									"end": 9282,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7985,
									"end": 9288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7893,
									"end": 9288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7893,
									"end": 9288,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 180,
									"end": 3913,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 180,
									"end": 3913,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 180,
									"end": 3913,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 3913,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 180,
									"end": 3913,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 3913,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 3913,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 180,
									"end": 3913,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 3913,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a570aee081d82b4c2b429f36153468d3dead84e42c973baa2fc5f10bac8e20264736f6c634300081a0033",
									".code": [
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "5F64B55B"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "9CD441DA"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "9CD441DA"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "DC5FA6C5"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "5F64B55B"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "19E36F3B"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "FC63D10"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 3913,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 230,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 230,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 230,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 624,
											"end": 647,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 624,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 257,
											"end": 277,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 257,
											"end": 277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 257,
											"end": 277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 656,
											"end": 676,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 656,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 656,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2488,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2488,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 594,
											"end": 617,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 594,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 594,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 230,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 624,
											"end": 647,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 624,
											"end": 647,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 624,
											"end": 647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 277,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 257,
											"end": 277,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 257,
											"end": 277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 676,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 676,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 656,
											"end": 676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2633,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2637,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2651,
											"end": 2652,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2648,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2652,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2618,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2618,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2775,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2756,
											"end": 2775,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2775,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2776,
											"end": 2786,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2800,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2810,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2756,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2756,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2818,
											"end": 2837,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2838,
											"end": 2848,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 2862,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2872,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2818,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2818,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2818,
											"end": 2873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 2971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3072,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3054,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3054,
											"end": 3067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3067,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3054,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3171,
											"end": 3178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3168,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3161,
											"end": 3178,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3161,
											"end": 3178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3178,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3161,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3156,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3179,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3156,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3300,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3344,
											"end": 3352,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3344,
											"end": 3352,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3328,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3328,
											"end": 3341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3341,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3328,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3325,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3318,
											"end": 3341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3318,
											"end": 3341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3341,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3318,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3318,
											"end": 3352,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3318,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3352,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3318,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3444,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3436,
											"end": 3444,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3420,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3433,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3420,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3417,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3410,
											"end": 3433,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3433,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3410,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3433,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3410,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3410,
											"end": 3444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3300,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3300,
											"end": 3499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3300,
											"end": 3499,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3300,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3050,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3592,
											"end": 3602,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3604,
											"end": 3613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3586,
											"end": 3614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3718,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3710,
											"end": 3718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3710,
											"end": 3729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3744,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3736,
											"end": 3744,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3736,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3846,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E"
										},
										{
											"begin": 3848,
											"end": 3855,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3857,
											"end": 3864,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3875,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3821,
											"end": 3876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3876,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2553,
											"end": 3880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 3880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 594,
											"end": 617,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 594,
											"end": 617,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 594,
											"end": 617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 2408,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1677,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1827,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1891,
											"end": 1892,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1957,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1964,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1960,
											"end": 1961,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1960,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1960,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2101,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2101,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2123,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2123,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2123,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2224,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2210,
											"end": 2215,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2210,
											"end": 2215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2215,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2210,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2210,
											"end": 2219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2209,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2205,
											"end": 2224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2205,
											"end": 2224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2089,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 2243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2316,
											"end": 2317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2312,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2311,
											"end": 2317,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2307,
											"end": 2343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2330,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2343,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2307,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1818,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1595,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1431,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1496,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1579,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1583,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1591,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1578,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1595,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3547,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3405,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 3533,
											"end": 3538,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3515,
											"end": 3539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3506,
											"end": 3540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3488,
											"end": 3541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3541,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 3488,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3612,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3667,
											"end": 3672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3636,
											"end": 3673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3673,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3636,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3673,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3673,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3825,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3685,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3758,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 3813,
											"end": 3818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3782,
											"end": 3819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 3819,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 3782,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3990,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3831,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 3977,
											"end": 3982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3932,
											"end": 3983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3983,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 3932,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3927,
											"end": 3930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4103,
											"end": 4107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4143,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4130,
											"end": 4139,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4126,
											"end": 4144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4154,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 4236,
											"end": 4237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4234,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4238,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4212,
											"end": 4218,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4154,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4154,
											"end": 4239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4154,
											"end": 4239,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 4154,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4370,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4252,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 4357,
											"end": 4362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4339,
											"end": 4363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4337,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4327,
											"end": 4364,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4469,
											"end": 4473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4509,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 4588,
											"end": 4589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4577,
											"end": 4586,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4570,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4520,
											"end": 4591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4591,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 4520,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4695,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4703,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4748,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4734,
											"end": 4743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4732,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4744,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 4752,
											"end": 4831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4872,
											"end": 4873,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 4942,
											"end": 4949,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4922,
											"end": 4931,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4897,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4950,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4999,
											"end": 5001,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 5070,
											"end": 5077,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5050,
											"end": 5059,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5046,
											"end": 5068,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 5025,
											"end": 5078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5078,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 5088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5127,
											"end": 5129,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5153,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5198,
											"end": 5205,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5187,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5196,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5153,
											"end": 5206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5206,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5153,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5143,
											"end": 5206,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5143,
											"end": 5206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 5223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5315,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5229,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5308,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5297,
											"end": 5302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5309,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5433,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5321,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 5420,
											"end": 5425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5404,
											"end": 5426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5426,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 5404,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5427,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5555,
											"end": 5564,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 5643,
											"end": 5644,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5619,
											"end": 5625,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5579,
											"end": 5646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5646,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 5579,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5718,
											"end": 5724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5746,
											"end": 5753,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5765,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5770,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5773,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 5963,
											"end": 5970,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5954,
											"end": 5960,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5939,
											"end": 5961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 5918,
											"end": 5971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5908,
											"end": 5971,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5908,
											"end": 5971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 5981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6112,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5994,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6081,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6099,
											"end": 6104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6081,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6081,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6081,
											"end": 6105,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6081,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6118,
											"end": 6340,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 6118,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6215,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6249,
											"end": 6251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6238,
											"end": 6247,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6252,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6262,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6330,
											"end": 6331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6328,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6315,
											"end": 6332,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6306,
											"end": 6312,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6262,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 6262,
											"end": 6333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6262,
											"end": 6333,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6262,
											"end": 6333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6118,
											"end": 6340,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6118,
											"end": 6340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6118,
											"end": 6340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6118,
											"end": 6340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6118,
											"end": 6340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6346,
											"end": 6820,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 6346,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6422,
											"end": 6428,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6459,
											"end": 6468,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6457,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6446,
											"end": 6469,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6442,
											"end": 6474,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6439,
											"end": 6558,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6439,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 6439,
											"end": 6558,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 6477,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6477,
											"end": 6556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6556,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 6477,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6439,
											"end": 6558,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 6439,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6597,
											"end": 6598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 6667,
											"end": 6674,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6664,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6647,
											"end": 6656,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6643,
											"end": 6665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6622,
											"end": 6675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6675,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 6622,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6612,
											"end": 6675,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6612,
											"end": 6675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6724,
											"end": 6726,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 6795,
											"end": 6802,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6792,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6775,
											"end": 6784,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6750,
											"end": 6803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6803,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 6750,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6740,
											"end": 6803,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6740,
											"end": 6803,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6695,
											"end": 6813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6346,
											"end": 6820,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6346,
											"end": 6820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6346,
											"end": 6820,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6346,
											"end": 6820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6346,
											"end": 6820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6346,
											"end": 6820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6826,
											"end": 7300,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 6826,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6902,
											"end": 6908,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6951,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6939,
											"end": 6948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6926,
											"end": 6949,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6922,
											"end": 6954,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 7038,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 7038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 6919,
											"end": 7038,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6957,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 6957,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6957,
											"end": 7036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6957,
											"end": 7036,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 6957,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 7038,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 6919,
											"end": 7038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7102,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 7147,
											"end": 7154,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7138,
											"end": 7144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7136,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 7102,
											"end": 7155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7155,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 7102,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7092,
											"end": 7155,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7092,
											"end": 7155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7048,
											"end": 7165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7206,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7230,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 7275,
											"end": 7282,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7266,
											"end": 7272,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7255,
											"end": 7264,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 7230,
											"end": 7283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7283,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 7230,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7283,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7175,
											"end": 7293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6826,
											"end": 7300,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6826,
											"end": 7300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6826,
											"end": 7300,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6826,
											"end": 7300,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6826,
											"end": 7300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6826,
											"end": 7300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7306,
											"end": 7486,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 7306,
											"end": 7486,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7354,
											"end": 7431,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7351,
											"end": 7352,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7344,
											"end": 7432,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7451,
											"end": 7455,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 7448,
											"end": 7449,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7441,
											"end": 7456,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7475,
											"end": 7479,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7472,
											"end": 7473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7465,
											"end": 7480,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7492,
											"end": 7812,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7492,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7536,
											"end": 7542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7574,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7567,
											"end": 7571,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7563,
											"end": 7575,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7553,
											"end": 7575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7553,
											"end": 7575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7620,
											"end": 7621,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7622,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 7631,
											"end": 7712,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7697,
											"end": 7701,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 7689,
											"end": 7695,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7685,
											"end": 7702,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7675,
											"end": 7702,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7675,
											"end": 7702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7712,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 7631,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7759,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7751,
											"end": 7757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 7762,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7728,
											"end": 7746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7725,
											"end": 7763,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7722,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 7722,
											"end": 7806,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 7778,
											"end": 7796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7722,
											"end": 7806,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 7722,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7543,
											"end": 7812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7492,
											"end": 7812,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7492,
											"end": 7812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7492,
											"end": 7812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7492,
											"end": 7812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7818,
											"end": 7987,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 7818,
											"end": 7987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E7473206D757374206265203E203000000000000000000000000000"
										},
										{
											"begin": 7954,
											"end": 7955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7942,
											"end": 7956,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7980,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7818,
											"end": 7987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7818,
											"end": 7987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8359,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 7993,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8135,
											"end": 8138,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8156,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 8220,
											"end": 8222,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 8215,
											"end": 8218,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8156,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 8156,
											"end": 8223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8156,
											"end": 8223,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 8156,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 8321,
											"end": 8324,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 8232,
											"end": 8325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8325,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 8232,
											"end": 8325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8350,
											"end": 8352,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8345,
											"end": 8348,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8341,
											"end": 8353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8359,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8784,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 8365,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8535,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8569,
											"end": 8571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8558,
											"end": 8567,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8572,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8572,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8608,
											"end": 8628,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8604,
											"end": 8605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8593,
											"end": 8602,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8589,
											"end": 8606,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8582,
											"end": 8629,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8646,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 8772,
											"end": 8776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8646,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 8646,
											"end": 8777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8646,
											"end": 8777,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 8646,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8638,
											"end": 8777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8638,
											"end": 8777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8784,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8790,
											"end": 9232,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 8790,
											"end": 9232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8939,
											"end": 8943,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 8979,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8966,
											"end": 8975,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8954,
											"end": 8980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8954,
											"end": 8980,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 9061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 9058,
											"end": 9059,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9047,
											"end": 9056,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9043,
											"end": 9060,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9034,
											"end": 9040,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 9061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 8990,
											"end": 9061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 9061,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 8990,
											"end": 9061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 9139,
											"end": 9141,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9128,
											"end": 9137,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9124,
											"end": 9142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9115,
											"end": 9121,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 9071,
											"end": 9143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9143,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 9071,
											"end": 9143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 9221,
											"end": 9223,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9210,
											"end": 9219,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9197,
											"end": 9203,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 9153,
											"end": 9225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9225,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 9153,
											"end": 9225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8790,
											"end": 9232,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8790,
											"end": 9232,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8790,
											"end": 9232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8790,
											"end": 9232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8790,
											"end": 9232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8790,
											"end": 9232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8790,
											"end": 9232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9238,
											"end": 9354,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 9238,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 9323,
											"end": 9328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 9308,
											"end": 9329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9329,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 9308,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9301,
											"end": 9306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9288,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 9288,
											"end": 9348,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9344,
											"end": 9345,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9341,
											"end": 9342,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9346,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9288,
											"end": 9348,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 9288,
											"end": 9348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9238,
											"end": 9354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9238,
											"end": 9354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9360,
											"end": 9497,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 9360,
											"end": 9497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9414,
											"end": 9419,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9445,
											"end": 9451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9452,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9452,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9452,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 9485,
											"end": 9490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 9461,
											"end": 9491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9491,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 9461,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9360,
											"end": 9497,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9360,
											"end": 9497,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9360,
											"end": 9497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9360,
											"end": 9497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9360,
											"end": 9497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9848,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 9503,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9570,
											"end": 9576,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9619,
											"end": 9621,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9607,
											"end": 9616,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9598,
											"end": 9605,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9594,
											"end": 9617,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9590,
											"end": 9622,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9706,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 9587,
											"end": 9706,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9625,
											"end": 9704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 9625,
											"end": 9704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 9625,
											"end": 9704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9625,
											"end": 9704,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 9625,
											"end": 9704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9706,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 9587,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9745,
											"end": 9746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9770,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 9823,
											"end": 9830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 9820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9803,
											"end": 9812,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9799,
											"end": 9821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9770,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 9770,
											"end": 9831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9770,
											"end": 9831,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 9770,
											"end": 9831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9760,
											"end": 9831,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9760,
											"end": 9831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9716,
											"end": 9841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9848,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9848,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9854,
											"end": 10034,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 9854,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9902,
											"end": 9979,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9899,
											"end": 9900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9980,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9999,
											"end": 10003,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 9996,
											"end": 9997,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9989,
											"end": 10004,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10023,
											"end": 10027,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10020,
											"end": 10021,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10028,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10040,
											"end": 10450,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 10040,
											"end": 10450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10080,
											"end": 10087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 10121,
											"end": 10122,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 10103,
											"end": 10123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10098,
											"end": 10123,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10098,
											"end": 10123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 10155,
											"end": 10156,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 10137,
											"end": 10157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10132,
											"end": 10157,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10132,
											"end": 10157,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10192,
											"end": 10193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10189,
											"end": 10190,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10214,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 10232,
											"end": 10243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10214,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 10214,
											"end": 10244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10214,
											"end": 10244,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 10214,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10244,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10393,
											"end": 10394,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10384,
											"end": 10391,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10380,
											"end": 10395,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10377,
											"end": 10378,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10374,
											"end": 10396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10354,
											"end": 10355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10347,
											"end": 10356,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10410,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 10304,
											"end": 10443,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10423,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 10423,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 10423,
											"end": 10441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10423,
											"end": 10441,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 10423,
											"end": 10441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10443,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 10304,
											"end": 10443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10088,
											"end": 10450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10040,
											"end": 10450,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10040,
											"end": 10450,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10040,
											"end": 10450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10040,
											"end": 10450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10040,
											"end": 10450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10456,
											"end": 10636,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 10456,
											"end": 10636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10504,
											"end": 10581,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10501,
											"end": 10502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10494,
											"end": 10582,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 10598,
											"end": 10599,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10606,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10625,
											"end": 10629,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10622,
											"end": 10623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10615,
											"end": 10630,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10642,
											"end": 10827,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 10642,
											"end": 10827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10682,
											"end": 10683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10699,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 10717,
											"end": 10718,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10699,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 10699,
											"end": 10719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10699,
											"end": 10719,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 10699,
											"end": 10719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10694,
											"end": 10719,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10694,
											"end": 10719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10733,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 10751,
											"end": 10752,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10733,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 10733,
											"end": 10753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10733,
											"end": 10753,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 10733,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10728,
											"end": 10753,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10728,
											"end": 10753,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10772,
											"end": 10773,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 10762,
											"end": 10797,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 10777,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 10777,
											"end": 10795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10795,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 10777,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10797,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 10762,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10819,
											"end": 10820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10816,
											"end": 10817,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10812,
											"end": 10821,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10807,
											"end": 10821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10807,
											"end": 10821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10642,
											"end": 10827,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10642,
											"end": 10827,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10642,
											"end": 10827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10642,
											"end": 10827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10642,
											"end": 10827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 11024,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 10833,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 10876,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10892,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 10910,
											"end": 10911,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10892,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 10892,
											"end": 10912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10892,
											"end": 10912,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 10892,
											"end": 10912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10887,
											"end": 10912,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10887,
											"end": 10912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10926,
											"end": 10946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 10944,
											"end": 10945,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10926,
											"end": 10946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 10926,
											"end": 10946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10926,
											"end": 10946,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 10926,
											"end": 10946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10921,
											"end": 10946,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10921,
											"end": 10946,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10969,
											"end": 10970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10966,
											"end": 10967,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10962,
											"end": 10971,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10955,
											"end": 10971,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10955,
											"end": 10971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10990,
											"end": 10993,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10987,
											"end": 10988,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10984,
											"end": 10994,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11017,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 10981,
											"end": 11017,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10997,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 10997,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 10997,
											"end": 11015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10997,
											"end": 11015,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 10997,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11017,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 10981,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 11024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 11024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 11024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 11024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 11024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11179,
											"end": 11183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11217,
											"end": 11219,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11206,
											"end": 11215,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11202,
											"end": 11220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11194,
											"end": 11220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11194,
											"end": 11220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11230,
											"end": 11301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 11298,
											"end": 11299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11287,
											"end": 11296,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11283,
											"end": 11300,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11274,
											"end": 11280,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11230,
											"end": 11301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 11230,
											"end": 11301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11230,
											"end": 11301,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 11230,
											"end": 11301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11311,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 11379,
											"end": 11381,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11368,
											"end": 11377,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11364,
											"end": 11382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11355,
											"end": 11361,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11311,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 11311,
											"end": 11383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11311,
											"end": 11383,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 11311,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11393,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 11461,
											"end": 11463,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11450,
											"end": 11459,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11446,
											"end": 11464,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11437,
											"end": 11443,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11393,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 11393,
											"end": 11465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11393,
											"end": 11465,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 11393,
											"end": 11465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11030,
											"end": 11472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11478,
											"end": 11920,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 11478,
											"end": 11920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11627,
											"end": 11631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11665,
											"end": 11667,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11654,
											"end": 11663,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11650,
											"end": 11668,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11642,
											"end": 11668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11642,
											"end": 11668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11678,
											"end": 11749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 11746,
											"end": 11747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11735,
											"end": 11744,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11731,
											"end": 11748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11722,
											"end": 11728,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11678,
											"end": 11749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 11678,
											"end": 11749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11678,
											"end": 11749,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 11678,
											"end": 11749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11759,
											"end": 11831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 11827,
											"end": 11829,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11816,
											"end": 11825,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11812,
											"end": 11830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11803,
											"end": 11809,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11759,
											"end": 11831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 11759,
											"end": 11831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11759,
											"end": 11831,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 11759,
											"end": 11831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11841,
											"end": 11913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 11909,
											"end": 11911,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11898,
											"end": 11907,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11894,
											"end": 11912,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11885,
											"end": 11891,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11841,
											"end": 11913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 11841,
											"end": 11913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11841,
											"end": 11913,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 11841,
											"end": 11913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11478,
											"end": 11920,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 11478,
											"end": 11920,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11478,
											"end": 11920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11478,
											"end": 11920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11478,
											"end": 11920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11478,
											"end": 11920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11478,
											"end": 11920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/AutomatedMarketMaker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"reserveA()": "dc5fa6c5",
							"reserveB()": "19e36f3b",
							"symbol()": "95d89b41",
							"tokenA()": "0fc63d10",
							"tokenB()": "5f64b55b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"TokensSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"Automated Market Maker with Liquidity Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AutomatedMarketMaker.sol\":\"AutomatedMarketMaker\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/AutomatedMarketMaker.sol\":{\"keccak256\":\"0x845e1ccbe1c5e8eaf9a92c051b9252459a1e159604d9ac61706ce60b4fa99307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6e144cae50624708276ba8fa19e65f648ee5ea7b6c297f401401fd8ce5ab916\",\"dweb:/ipfs/QmQiHE27bwANoDkCaX9iMsRpPoBu2MZptdv8xrLFPefLQL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 794,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "tokenA",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)729"
							},
							{
								"astId": 797,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "tokenB",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)729"
							},
							{
								"astId": 799,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "reserveA",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 801,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "reserveB",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 803,
								"contract": "contracts/AutomatedMarketMaker.sol:AutomatedMarketMaker",
								"label": "owner",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)729": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2891:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2908:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2901:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:1"
									},
									"scope": 651,
									"src": "2830:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3059:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3076:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3069:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3004:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3050:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:1"
									},
									"scope": 651,
									"src": "2985:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3371:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3381:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3397:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3436:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3419:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3456:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3314:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3326:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3365:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:1"
									},
									"scope": 651,
									"src": "3296:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3621:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3638:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3650:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3657:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3631:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3551:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3566:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:1"
									},
									"scope": 651,
									"src": "3532:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4058:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4068:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4084:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4115:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4106:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4147:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3996:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4013:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4052:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:1"
									},
									"scope": 651,
									"src": "3979:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4850:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4860:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4878:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4900:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4957:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4963:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4967:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4947:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4983:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4779:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4805:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:1"
									},
									"scope": 651,
									"src": "4757:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5443:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5457:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5453:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5477:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5498:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5491:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5552:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5548:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5570:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5591:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5584:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5651:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5657:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5661:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5643:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5393:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5407:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5419:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:1"
									},
									"scope": 651,
									"src": "5374:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6064:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6078:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6252:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6266:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6288:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6298:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6321:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6335:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6317:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6342:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6392:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6398:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6411:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6367:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6552:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6562:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6570:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6584:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6074:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6098:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6214:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6230:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6628:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6843:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7002:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7012:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7019:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6624:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6646:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6791:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6807:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7073:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7079:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7083:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7064:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7059:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6006:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6020:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:1"
									},
									"scope": 651,
									"src": "5989:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7495:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7509:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7505:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7532:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7553:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7546:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7625:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7634:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7454:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:1"
									},
									"scope": 651,
									"src": "7439:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8021:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8035:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8031:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8058:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8079:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8072:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8158:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8129:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7980:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7997:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:1"
									},
									"scope": 651,
									"src": "7965:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8781:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8800:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8807:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8816:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8791:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8725:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8740:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8757:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:1"
									},
									"scope": 651,
									"src": "8707:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9780:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9794:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9790:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9815:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9836:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9829:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9892:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9888:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9915:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9936:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9929:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9987:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9999:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10017:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10036:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10032:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10047:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10075:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10082:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10091:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10066:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10061:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9700:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9715:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9732:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9747:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:1"
									},
									"scope": 651,
									"src": "9682:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10485:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10495:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10532:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10522:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10561:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10557:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10599:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10617:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10636:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10613:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10643:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10695:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10704:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10722:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10668:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10793:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10800:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10809:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10828:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10784:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10421:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10436:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:1"
									},
									"scope": 651,
									"src": "10396:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9768:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10770:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/AutomatedMarketMaker.sol": {
				"ast": {
					"absolutePath": "contracts/AutomatedMarketMaker.sol",
					"exportedSymbols": {
						"AutomatedMarketMaker": [
							1040
						],
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 1041,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1041,
							"sourceUnit": 652,
							"src": "65:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 790,
										"name": "ERC20",
										"nameLocations": [
											"213:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "213:5:5"
									},
									"id": 791,
									"nodeType": "InheritanceSpecifier",
									"src": "213:5:5"
								}
							],
							"canonicalName": "AutomatedMarketMaker",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 789,
								"nodeType": "StructuredDocumentation",
								"src": "124:56:5",
								"text": "@title Automated Market Maker with Liquidity Token"
							},
							"fullyImplemented": true,
							"id": 1040,
							"linearizedBaseContracts": [
								1040,
								651,
								41,
								755,
								729,
								785
							],
							"name": "AutomatedMarketMaker",
							"nameLocation": "189:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0fc63d10",
									"id": 794,
									"mutability": "mutable",
									"name": "tokenA",
									"nameLocation": "244:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1040,
									"src": "230:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 793,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 792,
											"name": "IERC20",
											"nameLocations": [
												"230:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "230:6:5"
										},
										"referencedDeclaration": 729,
										"src": "230:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f64b55b",
									"id": 797,
									"mutability": "mutable",
									"name": "tokenB",
									"nameLocation": "271:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1040,
									"src": "257:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 796,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 795,
											"name": "IERC20",
											"nameLocations": [
												"257:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "257:6:5"
										},
										"referencedDeclaration": 729,
										"src": "257:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dc5fa6c5",
									"id": 799,
									"mutability": "mutable",
									"name": "reserveA",
									"nameLocation": "609:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1040,
									"src": "594:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 798,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "594:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "19e36f3b",
									"id": 801,
									"mutability": "mutable",
									"name": "reserveB",
									"nameLocation": "639:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1040,
									"src": "624:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 800,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "624:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 803,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "671:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1040,
									"src": "656:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 802,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "656:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e",
									"id": 813,
									"name": "LiquidityAdded",
									"nameLocation": "848:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "879:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "863:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "897:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "889:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "914:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "906:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "931:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "923:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:79:5"
									},
									"src": "842:100:5"
								},
								{
									"anonymous": false,
									"eventSelector": "1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d",
									"id": 823,
									"name": "LiquidityRemoved",
									"nameLocation": "950:16:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "983:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "967:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1001:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "993:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1018:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1010:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1035:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1027:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:79:5"
									},
									"src": "944:102:5"
								},
								{
									"anonymous": false,
									"eventSelector": "631fb37dba9bbcb8b2f3be2d669e365ae9f1bd850cc57dfe8b7ccd7d979a2bba",
									"id": 835,
									"name": "TokensSwapped",
									"nameLocation": "1054:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"indexed": true,
												"mutability": "mutable",
												"name": "trader",
												"nameLocation": "1084:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1068:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "1100:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1092:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1117:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1109:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "1135:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1127:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1153:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1145:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1067:96:5"
									},
									"src": "1048:116:5"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "1288:85:5",
										"statements": [
											{
												"expression": {
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 850,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "1293:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 852,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "1309:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 851,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1302:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1302:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "1293:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "1293:24:5"
											},
											{
												"expression": {
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 856,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "1322:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 858,
																"name": "_tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "1338:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 857,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1331:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1331:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "1322:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "1322:24:5"
											},
											{
												"expression": {
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 862,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "1351:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 863,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1359:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1363:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1359:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1351:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "1351:18:5"
											}
										]
									},
									"id": 868,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 846,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 841,
													"src": "1272:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 847,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 843,
													"src": "1279:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 848,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 845,
												"name": "ERC20",
												"nameLocations": [
													"1266:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "1266:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1266:21:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "1196:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1188:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "1213:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1205:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1236:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1222:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 840,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1222:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1257:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1243:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 842,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1243:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:78:5"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:0:5"
									},
									"scope": 1040,
									"src": "1176:197:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "1498:97:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 877,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "1578:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 878,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "1582:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1578:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 881,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "1590:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1578:13:5",
													"trueExpression": {
														"id": 880,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "1586:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 876,
												"id": 883,
												"nodeType": "Return",
												"src": "1571:20:5"
											}
										]
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "1440:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1452:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "1444:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1463:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "1455:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1443:22:5"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "1489:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1488:9:5"
									},
									"scope": 1040,
									"src": "1431:164:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "1736:672:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 892,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "1822:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1826:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1822:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 928,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "2311:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2316:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2311:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 936,
													"nodeType": "IfStatement",
													"src": "2307:36:5",
													"trueBody": {
														"id": 935,
														"nodeType": "Block",
														"src": "2319:24:5",
														"statements": [
															{
																"expression": {
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 931,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "2330:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2334:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2330:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 934,
																"nodeType": "ExpressionStatement",
																"src": "2330:5:5"
															}
														]
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "1818:525:5",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "1829:414:5",
													"statements": [
														{
															"expression": {
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 895,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "1887:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 896,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "1891:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1887:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 898,
															"nodeType": "ExpressionStatement",
															"src": "1887:5:5"
														},
														{
															"assignments": [
																900
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 900,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "1956:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 927,
																	"src": "1948:9:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 899,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1948:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 906,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 901,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 887,
																		"src": "1960:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1964:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1960:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1968:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1960:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1948:21:5"
														},
														{
															"body": {
																"id": 925,
																"nodeType": "Block",
																"src": "2103:133:5",
																"statements": [
																	{
																		"expression": {
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 910,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 890,
																				"src": "2118:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 911,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 900,
																				"src": "2122:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2118:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 913,
																		"nodeType": "ExpressionStatement",
																		"src": "2118:5:5"
																	},
																	{
																		"expression": {
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 914,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 900,
																				"src": "2205:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 919,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 917,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 915,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 887,
																									"src": "2210:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 916,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 900,
																									"src": "2214:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "2210:5:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 918,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 900,
																								"src": "2218:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2210:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 920,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2209:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 921,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2223:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2209:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2205:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 924,
																		"nodeType": "ExpressionStatement",
																		"src": "2205:19:5"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 907,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "2096:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 908,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "2100:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2096:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 926,
															"nodeType": "WhileStatement",
															"src": "2089:147:5"
														}
													]
												}
											}
										]
									},
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "1686:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1699:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "1691:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1691:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1690:11:5"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1733:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "1725:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1724:11:5"
									},
									"scope": 1040,
									"src": "1677:731:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "2553:1327:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "amountA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "2626:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2636:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2626:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 950,
																	"name": "amountB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "2641:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2651:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2641:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2626:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e7473206d757374206265203e2030",
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2654:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0",
																"typeString": "literal_string \"Amounts must be > 0\""
															},
															"value": "Amounts must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0",
																"typeString": "literal_string \"Amounts must be > 0\""
															}
														],
														"id": 946,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2618:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2618:58:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "2618:58:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 960,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2776:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2780:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2776:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 964,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2796:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AutomatedMarketMaker_$1040",
																		"typeString": "contract AutomatedMarketMaker"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AutomatedMarketMaker_$1040",
																		"typeString": "contract AutomatedMarketMaker"
																	}
																],
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2788:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2788:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2788:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "2803:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 957,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2756:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2763:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "2756:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2756:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "2756:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 972,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2838:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2842:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2838:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 976,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2858:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AutomatedMarketMaker_$1040",
																		"typeString": "contract AutomatedMarketMaker"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AutomatedMarketMaker_$1040",
																		"typeString": "contract AutomatedMarketMaker"
																	}
																],
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2850:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 974,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2850:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2850:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "2865:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 969,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "2818:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2825:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "2818:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2818:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "2818:55:5"
											},
											{
												"assignments": [
													982
												],
												"declarations": [
													{
														"constant": false,
														"id": 982,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "2962:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 1038,
														"src": "2954:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 981,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2954:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 983,
												"nodeType": "VariableDeclarationStatement",
												"src": "2954:17:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 984,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "3054:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3054:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3071:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3054:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1014,
													"nodeType": "Block",
													"src": "3193:314:5",
													"statements": [
														{
															"expression": {
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 997,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "3288:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 999,
																					"name": "amountA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 941,
																					"src": "3318:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1000,
																						"name": "totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 224,
																						"src": "3328:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 1001,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3328:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3318:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1003,
																				"name": "reserveA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 799,
																				"src": "3344:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3318:34:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1005,
																					"name": "amountB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 943,
																					"src": "3410:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1006,
																						"name": "totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 224,
																						"src": "3420:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 1007,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3420:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3410:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1009,
																				"name": "reserveB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "3436:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3410:34:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 998,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "3300:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3300:199:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3288:211:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1013,
															"nodeType": "ExpressionStatement",
															"src": "3288:211:5"
														}
													]
												},
												"id": 1015,
												"nodeType": "IfStatement",
												"src": "3050:457:5",
												"trueBody": {
													"id": 996,
													"nodeType": "Block",
													"src": "3074:113:5",
													"statements": [
														{
															"expression": {
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 988,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "3144:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 990,
																				"name": "amountA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 941,
																				"src": "3161:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 991,
																				"name": "amountB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 943,
																				"src": "3171:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3161:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 989,
																		"name": "sqrt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "3156:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3156:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3144:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 995,
															"nodeType": "ExpressionStatement",
															"src": "3144:35:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1017,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3592:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3596:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3592:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "3604:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1016,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "3586:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3586:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "3586:28:5"
											},
											{
												"expression": {
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1022,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "3710:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1023,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "3722:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3710:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "3710:19:5"
											},
											{
												"expression": {
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1026,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "3736:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1027,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "3748:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3736:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "3736:19:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1031,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3836:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3840:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3836:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1033,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "3848:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1034,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "3857:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1035,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "3866:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1030,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "3821:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3821:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1037,
												"nodeType": "EmitStatement",
												"src": "3816:60:5"
											}
										]
									},
									"functionSelector": "9cd441da",
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "2497:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2518:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2510:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "2535:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2527:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2527:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2509:34:5"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2553:0:5"
									},
									"scope": 1040,
									"src": "2488:1392:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1041,
							"src": "180:3733:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672,
								813,
								823,
								835
							]
						}
					],
					"src": "37:3880:5"
				},
				"id": 5
			}
		}
	}
}