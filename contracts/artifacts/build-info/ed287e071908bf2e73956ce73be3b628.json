{
	"id": "ed287e071908bf2e73956ce73be3b628",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/fitech.sol": {
				"content": "\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\ncontract Fitech {\r\n\r\n    address owner; //owners address\r\n\r\n    // constructor\r\n    constructor(){\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n    // writing functions\r\n    function donate() public payable {\r\n        // this function receives ETH\r\n        payable (address(this)).transfer(msg.value);\r\n\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n\r\n    function withdraw() public payable {\r\n        // this function will withdraw donation to jimi\r\n\r\n        // Only the owner can withdraw the fund\r\n        // using the Require\r\n        require(msg.sender == owner, \"you are not the owner\");\r\n\r\n        // this is fetching the current balance fo the contract\r\n        uint256 currentBalanceOfThisContract = balance();\r\n\r\n        // this is sending the funds to 'owner'\r\n        payable(owner).transfer(currentBalanceOfThisContract);\r\n\r\n    }\r\n\r\n      function balance() public view returns(uint256) {\r\n        // this function checks the balance of donation\r\n\r\n        return address(this).balance;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/fitech.sol": {
				"Fitech": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/fitech.sol\":63:1085  contract Fitech {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/fitech.sol\":147:197  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/fitech.sol\":179:189  msg.sender */\n  caller\n    /* \"contracts/fitech.sol\":171:176  owner */\n  0x00\n  dup1\n    /* \"contracts/fitech.sol\":171:189  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/fitech.sol\":63:1085  contract Fitech {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/fitech.sol\":63:1085  contract Fitech {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb69ef8a8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xed88c68e\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/fitech.sol\":416:904  function withdraw() public payable {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/fitech.sol\":914:1070  function balance() public view returns(uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fitech.sol\":233:369  function donate() public payable {... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/fitech.sol\":416:904  function withdraw() public payable {... */\n    tag_9:\n        /* \"contracts/fitech.sol\":622:627  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fitech.sol\":608:627  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fitech.sol\":608:618  msg.sender */\n      caller\n        /* \"contracts/fitech.sol\":608:627  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/fitech.sol\":600:653  require(msg.sender == owner, \"you are not the owner\") */\n      tag_18\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_18:\n        /* \"contracts/fitech.sol\":731:767  uint256 currentBalanceOfThisContract */\n      0x00\n        /* \"contracts/fitech.sol\":770:779  balance() */\n      tag_21\n        /* \"contracts/fitech.sol\":770:777  balance */\n      tag_12\n        /* \"contracts/fitech.sol\":770:779  balance() */\n      jump\t// in\n    tag_21:\n        /* \"contracts/fitech.sol\":731:779  uint256 currentBalanceOfThisContract = balance() */\n      swap1\n      pop\n        /* \"contracts/fitech.sol\":849:854  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fitech.sol\":841:864  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fitech.sol\":841:894  payable(owner).transfer(currentBalanceOfThisContract) */\n      0x08fc\n        /* \"contracts/fitech.sol\":865:893  currentBalanceOfThisContract */\n      dup3\n        /* \"contracts/fitech.sol\":841:894  payable(owner).transfer(currentBalanceOfThisContract) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_23:\n      pop\n        /* \"contracts/fitech.sol\":451:904  {... */\n      pop\n        /* \"contracts/fitech.sol\":416:904  function withdraw() public payable {... */\n      jump\t// out\n        /* \"contracts/fitech.sol\":914:1070  function balance() public view returns(uint256) {... */\n    tag_12:\n        /* \"contracts/fitech.sol\":953:960  uint256 */\n      0x00\n        /* \"contracts/fitech.sol\":1039:1060  address(this).balance */\n      selfbalance\n        /* \"contracts/fitech.sol\":1032:1060  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/fitech.sol\":914:1070  function balance() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/fitech.sol\":233:369  function donate() public payable {... */\n    tag_16:\n        /* \"contracts/fitech.sol\":333:337  this */\n      address\n        /* \"contracts/fitech.sol\":316:348  payable (address(this)).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fitech.sol\":316:359  payable (address(this)).transfer(msg.value) */\n      0x08fc\n        /* \"contracts/fitech.sol\":349:358  msg.value */\n      callvalue\n        /* \"contracts/fitech.sol\":316:359  payable (address(this)).transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_27:\n      pop\n        /* \"contracts/fitech.sol\":233:369  function donate() public payable {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_28:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_29:\n        /* \"#utility.yul\":177:201   */\n      tag_36\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_28\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_14:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_38\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_29\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:611   */\n    tag_30:\n        /* \"#utility.yul\":526:537   */\n      0x00\n        /* \"#utility.yul\":560:566   */\n      dup3\n        /* \"#utility.yul\":555:558   */\n      dup3\n        /* \"#utility.yul\":548:567   */\n      mstore\n        /* \"#utility.yul\":600:604   */\n      0x20\n        /* \"#utility.yul\":595:598   */\n      dup3\n        /* \"#utility.yul\":591:605   */\n      add\n        /* \"#utility.yul\":576:605   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:611   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":617:788   */\n    tag_31:\n        /* \"#utility.yul\":757:780   */\n      0x796f7520617265206e6f7420746865206f776e65720000000000000000000000\n        /* \"#utility.yul\":753:754   */\n      0x00\n        /* \"#utility.yul\":745:751   */\n      dup3\n        /* \"#utility.yul\":741:755   */\n      add\n        /* \"#utility.yul\":734:781   */\n      mstore\n        /* \"#utility.yul\":617:788   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1160   */\n    tag_32:\n        /* \"#utility.yul\":936:939   */\n      0x00\n        /* \"#utility.yul\":957:1024   */\n      tag_42\n        /* \"#utility.yul\":1021:1023   */\n      0x15\n        /* \"#utility.yul\":1016:1019   */\n      dup4\n        /* \"#utility.yul\":957:1024   */\n      tag_30\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":950:1024   */\n      swap2\n      pop\n        /* \"#utility.yul\":1033:1126   */\n      tag_43\n        /* \"#utility.yul\":1122:1125   */\n      dup3\n        /* \"#utility.yul\":1033:1126   */\n      tag_31\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1151:1153   */\n      0x20\n        /* \"#utility.yul\":1146:1149   */\n      dup3\n        /* \"#utility.yul\":1142:1154   */\n      add\n        /* \"#utility.yul\":1135:1154   */\n      swap1\n      pop\n        /* \"#utility.yul\":794:1160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1166:1585   */\n    tag_20:\n        /* \"#utility.yul\":1332:1336   */\n      0x00\n        /* \"#utility.yul\":1370:1372   */\n      0x20\n        /* \"#utility.yul\":1359:1368   */\n      dup3\n        /* \"#utility.yul\":1355:1373   */\n      add\n        /* \"#utility.yul\":1347:1373   */\n      swap1\n      pop\n        /* \"#utility.yul\":1419:1428   */\n      dup2\n        /* \"#utility.yul\":1413:1417   */\n      dup2\n        /* \"#utility.yul\":1409:1429   */\n      sub\n        /* \"#utility.yul\":1405:1406   */\n      0x00\n        /* \"#utility.yul\":1394:1403   */\n      dup4\n        /* \"#utility.yul\":1390:1407   */\n      add\n        /* \"#utility.yul\":1383:1430   */\n      mstore\n        /* \"#utility.yul\":1447:1578   */\n      tag_45\n        /* \"#utility.yul\":1573:1577   */\n      dup2\n        /* \"#utility.yul\":1447:1578   */\n      tag_32\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1439:1578   */\n      swap1\n      pop\n        /* \"#utility.yul\":1166:1585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206b32573f0b1e8c0775efe2190e5a11df8b39f69b43ab69e0cd9e0a794358b3cb64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102aa8061005c5f395ff3fe608060405260043610610037575f3560e01c80633ccfd60b14610042578063b69ef8a81461004c578063ed88c68e146100765761003e565b3661003e57005b5f80fd5b61004a610080565b005b348015610057575f80fd5b5061006061017e565b60405161006d91906101e3565b60405180910390f35b61007e610185565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461010d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010490610256565b60405180910390fd5b5f61011661017e565b90505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561017a573d5f803e3d5ffd5b5050565b5f47905090565b3073ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f193505050501580156101c8573d5f803e3d5ffd5b50565b5f819050919050565b6101dd816101cb565b82525050565b5f6020820190506101f65f8301846101d4565b92915050565b5f82825260208201905092915050565b7f796f7520617265206e6f7420746865206f776e657200000000000000000000005f82015250565b5f6102406015836101fc565b915061024b8261020c565b602082019050919050565b5f6020820190508181035f83015261026d81610234565b905091905056fea26469706673582212206b32573f0b1e8c0775efe2190e5a11df8b39f69b43ab69e0cd9e0a794358b3cb64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2AA DUP1 PUSH2 0x5C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x4C JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x76 JUMPI PUSH2 0x3E JUMP JUMPDEST CALLDATASIZE PUSH2 0x3E JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH2 0x80 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x185 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104 SWAP1 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x116 PUSH2 0x17E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x17A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1C8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DD DUP2 PUSH2 0x1CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x796F7520617265206E6F7420746865206F776E65720000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x240 PUSH1 0x15 DUP4 PUSH2 0x1FC JUMP JUMPDEST SWAP2 POP PUSH2 0x24B DUP3 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26D DUP2 PUSH2 0x234 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x32573F0B1E8C0775EFE2190E GAS GT 0xDF DUP12 CODECOPY 0xF6 SWAP12 NUMBER 0xAB PUSH10 0xE0CD9E0A794358B3CB64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "63:1022:0:-:0;;;147:50;;;;;;;;;;179:10;171:5;;:18;;;;;;;;;;;;;;;;;;63:1022;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balance_69": {
									"entryPoint": 382,
									"id": 69,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@donate_28": {
									"entryPoint": 389,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_57": {
									"entryPoint": 128,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1588:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "538:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "555:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "560:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "548:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "576:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "595:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "600:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "591:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "591:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "576:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "510:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "515:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "526:11:1",
														"type": ""
													}
												],
												"src": "442:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "723:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "745:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "753:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "741:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "741:14:1"
																	},
																	{
																		"hexValue": "796f7520617265206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "757:23:1",
																		"type": "",
																		"value": "you are not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "734:47:1"
														}
													]
												},
												"name": "store_literal_in_memory_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "715:6:1",
														"type": ""
													}
												],
												"src": "617:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "940:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "950:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1016:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1021:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "957:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "957:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "950:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1122:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f",
																	"nodeType": "YulIdentifier",
																	"src": "1033:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1033:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1135:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1146:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1135:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "928:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "936:3:1",
														"type": ""
													}
												],
												"src": "794:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1337:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1347:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1359:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1370:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1347:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1394:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1405:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1390:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1390:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1413:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1419:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1409:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1409:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1383:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1383:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1383:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1439:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1573:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1447:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1447:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1439:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1317:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1332:4:1",
														"type": ""
													}
												],
												"src": "1166:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f(memPtr) {\n\n        mstore(add(memPtr, 0), \"you are not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610037575f3560e01c80633ccfd60b14610042578063b69ef8a81461004c578063ed88c68e146100765761003e565b3661003e57005b5f80fd5b61004a610080565b005b348015610057575f80fd5b5061006061017e565b60405161006d91906101e3565b60405180910390f35b61007e610185565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461010d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010490610256565b60405180910390fd5b5f61011661017e565b90505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561017a573d5f803e3d5ffd5b5050565b5f47905090565b3073ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f193505050501580156101c8573d5f803e3d5ffd5b50565b5f819050919050565b6101dd816101cb565b82525050565b5f6020820190506101f65f8301846101d4565b92915050565b5f82825260208201905092915050565b7f796f7520617265206e6f7420746865206f776e657200000000000000000000005f82015250565b5f6102406015836101fc565b915061024b8261020c565b602082019050919050565b5f6020820190508181035f83015261026d81610234565b905091905056fea26469706673582212206b32573f0b1e8c0775efe2190e5a11df8b39f69b43ab69e0cd9e0a794358b3cb64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x4C JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x76 JUMPI PUSH2 0x3E JUMP JUMPDEST CALLDATASIZE PUSH2 0x3E JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH2 0x80 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x185 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104 SWAP1 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x116 PUSH2 0x17E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x17A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1C8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DD DUP2 PUSH2 0x1CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x796F7520617265206E6F7420746865206F776E65720000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x240 PUSH1 0x15 DUP4 PUSH2 0x1FC JUMP JUMPDEST SWAP2 POP PUSH2 0x24B DUP3 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26D DUP2 PUSH2 0x234 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x32573F0B1E8C0775EFE2190E GAS GT 0xDF DUP12 CODECOPY 0xF6 SWAP12 NUMBER 0xAB PUSH10 0xE0CD9E0A794358B3CB64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "63:1022:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;416:488;;;:::i;:::-;;914:156;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;233:136;;;:::i;:::-;;416:488;622:5;;;;;;;;;;608:19;;:10;:19;;;600:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;731:36;770:9;:7;:9::i;:::-;731:48;;849:5;;;;;;;;;;841:23;;:53;865:28;841:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;451:453;416:488::o;914:156::-;953:7;1039:21;1032:28;;914:156;:::o;233:136::-;333:4;316:32;;:43;349:9;316:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:136::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:169::-;526:11;560:6;555:3;548:19;600:4;595:3;591:14;576:29;;442:169;;;;:::o;617:171::-;757:23;753:1;745:6;741:14;734:47;617:171;:::o;794:366::-;936:3;957:67;1021:2;1016:3;957:67;:::i;:::-;950:74;;1033:93;1122:3;1033:93;:::i;:::-;1151:2;1146:3;1142:12;1135:19;;794:366;;;:::o;1166:419::-;1332:4;1370:2;1359:9;1355:18;1347:26;;1419:9;1413:4;1409:20;1405:1;1394:9;1390:17;1383:47;1447:131;1573:4;1447:131;:::i;:::-;1439:139;;1166:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "136400",
								"executionCost": "24446",
								"totalCost": "160846"
							},
							"external": {
								"balance()": "334",
								"donate()": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 1085,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 1085,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 1085,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 147,
									"end": 197,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 147,
									"end": 197,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 147,
									"end": 197,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 147,
									"end": 197,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 147,
									"end": 197,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 147,
									"end": 197,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 197,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 147,
									"end": 197,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 147,
									"end": 197,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 147,
									"end": 197,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 147,
									"end": 197,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 179,
									"end": 189,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 171,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 189,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 171,
									"end": 189,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 171,
									"end": 189,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 171,
									"end": 189,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 171,
									"end": 189,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 171,
									"end": 189,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 171,
									"end": 189,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 171,
									"end": 189,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 171,
									"end": 189,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 171,
									"end": 189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 189,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 171,
									"end": 189,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 171,
									"end": 189,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 171,
									"end": 189,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 171,
									"end": 189,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 171,
									"end": 189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 189,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 171,
									"end": 189,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1085,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 1085,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1085,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 1085,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 1085,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 1085,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 1085,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b32573f0b1e8c0775efe2190e5a11df8b39f69b43ab69e0cd9e0a794358b3cb64736f6c63430008140033",
									".code": [
										{
											"begin": 63,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "B69EF8A8"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "ED88C68E"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 1085,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 416,
											"end": 904,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 416,
											"end": 904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 416,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 416,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 416,
											"end": 904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 416,
											"end": 904,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 416,
											"end": 904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 416,
											"end": 904,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 914,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 914,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 233,
											"end": 369,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 233,
											"end": 369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 233,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 233,
											"end": 369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 369,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 233,
											"end": 369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 369,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 416,
											"end": 904,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 416,
											"end": 904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 622,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 622,
											"end": 627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 622,
											"end": 627,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 627,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 622,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 622,
											"end": 627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 608,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 608,
											"end": 627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 608,
											"end": 618,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 608,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 608,
											"end": 627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 608,
											"end": 627,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 600,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 600,
											"end": 653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 600,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 600,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 600,
											"end": 653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 600,
											"end": 653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 600,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 600,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 600,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 600,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 600,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 600,
											"end": 653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 600,
											"end": 653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 600,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 653,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 600,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 600,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 731,
											"end": 767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 770,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 770,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 779,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 770,
											"end": 779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 731,
											"end": 779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 854,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 849,
											"end": 854,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 854,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 849,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 849,
											"end": 854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 841,
											"end": 864,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 841,
											"end": 864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 865,
											"end": 893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 841,
											"end": 894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 894,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 841,
											"end": 894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 841,
											"end": 894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 451,
											"end": 904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 416,
											"end": 904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 953,
											"end": 960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1060,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 369,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 233,
											"end": 369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 337,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 316,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 316,
											"end": 348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 349,
											"end": 358,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 316,
											"end": 359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 359,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 316,
											"end": 359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 316,
											"end": 359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 442,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 526,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 548,
											"end": 567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 600,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 591,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 576,
											"end": 605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 576,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 788,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 617,
											"end": 788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 757,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "796F7520617265206E6F7420746865206F776E65720000000000000000000000"
										},
										{
											"begin": 753,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 741,
											"end": 755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 734,
											"end": 781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 617,
											"end": 788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 794,
											"end": 1160,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 794,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 936,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1016,
											"end": 1019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 957,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 957,
											"end": 1024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 957,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 957,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1122,
											"end": 1125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1033,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1126,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1033,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 794,
											"end": 1160,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 794,
											"end": 1160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 794,
											"end": 1160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 794,
											"end": 1160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1585,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1413,
											"end": 1417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1429,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1403,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1573,
											"end": 1577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1447,
											"end": 1578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1578,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1447,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/fitech.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balance()": "b69ef8a8",
							"donate()": "ed88c68e",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fitech.sol\":\"Fitech\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fitech.sol\":{\"keccak256\":\"0x60429657890796b73da154c46e9d9c3aa6ef05099db95a261783045a04b4496b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b88c18d7375bbe38d2e37abf2ff76bab83590f3de702055a80ce3b03ec993c29\",\"dweb:/ipfs/QmcJLBYtbmHWd787Shz8C2wCH3LYMQnnau7rnnxHbZni9J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/fitech.sol:Fitech",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/fitech.sol": {
				"ast": {
					"absolutePath": "contracts/fitech.sol",
					"exportedSymbols": {
						"Fitech": [
							70
						]
					},
					"id": 71,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Fitech",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 70,
							"linearizedBaseContracts": [
								70
							],
							"name": "Fitech",
							"nameLocation": "72:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "96:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "88:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "88:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "160:37:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "171:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "179:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "183:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "179:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "171:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "171:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "160:0:0"
									},
									"scope": 70,
									"src": "147:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "266:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 23,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "349:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "353:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "349:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 19,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "333:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Fitech_$70",
																				"typeString": "contract Fitech"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Fitech_$70",
																				"typeString": "contract Fitech"
																			}
																		],
																		"id": 18,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "325:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 17,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "325:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "325:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "316:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 15,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "316:9:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "316:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "340:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "316:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "316:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "316:43:0"
											}
										]
									},
									"functionSelector": "ed88c68e",
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "242:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "266:0:0"
									},
									"scope": 70,
									"src": "233:136:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "404:2:0",
										"statements": []
									},
									"id": 32,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "384:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "404:0:0"
									},
									"scope": 70,
									"src": "377:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "451:453:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 36,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "608:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "612:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "608:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 38,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "622:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "608:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7520617265206e6f7420746865206f776e6572",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "629:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f",
																"typeString": "literal_string \"you are not the owner\""
															},
															"value": "you are not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f",
																"typeString": "literal_string \"you are not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "600:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "600:53:0"
											},
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"mutability": "mutable",
														"name": "currentBalanceOfThisContract",
														"nameLocation": "739:28:0",
														"nodeType": "VariableDeclaration",
														"scope": 56,
														"src": "731:36:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 43,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 47,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 45,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "770:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "770:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "731:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 53,
															"name": "currentBalanceOfThisContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "865:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 50,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "849:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "841:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 48,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "841:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "841:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "856:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "841:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "841:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "841:53:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "425:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "433:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:0:0"
									},
									"scope": 70,
									"src": "416:488:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "962:108:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 64,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1047:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Fitech_$70",
																	"typeString": "contract Fitech"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Fitech_$70",
																	"typeString": "contract Fitech"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1039:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1039:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1039:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1053:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1039:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 61,
												"id": 67,
												"nodeType": "Return",
												"src": "1032:28:0"
											}
										]
									},
									"functionSelector": "b69ef8a8",
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance",
									"nameLocation": "923:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "930:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "953:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:9:0"
									},
									"scope": 70,
									"src": "914:156:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 71,
							"src": "63:1022:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:1050:0"
				},
				"id": 0
			}
		}
	}
}